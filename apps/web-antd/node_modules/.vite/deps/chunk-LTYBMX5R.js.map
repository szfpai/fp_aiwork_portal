{
  "version": 3,
  "sources": ["../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/tooltip/src/tooltip.js"],
  "sourcesContent": ["import { defineComponent, h, ref, nextTick, onBeforeUnmount, onMounted, reactive, watch } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getConfig, createEvent, useSize } from '../../ui';\nimport { getLastZIndex, nextZIndex } from '../../ui/src/utils';\nimport { getAbsolutePos, getDomNode } from '../../ui/src/dom';\nimport { getSlotVNs } from '../../ui/src/vn';\nexport default defineComponent({\n    name: 'VxeTooltip',\n    props: {\n        modelValue: Boolean,\n        size: {\n            type: String,\n            default: () => getConfig().tooltip.size || getConfig().size\n        },\n        selector: String,\n        trigger: {\n            type: String,\n            default: () => getConfig().tooltip.trigger || 'hover'\n        },\n        theme: {\n            type: String,\n            default: () => getConfig().tooltip.theme || 'dark'\n        },\n        content: {\n            type: [String, Number],\n            default: null\n        },\n        useHTML: Boolean,\n        zIndex: [String, Number],\n        popupClassName: [String, Function],\n        isArrow: {\n            type: Boolean,\n            default: () => getConfig().tooltip.isArrow\n        },\n        enterable: {\n            type: Boolean,\n            default: () => getConfig().tooltip.enterable\n        },\n        enterDelay: {\n            type: Number,\n            default: () => getConfig().tooltip.enterDelay\n        },\n        leaveDelay: {\n            type: Number,\n            default: () => getConfig().tooltip.leaveDelay\n        }\n    },\n    emits: [\n        'update:modelValue'\n    ],\n    setup(props, context) {\n        const { slots, emit } = context;\n        const xID = XEUtils.uniqueId();\n        const { computeSize } = useSize(props);\n        const reactData = reactive({\n            target: null,\n            isUpdate: false,\n            visible: false,\n            tipContent: '',\n            tipActive: false,\n            tipTarget: null,\n            tipZindex: 0,\n            tipStore: {\n                style: {},\n                placement: '',\n                arrowStyle: {}\n            }\n        });\n        const internalData = {};\n        const refElem = ref();\n        const refMaps = {\n            refElem\n        };\n        const $xeTooltip = {\n            xID,\n            props,\n            context,\n            reactData,\n            internalData,\n            getRefMaps: () => refMaps\n        };\n        let tooltipMethods = {};\n        const updateTipStyle = () => {\n            const { tipTarget, tipStore } = reactData;\n            if (tipTarget) {\n                const { scrollTop, scrollLeft, visibleWidth } = getDomNode();\n                const { top, left } = getAbsolutePos(tipTarget);\n                const el = refElem.value;\n                const marginSize = 6;\n                const offsetHeight = el.offsetHeight;\n                const offsetWidth = el.offsetWidth;\n                let tipLeft = left;\n                let tipTop = top - offsetHeight - marginSize;\n                tipLeft = Math.max(marginSize, left + Math.floor((tipTarget.offsetWidth - offsetWidth) / 2));\n                if (tipLeft + offsetWidth + marginSize > scrollLeft + visibleWidth) {\n                    tipLeft = scrollLeft + visibleWidth - offsetWidth - marginSize;\n                }\n                if (top - offsetHeight < scrollTop + marginSize) {\n                    tipStore.placement = 'bottom';\n                    tipTop = top + tipTarget.offsetHeight + marginSize;\n                }\n                tipStore.style.top = `${tipTop}px`;\n                tipStore.style.left = `${tipLeft}px`;\n                tipStore.arrowStyle.left = `${left - tipLeft + tipTarget.offsetWidth / 2}px`;\n            }\n        };\n        const updateValue = (value) => {\n            if (value !== reactData.visible) {\n                reactData.visible = value;\n                reactData.isUpdate = true;\n                emit('update:modelValue', value);\n            }\n        };\n        const updateZindex = () => {\n            if (reactData.tipZindex < getLastZIndex()) {\n                reactData.tipZindex = nextZIndex();\n            }\n        };\n        const clickEvent = () => {\n            if (reactData.visible) {\n                tooltipMethods.close();\n            }\n            else {\n                handleVisible(reactData.target || getSelectorEl(), props.content);\n            }\n        };\n        const targetMouseenterEvent = () => {\n            handleVisible(reactData.target || getSelectorEl(), props.content);\n        };\n        const targetMouseleaveEvent = () => {\n            const { trigger, enterable, leaveDelay } = props;\n            reactData.tipActive = false;\n            if (enterable && trigger === 'hover') {\n                setTimeout(() => {\n                    if (!reactData.tipActive) {\n                        tooltipMethods.close();\n                    }\n                }, leaveDelay);\n            }\n            else {\n                tooltipMethods.close();\n            }\n        };\n        const wrapperMouseenterEvent = () => {\n            reactData.tipActive = true;\n        };\n        const wrapperMouseleaveEvent = () => {\n            const { trigger, enterable, leaveDelay } = props;\n            reactData.tipActive = false;\n            if (enterable && trigger === 'hover') {\n                setTimeout(() => {\n                    if (!reactData.tipActive) {\n                        tooltipMethods.close();\n                    }\n                }, leaveDelay);\n            }\n        };\n        const showTip = () => {\n            const { tipStore } = reactData;\n            const el = refElem.value;\n            if (el) {\n                const parentNode = el.parentNode;\n                if (!parentNode) {\n                    document.body.appendChild(el);\n                }\n            }\n            updateValue(true);\n            updateZindex();\n            tipStore.placement = 'top';\n            tipStore.style = { width: 'auto', left: 0, top: 0, zIndex: props.zIndex || reactData.tipZindex };\n            tipStore.arrowStyle = { left: '50%' };\n            return tooltipMethods.updatePlacement();\n        };\n        const handleDelayFn = () => {\n            internalData.showDelayTip = XEUtils.debounce(() => {\n                if (reactData.tipActive) {\n                    showTip();\n                }\n            }, props.enterDelay, { leading: false, trailing: true });\n        };\n        const handleVisible = (target, content) => {\n            const contentSlot = slots.content;\n            if (!contentSlot && (content === '' || XEUtils.eqNull(content))) {\n                return nextTick();\n            }\n            if (target) {\n                const { showDelayTip } = internalData;\n                const { trigger, enterDelay } = props;\n                reactData.tipActive = true;\n                reactData.tipTarget = target;\n                reactData.tipContent = content;\n                if (enterDelay && trigger === 'hover') {\n                    if (showDelayTip) {\n                        showDelayTip();\n                    }\n                }\n                else {\n                    return showTip();\n                }\n            }\n            return nextTick();\n        };\n        const getSelectorEl = () => {\n            const { selector } = props;\n            if (selector) {\n                if (XEUtils.isElement(selector)) {\n                    return selector;\n                }\n                if (XEUtils.isString(selector)) {\n                    return document.querySelector(selector);\n                }\n            }\n            return null;\n        };\n        tooltipMethods = {\n            dispatchEvent(type, params, evnt) {\n                emit(type, createEvent(evnt, { $tooltip: $xeTooltip }, params));\n            },\n            open(target, content) {\n                return handleVisible(target || reactData.target || getSelectorEl(), content);\n            },\n            close() {\n                reactData.tipTarget = null;\n                reactData.tipActive = false;\n                Object.assign(reactData.tipStore, {\n                    style: {},\n                    placement: '',\n                    arrowStyle: null\n                });\n                updateValue(false);\n                return nextTick();\n            },\n            toVisible(target, content) {\n                return handleVisible(target, content);\n            },\n            updatePlacement() {\n                return nextTick().then(() => {\n                    const { tipTarget } = reactData;\n                    const el = refElem.value;\n                    if (tipTarget && el) {\n                        updateTipStyle();\n                        return nextTick().then(() => {\n                            updateTipStyle();\n                        });\n                    }\n                });\n            },\n            isActived() {\n                return reactData.tipActive;\n            },\n            setActived(active) {\n                reactData.tipActive = !!active;\n            }\n        };\n        Object.assign($xeTooltip, tooltipMethods);\n        const renderContent = () => {\n            const { useHTML } = props;\n            const { tipContent } = reactData;\n            const contentSlot = slots.content;\n            if (contentSlot) {\n                return h('div', {\n                    key: 1,\n                    class: 'vxe-tooltip--content'\n                }, getSlotVNs(contentSlot({})));\n            }\n            if (useHTML) {\n                return h('div', {\n                    key: 2,\n                    class: 'vxe-tooltip--content',\n                    innerHTML: tipContent\n                });\n            }\n            return h('div', {\n                key: 3,\n                class: 'vxe-tooltip--content'\n            }, `${tipContent}`);\n        };\n        const renderVN = () => {\n            const { popupClassName, theme, isArrow, enterable } = props;\n            const { tipActive, visible, tipStore } = reactData;\n            const defaultSlot = slots.default;\n            const vSize = computeSize.value;\n            let ons;\n            if (enterable) {\n                ons = {\n                    onMouseenter: wrapperMouseenterEvent,\n                    onMouseleave: wrapperMouseleaveEvent\n                };\n            }\n            return h('div', Object.assign({ ref: refElem, class: ['vxe-tooltip--wrapper', `theme--${theme}`, popupClassName ? (XEUtils.isFunction(popupClassName) ? popupClassName({ $tooltip: $xeTooltip }) : popupClassName) : '', {\n                        [`size--${vSize}`]: vSize,\n                        [`placement--${tipStore.placement}`]: tipStore.placement,\n                        'is--enterable': enterable,\n                        'is--visible': visible,\n                        'is--arrow': isArrow,\n                        'is--active': tipActive\n                    }], style: tipStore.style }, ons), [\n                renderContent(),\n                h('div', {\n                    class: 'vxe-tooltip--arrow',\n                    style: tipStore.arrowStyle\n                }),\n                ...(defaultSlot ? getSlotVNs(defaultSlot({})) : [])\n            ]);\n        };\n        watch(() => props.enterDelay, () => {\n            handleDelayFn();\n        });\n        watch(() => props.content, (val) => {\n            reactData.tipContent = val;\n        });\n        watch(() => props.modelValue, (val) => {\n            if (!reactData.isUpdate) {\n                if (val) {\n                    handleVisible(reactData.target || getSelectorEl(), props.content);\n                }\n                else {\n                    tooltipMethods.close();\n                }\n            }\n            reactData.isUpdate = false;\n        });\n        onMounted(() => {\n            nextTick(() => {\n                const { trigger, content } = props;\n                const wrapperElem = refElem.value;\n                if (wrapperElem) {\n                    const parentNode = wrapperElem.parentNode;\n                    if (parentNode) {\n                        reactData.tipContent = content;\n                        reactData.tipZindex = nextZIndex();\n                        XEUtils.arrayEach(wrapperElem.children, (elem, index) => {\n                            if (index > 1) {\n                                parentNode.insertBefore(elem, wrapperElem);\n                                if (!reactData.target) {\n                                    reactData.target = elem;\n                                }\n                            }\n                        });\n                        parentNode.removeChild(wrapperElem);\n                        const { target } = reactData;\n                        if (target) {\n                            if (trigger === 'hover') {\n                                target.onmouseenter = targetMouseenterEvent;\n                                target.onmouseleave = targetMouseleaveEvent;\n                            }\n                            else if (trigger === 'click') {\n                                target.onclick = clickEvent;\n                            }\n                        }\n                        if (props.modelValue) {\n                            handleVisible(target || getSelectorEl(), content);\n                        }\n                    }\n                }\n            });\n        });\n        onBeforeUnmount(() => {\n            const { target } = reactData;\n            const wrapperElem = refElem.value;\n            if (target) {\n                target.onmouseenter = null;\n                target.onmouseleave = null;\n                target.onclick = null;\n            }\n            if (wrapperElem) {\n                const parentNode = wrapperElem.parentNode;\n                if (parentNode) {\n                    parentNode.removeChild(wrapperElem);\n                }\n            }\n        });\n        handleDelayFn();\n        $xeTooltip.renderVN = renderVN;\n        return $xeTooltip;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,sBAAoB;AAKpB,IAAO,kBAAQ,gBAAgB;AAAA,EAC3B,MAAM;AAAA,EACN,OAAO;AAAA,IACH,YAAY;AAAA,IACZ,MAAM;AAAA,MACF,MAAM;AAAA,MACN,SAAS,MAAM,UAAU,EAAE,QAAQ,QAAQ,UAAU,EAAE;AAAA,IAC3D;AAAA,IACA,UAAU;AAAA,IACV,SAAS;AAAA,MACL,MAAM;AAAA,MACN,SAAS,MAAM,UAAU,EAAE,QAAQ,WAAW;AAAA,IAClD;AAAA,IACA,OAAO;AAAA,MACH,MAAM;AAAA,MACN,SAAS,MAAM,UAAU,EAAE,QAAQ,SAAS;AAAA,IAChD;AAAA,IACA,SAAS;AAAA,MACL,MAAM,CAAC,QAAQ,MAAM;AAAA,MACrB,SAAS;AAAA,IACb;AAAA,IACA,SAAS;AAAA,IACT,QAAQ,CAAC,QAAQ,MAAM;AAAA,IACvB,gBAAgB,CAAC,QAAQ,QAAQ;AAAA,IACjC,SAAS;AAAA,MACL,MAAM;AAAA,MACN,SAAS,MAAM,UAAU,EAAE,QAAQ;AAAA,IACvC;AAAA,IACA,WAAW;AAAA,MACP,MAAM;AAAA,MACN,SAAS,MAAM,UAAU,EAAE,QAAQ;AAAA,IACvC;AAAA,IACA,YAAY;AAAA,MACR,MAAM;AAAA,MACN,SAAS,MAAM,UAAU,EAAE,QAAQ;AAAA,IACvC;AAAA,IACA,YAAY;AAAA,MACR,MAAM;AAAA,MACN,SAAS,MAAM,UAAU,EAAE,QAAQ;AAAA,IACvC;AAAA,EACJ;AAAA,EACA,OAAO;AAAA,IACH;AAAA,EACJ;AAAA,EACA,MAAM,OAAO,SAAS;AAClB,UAAM,EAAE,OAAO,KAAK,IAAI;AACxB,UAAM,MAAM,gBAAAA,QAAQ,SAAS;AAC7B,UAAM,EAAE,YAAY,IAAI,QAAQ,KAAK;AACrC,UAAM,YAAY,SAAS;AAAA,MACvB,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,UAAU;AAAA,QACN,OAAO,CAAC;AAAA,QACR,WAAW;AAAA,QACX,YAAY,CAAC;AAAA,MACjB;AAAA,IACJ,CAAC;AACD,UAAM,eAAe,CAAC;AACtB,UAAM,UAAU,IAAI;AACpB,UAAM,UAAU;AAAA,MACZ;AAAA,IACJ;AACA,UAAM,aAAa;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,YAAY,MAAM;AAAA,IACtB;AACA,QAAI,iBAAiB,CAAC;AACtB,UAAM,iBAAiB,MAAM;AACzB,YAAM,EAAE,WAAW,SAAS,IAAI;AAChC,UAAI,WAAW;AACX,cAAM,EAAE,WAAW,YAAY,aAAa,IAAI,WAAW;AAC3D,cAAM,EAAE,KAAK,KAAK,IAAI,eAAe,SAAS;AAC9C,cAAM,KAAK,QAAQ;AACnB,cAAM,aAAa;AACnB,cAAM,eAAe,GAAG;AACxB,cAAM,cAAc,GAAG;AACvB,YAAI,UAAU;AACd,YAAI,SAAS,MAAM,eAAe;AAClC,kBAAU,KAAK,IAAI,YAAY,OAAO,KAAK,OAAO,UAAU,cAAc,eAAe,CAAC,CAAC;AAC3F,YAAI,UAAU,cAAc,aAAa,aAAa,cAAc;AAChE,oBAAU,aAAa,eAAe,cAAc;AAAA,QACxD;AACA,YAAI,MAAM,eAAe,YAAY,YAAY;AAC7C,mBAAS,YAAY;AACrB,mBAAS,MAAM,UAAU,eAAe;AAAA,QAC5C;AACA,iBAAS,MAAM,MAAM,GAAG,MAAM;AAC9B,iBAAS,MAAM,OAAO,GAAG,OAAO;AAChC,iBAAS,WAAW,OAAO,GAAG,OAAO,UAAU,UAAU,cAAc,CAAC;AAAA,MAC5E;AAAA,IACJ;AACA,UAAM,cAAc,CAAC,UAAU;AAC3B,UAAI,UAAU,UAAU,SAAS;AAC7B,kBAAU,UAAU;AACpB,kBAAU,WAAW;AACrB,aAAK,qBAAqB,KAAK;AAAA,MACnC;AAAA,IACJ;AACA,UAAM,eAAe,MAAM;AACvB,UAAI,UAAU,YAAY,cAAc,GAAG;AACvC,kBAAU,YAAY,WAAW;AAAA,MACrC;AAAA,IACJ;AACA,UAAM,aAAa,MAAM;AACrB,UAAI,UAAU,SAAS;AACnB,uBAAe,MAAM;AAAA,MACzB,OACK;AACD,sBAAc,UAAU,UAAU,cAAc,GAAG,MAAM,OAAO;AAAA,MACpE;AAAA,IACJ;AACA,UAAM,wBAAwB,MAAM;AAChC,oBAAc,UAAU,UAAU,cAAc,GAAG,MAAM,OAAO;AAAA,IACpE;AACA,UAAM,wBAAwB,MAAM;AAChC,YAAM,EAAE,SAAS,WAAW,WAAW,IAAI;AAC3C,gBAAU,YAAY;AACtB,UAAI,aAAa,YAAY,SAAS;AAClC,mBAAW,MAAM;AACb,cAAI,CAAC,UAAU,WAAW;AACtB,2BAAe,MAAM;AAAA,UACzB;AAAA,QACJ,GAAG,UAAU;AAAA,MACjB,OACK;AACD,uBAAe,MAAM;AAAA,MACzB;AAAA,IACJ;AACA,UAAM,yBAAyB,MAAM;AACjC,gBAAU,YAAY;AAAA,IAC1B;AACA,UAAM,yBAAyB,MAAM;AACjC,YAAM,EAAE,SAAS,WAAW,WAAW,IAAI;AAC3C,gBAAU,YAAY;AACtB,UAAI,aAAa,YAAY,SAAS;AAClC,mBAAW,MAAM;AACb,cAAI,CAAC,UAAU,WAAW;AACtB,2BAAe,MAAM;AAAA,UACzB;AAAA,QACJ,GAAG,UAAU;AAAA,MACjB;AAAA,IACJ;AACA,UAAM,UAAU,MAAM;AAClB,YAAM,EAAE,SAAS,IAAI;AACrB,YAAM,KAAK,QAAQ;AACnB,UAAI,IAAI;AACJ,cAAM,aAAa,GAAG;AACtB,YAAI,CAAC,YAAY;AACb,mBAAS,KAAK,YAAY,EAAE;AAAA,QAChC;AAAA,MACJ;AACA,kBAAY,IAAI;AAChB,mBAAa;AACb,eAAS,YAAY;AACrB,eAAS,QAAQ,EAAE,OAAO,QAAQ,MAAM,GAAG,KAAK,GAAG,QAAQ,MAAM,UAAU,UAAU,UAAU;AAC/F,eAAS,aAAa,EAAE,MAAM,MAAM;AACpC,aAAO,eAAe,gBAAgB;AAAA,IAC1C;AACA,UAAM,gBAAgB,MAAM;AACxB,mBAAa,eAAe,gBAAAA,QAAQ,SAAS,MAAM;AAC/C,YAAI,UAAU,WAAW;AACrB,kBAAQ;AAAA,QACZ;AAAA,MACJ,GAAG,MAAM,YAAY,EAAE,SAAS,OAAO,UAAU,KAAK,CAAC;AAAA,IAC3D;AACA,UAAM,gBAAgB,CAAC,QAAQ,YAAY;AACvC,YAAM,cAAc,MAAM;AAC1B,UAAI,CAAC,gBAAgB,YAAY,MAAM,gBAAAA,QAAQ,OAAO,OAAO,IAAI;AAC7D,eAAO,SAAS;AAAA,MACpB;AACA,UAAI,QAAQ;AACR,cAAM,EAAE,aAAa,IAAI;AACzB,cAAM,EAAE,SAAS,WAAW,IAAI;AAChC,kBAAU,YAAY;AACtB,kBAAU,YAAY;AACtB,kBAAU,aAAa;AACvB,YAAI,cAAc,YAAY,SAAS;AACnC,cAAI,cAAc;AACd,yBAAa;AAAA,UACjB;AAAA,QACJ,OACK;AACD,iBAAO,QAAQ;AAAA,QACnB;AAAA,MACJ;AACA,aAAO,SAAS;AAAA,IACpB;AACA,UAAM,gBAAgB,MAAM;AACxB,YAAM,EAAE,SAAS,IAAI;AACrB,UAAI,UAAU;AACV,YAAI,gBAAAA,QAAQ,UAAU,QAAQ,GAAG;AAC7B,iBAAO;AAAA,QACX;AACA,YAAI,gBAAAA,QAAQ,SAAS,QAAQ,GAAG;AAC5B,iBAAO,SAAS,cAAc,QAAQ;AAAA,QAC1C;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AACA,qBAAiB;AAAA,MACb,cAAc,MAAM,QAAQ,MAAM;AAC9B,aAAK,MAAM,YAAY,MAAM,EAAE,UAAU,WAAW,GAAG,MAAM,CAAC;AAAA,MAClE;AAAA,MACA,KAAK,QAAQ,SAAS;AAClB,eAAO,cAAc,UAAU,UAAU,UAAU,cAAc,GAAG,OAAO;AAAA,MAC/E;AAAA,MACA,QAAQ;AACJ,kBAAU,YAAY;AACtB,kBAAU,YAAY;AACtB,eAAO,OAAO,UAAU,UAAU;AAAA,UAC9B,OAAO,CAAC;AAAA,UACR,WAAW;AAAA,UACX,YAAY;AAAA,QAChB,CAAC;AACD,oBAAY,KAAK;AACjB,eAAO,SAAS;AAAA,MACpB;AAAA,MACA,UAAU,QAAQ,SAAS;AACvB,eAAO,cAAc,QAAQ,OAAO;AAAA,MACxC;AAAA,MACA,kBAAkB;AACd,eAAO,SAAS,EAAE,KAAK,MAAM;AACzB,gBAAM,EAAE,UAAU,IAAI;AACtB,gBAAM,KAAK,QAAQ;AACnB,cAAI,aAAa,IAAI;AACjB,2BAAe;AACf,mBAAO,SAAS,EAAE,KAAK,MAAM;AACzB,6BAAe;AAAA,YACnB,CAAC;AAAA,UACL;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,MACA,YAAY;AACR,eAAO,UAAU;AAAA,MACrB;AAAA,MACA,WAAW,QAAQ;AACf,kBAAU,YAAY,CAAC,CAAC;AAAA,MAC5B;AAAA,IACJ;AACA,WAAO,OAAO,YAAY,cAAc;AACxC,UAAM,gBAAgB,MAAM;AACxB,YAAM,EAAE,QAAQ,IAAI;AACpB,YAAM,EAAE,WAAW,IAAI;AACvB,YAAM,cAAc,MAAM;AAC1B,UAAI,aAAa;AACb,eAAO,EAAE,OAAO;AAAA,UACZ,KAAK;AAAA,UACL,OAAO;AAAA,QACX,GAAG,WAAW,YAAY,CAAC,CAAC,CAAC,CAAC;AAAA,MAClC;AACA,UAAI,SAAS;AACT,eAAO,EAAE,OAAO;AAAA,UACZ,KAAK;AAAA,UACL,OAAO;AAAA,UACP,WAAW;AAAA,QACf,CAAC;AAAA,MACL;AACA,aAAO,EAAE,OAAO;AAAA,QACZ,KAAK;AAAA,QACL,OAAO;AAAA,MACX,GAAG,GAAG,UAAU,EAAE;AAAA,IACtB;AACA,UAAM,WAAW,MAAM;AACnB,YAAM,EAAE,gBAAgB,OAAO,SAAS,UAAU,IAAI;AACtD,YAAM,EAAE,WAAW,SAAS,SAAS,IAAI;AACzC,YAAM,cAAc,MAAM;AAC1B,YAAM,QAAQ,YAAY;AAC1B,UAAI;AACJ,UAAI,WAAW;AACX,cAAM;AAAA,UACF,cAAc;AAAA,UACd,cAAc;AAAA,QAClB;AAAA,MACJ;AACA,aAAO,EAAE,OAAO,OAAO,OAAO,EAAE,KAAK,SAAS,OAAO,CAAC,wBAAwB,UAAU,KAAK,IAAI,iBAAkB,gBAAAA,QAAQ,WAAW,cAAc,IAAI,eAAe,EAAE,UAAU,WAAW,CAAC,IAAI,iBAAkB,IAAI;AAAA,QAC7M,CAAC,SAAS,KAAK,EAAE,GAAG;AAAA,QACpB,CAAC,cAAc,SAAS,SAAS,EAAE,GAAG,SAAS;AAAA,QAC/C,iBAAiB;AAAA,QACjB,eAAe;AAAA,QACf,aAAa;AAAA,QACb,cAAc;AAAA,MAClB,CAAC,GAAG,OAAO,SAAS,MAAM,GAAG,GAAG,GAAG;AAAA,QACvC,cAAc;AAAA,QACd,EAAE,OAAO;AAAA,UACL,OAAO;AAAA,UACP,OAAO,SAAS;AAAA,QACpB,CAAC;AAAA,QACD,GAAI,cAAc,WAAW,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC;AAAA,MACrD,CAAC;AAAA,IACL;AACA,UAAM,MAAM,MAAM,YAAY,MAAM;AAChC,oBAAc;AAAA,IAClB,CAAC;AACD,UAAM,MAAM,MAAM,SAAS,CAAC,QAAQ;AAChC,gBAAU,aAAa;AAAA,IAC3B,CAAC;AACD,UAAM,MAAM,MAAM,YAAY,CAAC,QAAQ;AACnC,UAAI,CAAC,UAAU,UAAU;AACrB,YAAI,KAAK;AACL,wBAAc,UAAU,UAAU,cAAc,GAAG,MAAM,OAAO;AAAA,QACpE,OACK;AACD,yBAAe,MAAM;AAAA,QACzB;AAAA,MACJ;AACA,gBAAU,WAAW;AAAA,IACzB,CAAC;AACD,cAAU,MAAM;AACZ,eAAS,MAAM;AACX,cAAM,EAAE,SAAS,QAAQ,IAAI;AAC7B,cAAM,cAAc,QAAQ;AAC5B,YAAI,aAAa;AACb,gBAAM,aAAa,YAAY;AAC/B,cAAI,YAAY;AACZ,sBAAU,aAAa;AACvB,sBAAU,YAAY,WAAW;AACjC,4BAAAA,QAAQ,UAAU,YAAY,UAAU,CAAC,MAAM,UAAU;AACrD,kBAAI,QAAQ,GAAG;AACX,2BAAW,aAAa,MAAM,WAAW;AACzC,oBAAI,CAAC,UAAU,QAAQ;AACnB,4BAAU,SAAS;AAAA,gBACvB;AAAA,cACJ;AAAA,YACJ,CAAC;AACD,uBAAW,YAAY,WAAW;AAClC,kBAAM,EAAE,OAAO,IAAI;AACnB,gBAAI,QAAQ;AACR,kBAAI,YAAY,SAAS;AACrB,uBAAO,eAAe;AACtB,uBAAO,eAAe;AAAA,cAC1B,WACS,YAAY,SAAS;AAC1B,uBAAO,UAAU;AAAA,cACrB;AAAA,YACJ;AACA,gBAAI,MAAM,YAAY;AAClB,4BAAc,UAAU,cAAc,GAAG,OAAO;AAAA,YACpD;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ,CAAC;AAAA,IACL,CAAC;AACD,oBAAgB,MAAM;AAClB,YAAM,EAAE,OAAO,IAAI;AACnB,YAAM,cAAc,QAAQ;AAC5B,UAAI,QAAQ;AACR,eAAO,eAAe;AACtB,eAAO,eAAe;AACtB,eAAO,UAAU;AAAA,MACrB;AACA,UAAI,aAAa;AACb,cAAM,aAAa,YAAY;AAC/B,YAAI,YAAY;AACZ,qBAAW,YAAY,WAAW;AAAA,QACtC;AAAA,MACJ;AAAA,IACJ,CAAC;AACD,kBAAc;AACd,eAAW,WAAW;AACtB,WAAO;AAAA,EACX;AAAA,EACA,SAAS;AACL,WAAO,KAAK,SAAS;AAAA,EACzB;AACJ,CAAC;",
  "names": ["XEUtils"]
}
