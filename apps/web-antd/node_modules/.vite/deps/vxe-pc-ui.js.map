{
  "version": 3,
  "sources": ["../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/components.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/language/zh-CN.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/alert/src/alert.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/alert/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/anchor/src/anchor.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/anchor/src/anchor-link.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/anchor/src/util.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/anchor/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/anchor-link/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/avatar/src/avatar.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/avatar/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/badge/src/badge.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/badge/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/breadcrumb/src/breadcrumb.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/breadcrumb/src/breadcrumb-item.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/breadcrumb/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/breadcrumb-item/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/button/src/button-group.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/button-group/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/calendar/src/calendar.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/calendar/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/card/src/card.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/card/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/carousel/src/carousel.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/carousel/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/carousel/src/util.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/carousel/src/carousel-item.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/carousel-item/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/checkbox/src/group.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/checkbox-group/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/row/src/col.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/col/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/collapse/src/collapse.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/collapse/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/collapse/src/collapse-pane.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/collapse/src/util.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/collapse-pane/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/color-picker/src/color-picker.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/color-picker/src/util.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/color-picker/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/text/src/text.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/countdown/src/countdown.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/countdown/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/date-picker/src/date-picker.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/date-picker/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/drawer/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/drawer/src/drawer.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/empty/src/empty.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/empty/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form/src/form.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form/src/util.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form/src/itemInfo.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form/src/render.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form/src/form-config-item.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form/render/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/src/util.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/src/widget-info.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/src/form-design.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/src/layout-widget.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/src/layout-view-item.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/src/layout-preview.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/tabs/src/tabs.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/tabs/src/tab-pane.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/tabs/src/util.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form/src/form-item.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/switch/src/switch.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/src/default-setting-form.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/src/layout-setting.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/src/form-view.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/src/default-setting-data.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form/src/form-group.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/src/default-style-form.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/src/layout-style.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/src/use/widget-name.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/src/use/widget-view.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/src/use/widget-subtable-view.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/textarea/src/textarea.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/tip/src/tip.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/src/use/widget-prop-data-source.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/render/util.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-text/text-data.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-text/text-form.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-text/text-view.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-row/row-data.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/row/src/row.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-row/row-form.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-row/row-view.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-subtable/subtable-data.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-subtable/subtable-form.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-subtable/subtable-view.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-input/input-data.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-input/input-form.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-input/input-view.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-textarea/textarea-data.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-textarea/textarea-form.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-textarea/textarea-view.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-select/select-data.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-select/select-form.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-select/select-view.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-input/vxe-input-data.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-input/vxe-input-form.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-input/vxe-input-view.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-number-input/vxe-number-input-data.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-number-input/vxe-number-input-form.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-number-input/vxe-number-input-view.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-date-picker/vxe-date-picker-data.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-date-picker/vxe-date-picker-form.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-date-picker/vxe-date-picker-view.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-textarea/vxe-textarea-data.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-textarea/vxe-textarea-form.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-textarea/vxe-textarea-view.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-switch/vxe-switch-data.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-switch/vxe-switch-form.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-switch/vxe-switch-view.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-select/vxe-select-data.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-select/vxe-select-form.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-select/vxe-select-view.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-tree-select/vxe-tree-select-data.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-tree-select/vxe-tree-select-form.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/tree-select/src/tree-select.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/tree/src/tree.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-tree-select/vxe-tree-select-view.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-radio-group/vxe-radio-group-data.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-radio-group/vxe-radio-group-form.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-radio-group/vxe-radio-group-view.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-checkbox-group/vxe-checkbox-group-data.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-checkbox-group/vxe-checkbox-group-form.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-checkbox-group/vxe-checkbox-group-view.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-upload-file/vxe-upload-file-data.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-upload-file/vxe-upload-file-form.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-upload-file/vxe-upload-file-view.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-upload-image/vxe-upload-image-data.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-upload-image/vxe-upload-image-form.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-upload-image/vxe-upload-image-view.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-rate/vxe-rate-data.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-rate/vxe-rate-form.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/rate/src/rate.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-rate/vxe-rate-view.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-slider/vxe-slider-data.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-slider/vxe-slider-form.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/slider/src/slider.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/widget-vxe-slider/vxe-slider-view.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/render/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-design/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-gather/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-group/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-item/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/form-view/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/icon-picker/src/icon-picker.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/icon-picker/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/image/src/image.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/image/src/preview.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/image/src/util.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/image/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/image/src/group.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/image-group/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/image-preview/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/layout-aside/src/layout-aside.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/layout-aside/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/layout-body/src/layout-body.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/layout-body/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/layout-container/src/layout-container.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/layout-container/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/layout-footer/src/layout-footer.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/layout-footer/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/layout-header/src/layout-header.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/layout-header/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/link/src/link.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/link/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/list-design/src/list-design.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/list-design/render/util.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/list-design/src/default-setting-data.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/list-design/src/layout-preview.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/list-design/src/default-setting-form.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/list-design/src/layout-setting.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/list-design/render/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/list-design/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/list-design/src/list-view.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/list-view/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/list/src/list.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/list/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/menu/src/menu.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/menu/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/notice-bar/src/notice-bar.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/notice-bar/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/select/src/util.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/select/src/option-info.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/select/src/optgroup.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/optgroup/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/select/src/option.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/option/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/password-input/src/password-input.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/password-input/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/print/src/page-break.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/print/src/util.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/print-page-break/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/print/src/print.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/print/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/pulldown/src/pulldown.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/pulldown/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/radio/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/radio-button/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/rate/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/result/src/result.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/result/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/row/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/split/src/split.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/split/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/split/src/util.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/split/src/split-pane.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/split-pane/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/slider/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/steps/src/steps.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/steps/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/switch/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/tab-pane/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/table-select/src/table-select.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/table-select/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/tabs/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/tag/src/tag.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/tag/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/text-ellipsis/src/text-ellipsis.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/text-ellipsis/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/text/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/textarea/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/tip/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/tree/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/tree-select/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/watermark/src/watermark.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/watermark/src/util.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/watermark/index.js", "../../../../../node_modules/.pnpm/vxe-pc-ui@4.5.35_vue@3.5.13_typescript@5.8.3_/node_modules/vxe-pc-ui/es/index.esm.js"],
  "sourcesContent": ["import { setI18n, setLanguage, setTheme, setConfig } from '@vxe-ui/core';\nimport zhCN from './language/zh-CN';\nimport VxeAlert from './alert';\nimport VxeAnchor from './anchor';\nimport VxeAnchorLink from './anchor-link';\nimport VxeAvatar from './avatar';\nimport VxeBadge from './badge';\nimport VxeBreadcrumb from './breadcrumb';\nimport VxeBreadcrumbItem from './breadcrumb-item';\nimport VxeButton from './button';\nimport VxeButtonGroup from './button-group';\nimport VxeCalendar from './calendar';\nimport VxeCard from './card';\nimport VxeCarousel from './carousel';\nimport VxeCarouselItem from './carousel-item';\nimport VxeCheckbox from './checkbox';\nimport VxeCheckboxGroup from './checkbox-group';\nimport VxeCol from './col';\nimport VxeCollapse from './collapse';\nimport VxeCollapsePane from './collapse-pane';\nimport VxeColorPicker from './color-picker';\nimport VxeCountdown from './countdown';\nimport VxeDatePicker from './date-picker';\nimport VxeDrawer, { DrawerController } from './drawer';\nimport VxeEmpty from './empty';\nimport VxeForm from './form';\nimport VxeFormDesign from './form-design';\nimport VxeFormGather from './form-gather';\nimport VxeFormGroup from './form-group';\nimport VxeFormItem from './form-item';\nimport VxeFormView from './form-view';\nimport VxeIcon from './icon';\nimport VxeIconPicker from './icon-picker';\nimport VxeImage from './image';\nimport VxeImageGroup from './image-group';\nimport VxeImagePreview from './image-preview';\nimport VxeInput from './input';\nimport VxeLayoutAside from './layout-aside';\nimport VxeLayoutBody from './layout-body';\nimport VxeLayoutContainer from './layout-container';\nimport VxeLayoutFooter from './layout-footer';\nimport VxeLayoutHeader from './layout-header';\nimport VxeLink from './link';\nimport VxeListDesign from './list-design';\nimport VxeListView from './list-view';\nimport VxeList from './list';\nimport VxeLoading, { LoadingController } from './loading';\nimport VxeMenu from './menu';\nimport VxeModal, { ModalController } from './modal';\nimport VxeNoticeBar from './notice-bar';\nimport VxeNumberInput from './number-input';\nimport VxeOptgroup from './optgroup';\nimport VxeOption from './option';\nimport VxePager from './pager';\nimport VxePasswordInput from './password-input';\nimport VxePrintPageBreak from './print-page-break';\nimport VxePrint from './print';\nimport VxePulldown from './pulldown';\nimport VxeRadio from './radio';\nimport VxeRadioButton from './radio-button';\nimport VxeRadioGroup from './radio-group';\nimport VxeRate from './rate';\nimport VxeResult from './result';\nimport VxeRow from './row';\nimport VxeSelect from './select';\nimport VxeSplit from './split';\nimport VxeSplitPane from './split-pane';\nimport VxeSlider from './slider';\nimport VxeSteps from './steps';\nimport VxeSwitch from './switch';\nimport VxeTabPane from './tab-pane';\nimport VxeTableSelect from './table-select';\nimport VxeTabs from './tabs';\nimport VxeTag from './tag';\nimport VxeTextEllipsis from './text-ellipsis';\nimport VxeText from './text';\nimport VxeTextarea from './textarea';\nimport VxeTip from './tip';\nimport VxeTooltip from './tooltip';\nimport VxeTree from './tree';\nimport VxeTreeSelect from './tree-select';\nimport VxeUpload from './upload';\nimport VxeWatermark, { WatermarkController } from './watermark';\nimport { saveLocalFile, readLocalFile } from './upload/src/util';\nimport { printHtml } from './print/src/util';\nconst components = [\n    VxeAlert,\n    VxeAnchor,\n    VxeAnchorLink,\n    VxeAvatar,\n    VxeBadge,\n    VxeBreadcrumb,\n    VxeBreadcrumbItem,\n    VxeButton,\n    VxeButtonGroup,\n    VxeCalendar,\n    VxeCard,\n    VxeCarousel,\n    VxeCarouselItem,\n    VxeCheckbox,\n    VxeCheckboxGroup,\n    VxeCol,\n    VxeCollapse,\n    VxeCollapsePane,\n    VxeColorPicker,\n    VxeCountdown,\n    VxeDatePicker,\n    VxeDrawer,\n    VxeEmpty,\n    VxeForm,\n    VxeFormDesign,\n    VxeFormGather,\n    VxeFormGroup,\n    VxeFormItem,\n    VxeFormView,\n    VxeIcon,\n    VxeIconPicker,\n    VxeImage,\n    VxeImageGroup,\n    VxeImagePreview,\n    VxeInput,\n    VxeLayoutAside,\n    VxeLayoutBody,\n    VxeLayoutContainer,\n    VxeLayoutFooter,\n    VxeLayoutHeader,\n    VxeLink,\n    VxeListDesign,\n    VxeListView,\n    VxeList,\n    VxeLoading,\n    VxeMenu,\n    VxeModal,\n    VxeNoticeBar,\n    VxeNumberInput,\n    VxeOptgroup,\n    VxeOption,\n    VxePager,\n    VxePasswordInput,\n    VxePrintPageBreak,\n    VxePrint,\n    VxePulldown,\n    VxeRadio,\n    VxeRadioButton,\n    VxeRadioGroup,\n    VxeRate,\n    VxeResult,\n    VxeRow,\n    VxeSelect,\n    VxeSplit,\n    VxeSplitPane,\n    VxeSlider,\n    VxeSteps,\n    VxeSwitch,\n    VxeTabPane,\n    VxeTableSelect,\n    VxeTabs,\n    VxeTag,\n    VxeTextEllipsis,\n    VxeText,\n    VxeTextarea,\n    VxeTip,\n    VxeTooltip,\n    VxeTree,\n    VxeTreeSelect,\n    VxeUpload,\n    VxeWatermark\n];\nexport function install(app, options) {\n    setConfig(options);\n    components.forEach(component => app.use(component));\n}\n// 默认中文\nconst defaultLanguage = 'zh-CN';\nsetI18n(defaultLanguage, zhCN);\nsetLanguage(defaultLanguage);\nsetTheme('light');\n// 兼容老版本\nexport const loading = LoadingController;\nexport const modal = ModalController;\nexport const drawer = DrawerController;\nexport const watermark = WatermarkController;\nexport const print = printHtml;\nexport const saveFile = saveLocalFile;\nexport const readFile = readLocalFile;\nexport * from './ui';\n// Components\nexport * from './alert';\nexport * from './anchor';\nexport * from './anchor-link';\nexport * from './avatar';\nexport * from './badge';\nexport * from './breadcrumb';\nexport * from './breadcrumb-item';\nexport * from './button';\nexport * from './button-group';\nexport * from './calendar';\nexport * from './card';\nexport * from './carousel';\nexport * from './carousel-item';\nexport * from './checkbox';\nexport * from './checkbox-group';\nexport * from './col';\nexport * from './collapse';\nexport * from './collapse-pane';\nexport * from './color-picker';\nexport * from './countdown';\nexport * from './date-picker';\nexport * from './drawer';\nexport * from './empty';\nexport * from './form';\nexport * from './form-design';\nexport * from './form-gather';\nexport * from './form-group';\nexport * from './form-item';\nexport * from './form-view';\nexport * from './icon';\nexport * from './icon-picker';\nexport * from './image';\nexport * from './image-group';\nexport * from './image-preview';\nexport * from './input';\nexport * from './layout-aside';\nexport * from './layout-body';\nexport * from './layout-container';\nexport * from './layout-footer';\nexport * from './layout-header';\nexport * from './link';\nexport * from './list-design';\nexport * from './list-view';\nexport * from './list';\nexport * from './loading';\nexport * from './menu';\nexport * from './modal';\nexport * from './notice-bar';\nexport * from './number-input';\nexport * from './optgroup';\nexport * from './option';\nexport * from './pager';\nexport * from './password-input';\nexport * from './print-page-break';\nexport * from './print';\nexport * from './pulldown';\nexport * from './radio';\nexport * from './radio-button';\nexport * from './radio-group';\nexport * from './rate';\nexport * from './result';\nexport * from './row';\nexport * from './select';\nexport * from './split';\nexport * from './split-pane';\nexport * from './slider';\nexport * from './steps';\nexport * from './switch';\nexport * from './tab-pane';\nexport * from './table-select';\nexport * from './tabs';\nexport * from './tag';\nexport * from './text-ellipsis';\nexport * from './text';\nexport * from './textarea';\nexport * from './tip';\nexport * from './tooltip';\nexport * from './tree';\nexport * from './tree-select';\nexport * from './upload';\nexport * from './watermark';\n", "export default {\n    vxe: {\n        base: {\n            pleaseInput: '请输入',\n            pleaseSelect: '请选择',\n            comma: '，',\n            fullStop: '。'\n        },\n        loading: {\n            text: '加载中...'\n        },\n        error: {\n            downErr: '下载失败',\n            errLargeData: '当绑定的数据量过大时，应该请使用 {0}，否则可能会出现卡顿',\n            groupFixed: '如果使用分组表头，冻结列必须按组设置',\n            groupMouseRange: '分组表头与 \"{0}\" 不能同时使用，这可能会出现错误',\n            groupTag: '分组列头应该使用 \"{0}\" 而不是 \"{1}\"，这可能会出现错误',\n            scrollErrProp: '启用虚拟滚动后不支持该参数 \"{0}\"',\n            errConflicts: '参数 \"{0}\" 与 \"{1}\" 有冲突',\n            notSupportProp: '当启用参数 \"{0}\" 时不支持 \"{1}\"，应该为 \"{2}\"，否则将会出现错误',\n            notConflictProp: '当使用 \"{0}\" 时，应该设置 \"{1}\"，否则可能会存在功能冲突',\n            unableInsert: '无法插入到指定位置，请检查参数是否正确',\n            useErr: '安装 \"{0}\" 模块时发生错误，可能顺序不正确，依赖的模块需要在 Table 之前安装',\n            barUnableLink: '工具栏无法关联表格',\n            expandContent: '展开行的插槽应该是 \"content\"，请检查是否正确',\n            reqComp: '缺少 \"{0}\" 组件，请检查是否正确安装。 https://vxeui.com/#/start/useGlobal',\n            reqModule: '缺少 \"{0}\" 模块',\n            reqProp: '缺少必要的 \"{0}\" 参数，这可能会导致出现错误',\n            emptyProp: '参数 \"{0}\" 不允许为空',\n            errProp: '不支持的参数 \"{0}\"，可能为 \"{1}\"',\n            colRepet: 'column.{0}=\"{1}\" 重复了，这可能会导致某些功能无法使用',\n            notFunc: '方法 \"{0}\" 不存在',\n            errFunc: '参数 \"{0}\" 不是一个方法',\n            notValidators: '全局校验 \"{0}\" 不存在',\n            notFormats: '全局格式化 \"{0}\" 不存在',\n            notCommands: '全局指令 \"{0}\" 不存在',\n            notSlot: '插槽 \"{0}\" 不存在',\n            noTree: '树结构不支持 \"{0}\"',\n            notProp: '不支持的参数 \"{0}\"',\n            checkProp: '当数据量过大时可能会导致复选框卡顿，建议设置参数 \"{0}\" 提升渲染速度',\n            coverProp: '\"{0}\" 的参数 \"{1}\" 重复定义，这可能会出现错误',\n            uniField: '字段名 \"{0}\" 重复定义，这可能会出现错误',\n            repeatKey: '主键重复 {0}=\"{1}\"，这可能会出现错误',\n            delFunc: '方法 \"{0}\" 已废弃，请使用 \"{1}\"',\n            delProp: '参数 \"{0}\" 已废弃，请使用 \"{1}\"',\n            delEvent: '事件 \"{0}\" 已废弃，请使用 \"{1}\"',\n            removeProp: '参数 \"{0}\" 已废弃，不建议使用，这可能会导致出现错误',\n            errFormat: '全局的格式化内容应该使用 \"VXETable.formats\" 定义，挂载 \"formatter={0}\" 的方式已不建议使用',\n            notType: '不支持的文件类型 \"{0}\"',\n            notExp: '该浏览器不支持导入/导出功能',\n            impFields: '导入失败，请检查字段名和数据格式是否正确',\n            treeNotImp: '树表格不支持导入',\n            treeCrossDrag: '只能拖拽第一层级',\n            treeDragChild: '父级不能拖拽到自己的子级中',\n            reqPlugin: '扩展插件未安装 \"{1}\" https://vxeui.com/other{0}/#/{1}/install',\n            errMaxRow: '超过支持的最大数据量 {0} 行，这可能会导致出现错误'\n        },\n        table: {\n            emptyText: '暂无数据',\n            allTitle: '全选/取消',\n            seqTitle: '序号',\n            actionTitle: '操作',\n            confirmFilter: '筛选',\n            resetFilter: '重置',\n            allFilter: '全部',\n            sortAsc: '升序：最低到最高',\n            sortDesc: '降序：最高到最低',\n            filter: '对所选的列启用筛选',\n            impSuccess: '成功导入 {0} 条记录',\n            expLoading: '正在导出中',\n            expSuccess: '导出成功',\n            expError: '导出失败',\n            expFilename: '导出_{0}',\n            expOriginFilename: '导出_源_{0}',\n            customTitle: '列设置',\n            customAll: '全部',\n            customConfirm: '确认',\n            customClose: '关闭',\n            customCancel: '取消',\n            customRestore: '恢复默认',\n            maxFixedCol: '最大冻结列的数量不能超过 {0} 个',\n            dragTip: '移动：{0}',\n            resizeColTip: '宽：{0} 像素',\n            resizeRowTip: '高：{0} 像素',\n            rowGroupContentTotal: '{0}（{1}）'\n        },\n        grid: {\n            selectOneRecord: '请至少选择一条记录！',\n            deleteSelectRecord: '您确定要删除所选记录吗？',\n            removeSelectRecord: '您确定要移除所选记录吗？',\n            dataUnchanged: '数据未改动！',\n            delSuccess: '成功删除所选记录！',\n            saveSuccess: '保存成功！',\n            operError: '发生错误，操作失败！'\n        },\n        select: {\n            search: '搜索',\n            loadingText: '加载中',\n            emptyText: '暂无数据'\n        },\n        pager: {\n            goto: '前往',\n            gotoTitle: '页数',\n            pagesize: '{0}条/页',\n            total: '共 {0} 条记录',\n            pageClassifier: '页',\n            homePage: '首页',\n            homePageTitle: '首页',\n            prevPage: '上一页',\n            prevPageTitle: '上一页',\n            nextPage: '下一页',\n            nextPageTitle: '下一页',\n            prevJump: '向上跳页',\n            prevJumpTitle: '向上跳页',\n            nextJump: '向下跳页',\n            nextJumpTitle: '向下跳页',\n            endPage: '末页',\n            endPageTitle: '末页'\n        },\n        alert: {\n            title: '系统提示'\n        },\n        button: {\n            confirm: '确认',\n            cancel: '取消',\n            clear: '清除'\n        },\n        filter: {\n            search: '搜索'\n        },\n        custom: {\n            cstmTitle: '列设置',\n            cstmRestore: '恢复默认',\n            cstmCancel: '取消',\n            cstmConfirm: '确定',\n            cstmConfirmRestore: '请确认是否恢复成默认列配置？',\n            cstmDragTarget: '移动：{0}',\n            setting: {\n                colSort: '排序',\n                sortHelpTip: '点击并拖动图标可以调整列的排序',\n                colTitle: '列标题',\n                colResizable: '列宽（像素）',\n                colVisible: '是否显示',\n                colFixed: '冻结列',\n                colFixedMax: '冻结列（最多 {0} 列）',\n                fixedLeft: '左侧',\n                fixedUnset: '不设置',\n                fixedRight: '右侧'\n            }\n        },\n        import: {\n            modes: {\n                covering: '覆盖方式（直接覆盖表格数据）',\n                insert: '底部追加（在表格的底部追加新数据）',\n                insertTop: '顶部追加（在表格的顶部追加新数据）',\n                insertBottom: '底部追加（在表格的底部追加新数据）'\n            },\n            impTitle: '导入数据',\n            impFile: '文件名',\n            impSelect: '选择文件',\n            impType: '文件类型',\n            impOpts: '参数设置',\n            impMode: '导入模式',\n            impConfirm: '导入',\n            impCancel: '取消'\n        },\n        export: {\n            types: {\n                csv: 'CSV (逗号分隔)(*.csv)',\n                html: '网页(*.html)',\n                xml: 'XML 数据(*.xml)',\n                txt: '文本文件(制表符分隔)(*.txt)',\n                xls: 'Excel 97-2003 工作簿(*.xls)',\n                xlsx: 'Excel 工作簿(*.xlsx)',\n                pdf: 'PDF (*.pdf)'\n            },\n            modes: {\n                empty: '空数据',\n                current: '当前数据（当前页的数据）',\n                selected: '选中数据（当前页选中的数据）',\n                all: '全量数据（包括所有分页的数据）'\n            },\n            printTitle: '打印数据',\n            expTitle: '导出数据',\n            expName: '文件名',\n            expNamePlaceholder: '请输入文件名',\n            expSheetName: '标题',\n            expSheetNamePlaceholder: '请输入标题',\n            expType: '保存类型',\n            expMode: '选择数据',\n            expCurrentColumn: '全部字段',\n            expColumn: '选择字段',\n            expOpts: '参数设置',\n            expOptHeader: '表头',\n            expHeaderTitle: '是否需要表头',\n            expOptFooter: '表尾',\n            expFooterTitle: '是否需要表尾',\n            expOptColgroup: '分组表头',\n            expOptTitle: '列标题',\n            expTitleTitle: '是否为列标题，否则显示为列的字段名',\n            expColgroupTitle: '如果存在，则支持带有分组结构的表头',\n            expOptMerge: '合并',\n            expMergeTitle: '如果存在，则支持带有合并结构的单元格',\n            expOptAllExpand: '展开树',\n            expAllExpandTitle: '如果存在，则支持将带有层级结构的数据全部展开',\n            expOptUseStyle: '样式',\n            expUseStyleTitle: '如果存在，则支持带样式的单元格',\n            expOptOriginal: '源数据',\n            expOriginalTitle: '如果为源数据，则支持导入到表格中',\n            expPrint: '打印',\n            expConfirm: '导出',\n            expCancel: '取消'\n        },\n        modal: {\n            errTitle: '错误提示',\n            zoomMin: '最小化',\n            zoomIn: '最大化',\n            zoomOut: '还原',\n            close: '关闭',\n            miniMaxSize: '最小化窗口的数量不能超过 {0} 个',\n            footPropErr: 'show-footer 仅用于启用表尾，需配合 show-confirm-button | show-cancel-button | 插槽使用'\n        },\n        drawer: {\n            close: '关闭'\n        },\n        form: {\n            folding: '收起',\n            unfolding: '展开'\n        },\n        toolbar: {\n            import: '导入',\n            export: '导出',\n            print: '打印',\n            refresh: '刷新',\n            zoomIn: '全屏',\n            zoomOut: '还原',\n            custom: '列设置',\n            customAll: '全部',\n            customConfirm: '确认',\n            customRestore: '重置',\n            fixedLeft: '冻结在左侧',\n            fixedRight: '冻结在右侧',\n            cancelFixed: '取消冻结列'\n        },\n        datePicker: {\n            yearTitle: '{0} 年'\n        },\n        input: {\n            date: {\n                m1: '01 月',\n                m2: '02 月',\n                m3: '03 月',\n                m4: '04 月',\n                m5: '05 月',\n                m6: '06 月',\n                m7: '07 月',\n                m8: '08 月',\n                m9: '09 月',\n                m10: '10 月',\n                m11: '11 月',\n                m12: '12 月',\n                quarterLabel: '{0} 年',\n                monthLabel: '{0} 年',\n                dayLabel: '{0} 年 {1}',\n                labelFormat: {\n                    date: 'yyyy-MM-dd',\n                    time: 'HH:mm:ss',\n                    datetime: 'yyyy-MM-dd HH:mm:ss',\n                    week: 'yyyy 年第 WW 周',\n                    month: 'yyyy-MM',\n                    quarter: 'yyyy 年第 q 季度',\n                    year: 'yyyy'\n                },\n                weeks: {\n                    w: '周',\n                    w0: '周日',\n                    w1: '周一',\n                    w2: '周二',\n                    w3: '周三',\n                    w4: '周四',\n                    w5: '周五',\n                    w6: '周六'\n                },\n                months: {\n                    m0: '一月',\n                    m1: '二月',\n                    m2: '三月',\n                    m3: '四月',\n                    m4: '五月',\n                    m5: '六月',\n                    m6: '七月',\n                    m7: '八月',\n                    m8: '九月',\n                    m9: '十月',\n                    m10: '十一月',\n                    m11: '十二月'\n                },\n                quarters: {\n                    q1: '第一季度',\n                    q2: '第二季度',\n                    q3: '第三季度',\n                    q4: '第四季度'\n                }\n            }\n        },\n        numberInput: {\n            currencySymbol: '¥'\n        },\n        imagePreview: {\n            popupTitle: '预览',\n            operBtn: {\n                zoomOut: '缩小',\n                zoomIn: '放大',\n                pctFull: '等比例缩放',\n                pct11: '显示原始尺寸',\n                rotateLeft: '向左旋转',\n                rotateRight: '向右旋转',\n                print: '点击打印图片',\n                download: '点击下载图片'\n            }\n        },\n        upload: {\n            fileBtnText: '点击或拖拽上传',\n            imgBtnText: '点击或拖拽上传',\n            dragPlaceholder: '请把文件拖放到这个区域即可上传',\n            imgSizeHint: '单张{0}',\n            imgCountHint: '最多{0}张',\n            fileTypeHint: '支持 {0} 文件类型',\n            fileSizeHint: '单个文件大小不超过{0}',\n            fileCountHint: '最多可上传{0}个文件',\n            uploadTypeErr: '文件类型不匹配！',\n            overCountErr: '最多只能选择{0}个文件！',\n            overCountExtraErr: '已超出最大数量{0}个，超出的{1}个文件将被忽略！',\n            overSizeErr: '文件大小最大不能超过{0}！',\n            reUpload: '重新上传',\n            uploadProgress: '上传中 {0}%',\n            uploadErr: '上传失败',\n            uploadSuccess: '上传成功',\n            moreBtnText: '更多（{0}）',\n            viewItemTitle: '点击查看',\n            morePopup: {\n                readTitle: '查看列表',\n                imageTitle: '上传图片',\n                fileTitle: '上传文件'\n            }\n        },\n        empty: {\n            defText: '暂无数据'\n        },\n        colorPicker: {\n            clear: '清除',\n            confirm: '确认',\n            copySuccess: '已复制到剪贴板：{0}'\n        },\n        formDesign: {\n            formName: '表单名称',\n            defFormTitle: '未命名的表单',\n            widgetPropTab: '控件属性',\n            widgetFormTab: '表单属性',\n            error: {\n                wdFormUni: '该类型的控件在表单中只允许添加一个',\n                wdSubUni: '该类型的控件在子表中只允许添加一个'\n            },\n            styleSetting: {\n                btn: '样式设置',\n                title: '表单的样式设置',\n                layoutTitle: '控件布局',\n                verticalLayout: '上下布局',\n                horizontalLayout: '横向布局',\n                styleTitle: '标题样式',\n                boldTitle: '标题加粗',\n                fontBold: '加粗',\n                fontNormal: '常规',\n                colonTitle: '显示冒号',\n                colonVisible: '显示',\n                colonHidden: '隐藏',\n                alignTitle: '对齐方式',\n                widthTitle: '标题宽度',\n                alignLeft: '居左',\n                alignRight: '居右',\n                unitPx: '像素',\n                unitPct: '百分比'\n            },\n            widget: {\n                group: {\n                    base: '基础控件',\n                    layout: '布局控件',\n                    system: '系统控件',\n                    module: '模块控件',\n                    chart: '图表控件',\n                    advanced: '高级控件'\n                },\n                copyTitle: '副本_{0}',\n                component: {\n                    input: '输入框',\n                    textarea: '文本域',\n                    select: '下拉选择',\n                    row: '一行多列',\n                    title: '标题',\n                    text: '文本',\n                    subtable: '子表',\n                    VxeSwitch: '是/否',\n                    VxeInput: '输入框',\n                    VxeNumberInput: '数字',\n                    VxeDatePicker: '日期',\n                    VxeTextarea: '文本域',\n                    VxeSelect: '下拉选择',\n                    VxeTreeSelect: '树形选择',\n                    VxeRadioGroup: '单选框',\n                    VxeCheckboxGroup: '复选框',\n                    VxeUploadFile: '文件',\n                    VxeUploadImage: '图片',\n                    VxeRate: '评分',\n                    VxeSlider: '滑块'\n                }\n            },\n            widgetProp: {\n                name: '控件名称',\n                placeholder: '提示语',\n                required: '必填校验',\n                multiple: '允许多选',\n                displaySetting: {\n                    name: '显示设置',\n                    pc: '电脑端',\n                    mobile: '手机端',\n                    visible: '显示',\n                    hidden: '隐藏'\n                },\n                dataSource: {\n                    name: '数据源',\n                    defValue: '选项{0}',\n                    addOption: '添加选项',\n                    batchEditOption: '批量编辑',\n                    batchEditTip: '每行对应一个选项，支持从表格、Excel、WPS 中直接复制粘贴。',\n                    batchEditSubTip: '每行对应一个选项，如果是分组，子项可以是空格或制表键开头，支持从表格、Excel、WPS 中直接复制粘贴。',\n                    buildOption: '生成选项'\n                },\n                rowProp: {\n                    colSize: '列数',\n                    col2: '两列',\n                    col3: '三列',\n                    col4: '四列',\n                    col6: '六列',\n                    layout: '布局'\n                },\n                textProp: {\n                    name: '内容',\n                    alignTitle: '对齐方式',\n                    alignLeft: '居左',\n                    alignCenter: '居中',\n                    alignRight: '居右',\n                    colorTitle: '字体颜色',\n                    sizeTitle: '字体大小',\n                    boldTitle: '字体加粗',\n                    fontNormal: '常规',\n                    fontBold: '加粗'\n                },\n                subtableProp: {\n                    seqTitle: '序号',\n                    showSeq: '显示序号',\n                    showCheckbox: '允许多选',\n                    errSubDrag: '子表不支持该控件，请使用其他控件',\n                    colPlace: '将控件拖拽进来'\n                },\n                uploadProp: {\n                    limitFileCount: '文件数量限制',\n                    limitFileSize: '文件大小限制',\n                    multiFile: '允许上传多个文件',\n                    limitImgCount: '图片数量限制',\n                    limitImgSize: '图片大小限制',\n                    multiImg: '允许上传多张图片'\n                }\n            }\n        },\n        listDesign: {\n            fieldSettingTab: '字段设置',\n            listSettingTab: '参数设置',\n            searchTitle: '查询条件',\n            listTitle: '列表字段',\n            searchField: '查询字段',\n            listField: '列表字段',\n            activeBtn: {\n                ActionButtonUpdate: '编辑',\n                ActionButtonDelete: '删除'\n            },\n            search: {\n                addBtn: '编辑',\n                emptyText: '未配置查询条件',\n                editPopupTitle: '编辑查询字段'\n            },\n            searchPopup: {\n                colTitle: '标题',\n                saveBtn: '保存'\n            }\n        },\n        text: {\n            copySuccess: '已复制到剪贴板',\n            copyError: '当前环境不支持该操作'\n        },\n        countdown: {\n            formats: {\n                yyyy: '年',\n                MM: '月',\n                dd: '天',\n                HH: '时',\n                mm: '分',\n                ss: '秒'\n            }\n        },\n        plugins: {\n            extendCellArea: {\n                area: {\n                    mergeErr: '无法对合并单元格进行该操作',\n                    multiErr: '无法对多重选择区域进行该操作',\n                    selectErr: '无法操作指定区域的单元格',\n                    extendErr: '如果延伸的区域包含被合并的单元格，所有合并的单元格需大小相同',\n                    pasteMultiErr: '无法粘贴，需要相同大小的复制的区域和粘贴的区域才能执行此操作',\n                    cpInvalidErr: '该操作无法进行，您选择的区域中存在被禁止的列（{0}）'\n                },\n                fnr: {\n                    title: '查找和替换',\n                    findLabel: '查找',\n                    replaceLabel: '替换',\n                    findTitle: '查找内容：',\n                    replaceTitle: '替换为：',\n                    tabs: {\n                        find: '查找',\n                        replace: '替换'\n                    },\n                    filter: {\n                        re: '正则表达式',\n                        whole: '全词匹配',\n                        sensitive: '区分大小写'\n                    },\n                    btns: {\n                        findNext: '查找下一个',\n                        findAll: '查找全部',\n                        replace: '替换',\n                        replaceAll: '替换全部',\n                        cancel: '取消'\n                    },\n                    header: {\n                        seq: '#',\n                        cell: '单元格',\n                        value: '值'\n                    },\n                    body: {\n                        row: '行：{0}',\n                        col: '列：{0}'\n                    },\n                    empty: '(空值)',\n                    reError: '无效的正则表达式',\n                    recordCount: '已找到 {0} 个单元格',\n                    notCell: '找不到匹配的单元格',\n                    replaceSuccess: '成功替换 {0} 个单元格'\n                }\n            },\n            filterComplexInput: {\n                menus: {\n                    fixedColumn: '冻结列',\n                    fixedGroup: '冻结分组',\n                    cancelFixed: '取消冻结',\n                    fixedLeft: '冻结左侧',\n                    fixedRight: '冻结右侧'\n                },\n                cases: {\n                    equal: '等于',\n                    gt: '大于',\n                    lt: '小于',\n                    begin: '开头是',\n                    endin: '结尾是',\n                    include: '包含',\n                    isSensitive: '区分大小写'\n                }\n            },\n            filterCombination: {\n                menus: {\n                    sort: '排序',\n                    clearSort: '清除排序',\n                    sortAsc: '升序',\n                    sortDesc: '降序',\n                    fixedColumn: '冻结列',\n                    fixedGroup: '冻结分组',\n                    cancelFixed: '取消冻结',\n                    fixedLeft: '冻结左侧',\n                    fixedRight: '冻结右侧',\n                    clearFilter: '清除筛选',\n                    textOption: '文本筛选',\n                    numberOption: '数值筛选'\n                },\n                popup: {\n                    title: '自定义筛选的方式',\n                    currColumnTitle: '当前列：',\n                    and: '与',\n                    or: '或',\n                    describeHtml: '可用 ? 代表单个字符<br/>用 * 代表任意多个字符'\n                },\n                cases: {\n                    equal: '等于',\n                    unequal: '不等于',\n                    gt: '大于',\n                    ge: '大于或等于',\n                    lt: '小于',\n                    le: '小于或等于',\n                    begin: '开头是',\n                    notbegin: '开头不是',\n                    endin: '结尾是',\n                    notendin: '结尾不是',\n                    include: '包含',\n                    exclude: '不包含',\n                    between: '介于',\n                    custom: '自定义筛选',\n                    insensitive: '不区分大小写',\n                    isSensitive: '区分大小写'\n                },\n                empty: '(空白)',\n                notData: '无匹配项'\n            }\n        },\n        pro: {\n            area: {\n                mergeErr: '无法对合并单元格进行该操作',\n                multiErr: '无法对多重选择区域进行该操作',\n                extendErr: '如果延伸的区域包含被合并的单元格，所有合并的单元格需大小相同',\n                pasteMultiErr: '无法粘贴，需要相同大小的复制的区域和粘贴的区域才能执行此操作'\n            },\n            fnr: {\n                title: '查找和替换',\n                findLabel: '查找',\n                replaceLabel: '替换',\n                findTitle: '查找内容：',\n                replaceTitle: '替换为：',\n                tabs: {\n                    find: '查找',\n                    replace: '替换'\n                },\n                filter: {\n                    re: '正则表达式',\n                    whole: '全词匹配',\n                    sensitive: '区分大小写'\n                },\n                btns: {\n                    findNext: '查找下一个',\n                    findAll: '查找全部',\n                    replace: '替换',\n                    replaceAll: '替换全部',\n                    cancel: '取消'\n                },\n                header: {\n                    seq: '#',\n                    cell: '单元格',\n                    value: '值'\n                },\n                empty: '(空值)',\n                reError: '无效的正则表达式',\n                recordCount: '已找到 {0} 个单元格',\n                notCell: '找不到匹配的单元格',\n                replaceSuccess: '成功替换 {0} 个单元格'\n            }\n        },\n        renderer: {\n            search: '搜索',\n            cases: {\n                equal: '等于',\n                unequal: '不等于',\n                gt: '大于',\n                ge: '大于或等于',\n                lt: '小于',\n                le: '小于或等于',\n                begin: '开头是',\n                notbegin: '开头不是',\n                endin: '结尾是',\n                notendin: '结尾不是',\n                include: '包含',\n                exclude: '不包含',\n                between: '介于',\n                custom: '自定义筛选',\n                insensitive: '不区分大小写',\n                isSensitive: '区分大小写'\n            },\n            combination: {\n                menus: {\n                    sort: '排序',\n                    clearSort: '清除排序',\n                    sortAsc: '升序',\n                    sortDesc: '降序',\n                    fixedColumn: '冻结列',\n                    fixedGroup: '冻结分组',\n                    cancelFixed: '取消冻结',\n                    fixedLeft: '冻结到左侧',\n                    fixedRight: '冻结到右侧',\n                    clearFilter: '清除筛选',\n                    textOption: '文本筛选',\n                    numberOption: '数值筛选'\n                },\n                popup: {\n                    title: '自定义筛选的方式',\n                    currColumnTitle: '当前列：',\n                    and: '与',\n                    or: '或',\n                    describeHtml: '可用 ? 代表单个字符<br/>用 * 代表任意多个字符'\n                },\n                empty: '(空白)',\n                notData: '无匹配项'\n            }\n        }\n    }\n};\n", "import { defineComponent, ref, h, reactive, createCommentVNode } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getConfig, getIcon, createEvent } from '../../ui';\nimport { getSlotVNs } from '../../ui/src/vn';\nexport default defineComponent({\n    name: 'VxeAlert',\n    props: {\n        title: {\n            type: [String, Number],\n            default: () => getConfig().alert.title\n        },\n        content: [String, Number],\n        status: String,\n        showIcon: Boolean,\n        showClose: Boolean,\n        icon: {\n            type: String,\n            default: () => getConfig().alert.icon\n        }\n    },\n    emits: [\n        'close'\n    ],\n    setup(props, context) {\n        const { emit, slots } = context;\n        const xID = XEUtils.uniqueId();\n        const refElem = ref();\n        const reactData = reactive({});\n        const refMaps = {\n            refElem\n        };\n        const computeMaps = {};\n        const $xeAlert = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const alertMethods = {\n            dispatchEvent(type, params, evnt) {\n                emit(type, createEvent(evnt, { $alert: $xeAlert }, params));\n            }\n        };\n        const closeEvent = (evnt) => {\n            alertMethods.dispatchEvent('close', {}, evnt);\n        };\n        const alertPrivateMethods = {};\n        Object.assign($xeAlert, alertMethods, alertPrivateMethods);\n        const renderVN = () => {\n            const { status, content, icon, title, showIcon, showClose } = props;\n            const defaultSlot = slots.default;\n            const titleSlot = slots.title;\n            const iconSlot = slots.icon;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-alert', {\n                        [`theme--${status}`]: status\n                    }]\n            }, [\n                iconSlot || (showIcon && status) || icon\n                    ? h('div', {\n                        class: 'vxe-alert--icon'\n                    }, iconSlot\n                        ? getSlotVNs(iconSlot({}))\n                        : [\n                            h('i', {\n                                class: icon || getIcon()[`ALERT_${status === null || status === void 0 ? void 0 : status.toUpperCase()}`]\n                            })\n                        ])\n                    : createCommentVNode(),\n                h('div', {\n                    class: 'vxe-alert--body'\n                }, [\n                    titleSlot || title\n                        ? h('div', {\n                            class: 'vxe-alert--title'\n                        }, titleSlot ? getSlotVNs(titleSlot({})) : XEUtils.toValueString(title))\n                        : createCommentVNode(),\n                    h('div', {\n                        class: 'vxe-alert--content'\n                    }, defaultSlot ? getSlotVNs(defaultSlot({})) : XEUtils.toValueString(content))\n                ]),\n                showClose\n                    ? h('div', {\n                        class: 'vxe-alert--close-btn',\n                        onClick: closeEvent\n                    }, [\n                        h('i', {\n                            class: getIcon().ALERT_CLOSE\n                        })\n                    ])\n                    : createCommentVNode()\n            ]);\n        };\n        $xeAlert.renderVN = renderVN;\n        return $xeAlert;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeAlertComponent from './src/alert';\nimport { dynamicApp } from '../dynamics';\nexport const VxeAlert = Object.assign({}, VxeAlertComponent, {\n    install(app) {\n        app.component(VxeAlertComponent.name, VxeAlertComponent);\n    }\n});\ndynamicApp.use(VxeAlert);\nVxeUI.component(VxeAlertComponent);\nexport const Alert = VxeAlert;\nexport default VxeAlert;\n", "import { defineComponent, ref, h, reactive, provide, nextTick, onBeforeUnmount, onMounted, watch, createCommentVNode, computed } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { createEvent } from '@vxe-ui/core';\nimport { getOffsetPos } from '../../ui/src/dom';\nimport VxeAnchorLinkComponent from './anchor-link';\nexport default defineComponent({\n    name: 'VxeAnchor',\n    props: {\n        modelValue: String,\n        options: Array,\n        container: [String, Object, Function],\n        showMarker: {\n            type: Boolean,\n            default: true\n        }\n    },\n    emits: [\n        'update:modelValue',\n        'change',\n        'click'\n    ],\n    setup(props, context) {\n        const { slots, emit } = context;\n        const xID = XEUtils.uniqueId();\n        const refElem = ref();\n        const refMarkerElem = ref();\n        const reactData = reactive({\n            activeHref: null,\n            staticLinks: [],\n            containerElem: null\n        });\n        const refMaps = {\n            refElem\n        };\n        const computeAllHrefList = computed(() => {\n            const list = [];\n            XEUtils.eachTree(reactData.staticLinks, item => {\n                list.push(item.href || '');\n            }, { children: 'children' });\n            return list;\n        });\n        const computeMaps = {};\n        const $xeAnchor = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const anchorMethods = {\n            dispatchEvent(type, params, evnt) {\n                emit(type, createEvent(evnt, { $anchor: $xeAnchor }, params));\n            }\n        };\n        const getContainerElem = () => {\n            const { container } = props;\n            if (container) {\n                if (XEUtils.isElement(container)) {\n                    return container;\n                }\n                if (XEUtils.isString(container)) {\n                    return document.querySelector(container);\n                }\n                if (XEUtils.isFunction(container)) {\n                    return container({ $anchor: $xeAnchor });\n                }\n            }\n            return null;\n        };\n        const emitEvent = (value) => {\n            reactData.activeHref = value;\n            emit('update:modelValue', value);\n        };\n        const handleContainerScrollEvent = () => {\n            const allHrefList = computeAllHrefList.value;\n            const { containerElem } = reactData;\n            if (containerElem) {\n                const wrapperElList = containerElem.querySelectorAll(allHrefList.map(href => `${href}`).join(','));\n                for (let i = 0; i < wrapperElList.length; i++) {\n                    const wrapperEl = wrapperElList[i];\n                    const wrapperRect = wrapperEl.getBoundingClientRect();\n                    if (wrapperRect.top > 0) {\n                        const href = wrapperEl.id;\n                        reactData.activeHref = `#${href}`;\n                        break;\n                    }\n                }\n            }\n        };\n        const removeContainerElemScroll = () => {\n            const { containerElem } = reactData;\n            if (containerElem) {\n                containerElem.removeEventListener('scroll', handleContainerScrollEvent);\n            }\n        };\n        const updateContainerElem = () => {\n            const containerElem = getContainerElem();\n            reactData.containerElem = containerElem;\n            if (containerElem) {\n                containerElem.addEventListener('scroll', handleContainerScrollEvent, {\n                    passive: false\n                });\n            }\n        };\n        const updateMarkerPos = () => {\n            nextTick(() => {\n                const { activeHref } = reactData;\n                const elem = refElem.value;\n                const markerEl = refMarkerElem.value;\n                if (elem && markerEl) {\n                    if (activeHref) {\n                        const linkEl = elem.querySelector(`[href=\"${activeHref}\"]`);\n                        if (linkEl) {\n                            const { top } = getOffsetPos(linkEl, elem);\n                            markerEl.style.top = `${top}px`;\n                        }\n                    }\n                }\n            });\n        };\n        const anchorPrivateMethods = {\n            handleClickLink(evnt, href) {\n                evnt.preventDefault();\n                const targetEl = document.getElementById(`${href}`.replace('#', ''));\n                if (targetEl) {\n                    targetEl.scrollIntoView({\n                        behavior: 'smooth'\n                    });\n                }\n                emitEvent(href);\n                anchorMethods.dispatchEvent('click', { href }, evnt);\n            }\n        };\n        Object.assign($xeAnchor, anchorMethods, anchorPrivateMethods);\n        const renderSubItems = (options) => {\n            const itemVNs = [];\n            if (options) {\n                options.forEach(item => {\n                    const subItems = item.children;\n                    if (subItems && subItems.length) {\n                        itemVNs.push(h(VxeAnchorLinkComponent, {\n                            content: item.content,\n                            title: item.title,\n                            href: item.href\n                        }, {\n                            sub: () => renderSubItems(subItems)\n                        }));\n                    }\n                    else {\n                        itemVNs.push(h(VxeAnchorLinkComponent, {\n                            content: item.content,\n                            title: item.title,\n                            href: item.href\n                        }));\n                    }\n                });\n            }\n            return itemVNs;\n        };\n        const renderVN = () => {\n            const { options, showMarker } = props;\n            const defaultSlot = slots.default;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-anchor', {\n                        'is--marker': showMarker\n                    }]\n            }, [\n                h('div', {\n                    class: 'vxe-anchor--list'\n                }, defaultSlot ? defaultSlot({}) : renderSubItems(options)),\n                showMarker\n                    ? h('div', {\n                        ref: refMarkerElem,\n                        class: 'vxe-anchor--marker'\n                    })\n                    : createCommentVNode()\n            ]);\n        };\n        watch(() => props.modelValue, (val) => {\n            reactData.activeHref = val;\n        });\n        watch(() => reactData.activeHref, () => {\n            updateMarkerPos();\n        });\n        watch(() => props.container, () => {\n            removeContainerElemScroll();\n            updateContainerElem();\n        });\n        onMounted(() => {\n            nextTick(() => {\n                updateContainerElem();\n            });\n        });\n        onBeforeUnmount(() => {\n            removeContainerElemScroll();\n        });\n        provide('$xeAnchor', $xeAnchor);\n        $xeAnchor.renderVN = renderVN;\n        return $xeAnchor;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { defineComponent, ref, h, computed, reactive, inject, createCommentVNode, onMounted, onUnmounted, provide, watch } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { assembleAnchorLink, destroyAnchorLink } from './util';\nexport default defineComponent({\n    name: 'VxeAnchorLink',\n    props: {\n        content: [String, Number],\n        title: [String, Number],\n        href: String\n    },\n    emits: [],\n    setup(props, context) {\n        const { slots } = context;\n        const $xeAnchor = inject('$xeAnchor', null);\n        const $xeParentAnchorLink = inject('$xeAnchorLink', null);\n        const xID = XEUtils.uniqueId();\n        const refElem = ref();\n        const reactData = reactive({});\n        const linkConfig = reactive({\n            id: xID,\n            href: props.href,\n            children: []\n        });\n        const refMaps = {\n            refElem\n        };\n        const computeIsActive = computed(() => {\n            const { href } = props;\n            if ($xeAnchor) {\n                return $xeAnchor.reactData.activeHref === href;\n            }\n            return null;\n        });\n        const computeMaps = {};\n        const $xeAnchorLink = {\n            xID,\n            props,\n            context,\n            reactData,\n            linkConfig,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const clickEvent = (event) => {\n            const { href } = props;\n            if ($xeAnchor) {\n                $xeAnchor.handleClickLink(event, href);\n            }\n        };\n        watch(() => props.href, (val) => {\n            linkConfig.href = val;\n        });\n        onMounted(() => {\n            const elem = refElem.value;\n            if ($xeAnchor && elem) {\n                assembleAnchorLink($xeAnchor, elem, linkConfig, $xeParentAnchorLink);\n            }\n        });\n        onUnmounted(() => {\n            if ($xeAnchor) {\n                destroyAnchorLink($xeAnchor, linkConfig);\n            }\n        });\n        const renderVN = () => {\n            const { href, content, title } = props;\n            const defaultSlot = slots.default;\n            const subSlot = slots.sub;\n            const isActive = computeIsActive.value;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-anchor-link', {\n                        'is--active': isActive\n                    }]\n            }, [\n                h('a', {\n                    class: 'vxe-anchor-link--item',\n                    href,\n                    title,\n                    onClick: clickEvent\n                }, defaultSlot ? defaultSlot({}) : (XEUtils.toValueString(content))),\n                subSlot\n                    ? h('div', {\n                        class: 'vxe-anchor-link--sub-items'\n                    }, subSlot({}))\n                    : createCommentVNode()\n            ]);\n        };\n        provide('$xeAnchorLink', $xeAnchorLink);\n        $xeAnchorLink.renderVN = renderVN;\n        return $xeAnchorLink;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import XEUtils from 'xe-utils';\nexport function assembleAnchorLink($xeAnchor, elem, linkConfig, $xeParentAnchorLink) {\n    const staticLinks = $xeAnchor.reactData.staticLinks;\n    const parentElem = elem.parentNode;\n    const parentLinkConfig = $xeParentAnchorLink ? $xeParentAnchorLink.linkConfig : null;\n    const parentLinks = parentLinkConfig ? parentLinkConfig.children : staticLinks;\n    if (parentElem && parentLinks) {\n        parentLinks.splice(XEUtils.arrayIndexOf(parentElem.children, elem), 0, linkConfig);\n        $xeAnchor.reactData.staticLinks = staticLinks.slice(0);\n    }\n}\nexport function destroyAnchorLink($xeAnchor, linkConfig) {\n    const staticLinks = $xeAnchor.reactData.staticLinks;\n    const matchObj = XEUtils.findTree(staticLinks, item => item.id === linkConfig.id, { children: 'children' });\n    if (matchObj) {\n        matchObj.items.splice(matchObj.index, 1);\n    }\n    $xeAnchor.reactData.staticLinks = staticLinks.slice(0);\n}\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeAnchorComponent from './src/anchor';\nimport { dynamicApp } from '../dynamics';\nexport const VxeAnchor = Object.assign({}, VxeAnchorComponent, {\n    install(app) {\n        app.component(VxeAnchorComponent.name, VxeAnchorComponent);\n    }\n});\ndynamicApp.use(VxeAnchor);\nVxeUI.component(VxeAnchorComponent);\nexport const Anchor = VxeAnchor;\nexport default VxeAnchor;\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeAnchorLinkComponent from '../anchor/src/anchor-link';\nimport { dynamicApp } from '../dynamics';\nexport const VxeAnchorLink = Object.assign({}, VxeAnchorLinkComponent, {\n    install(app) {\n        app.component(VxeAnchorLinkComponent.name, VxeAnchorLinkComponent);\n    }\n});\ndynamicApp.use(VxeAnchorLink);\nVxeUI.component(VxeAnchorLinkComponent);\nexport const AnchorLink = VxeAnchorLink;\nexport default VxeAnchorLink;\n", "import { defineComponent, ref, h, computed, reactive } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getConfig, createEvent, useSize, renderEmptyElement } from '../../ui';\nimport { toCssUnit } from '../../ui/src/dom';\nexport default defineComponent({\n    name: 'VxeAvatar',\n    props: {\n        count: [String, Number],\n        dot: Boolean,\n        content: [String, Number],\n        icon: String,\n        src: String,\n        width: [String, Number],\n        height: [String, Number],\n        circle: {\n            type: Boolean,\n            default: () => getConfig().avatar.circle\n        },\n        status: {\n            type: String,\n            default: () => getConfig().avatar.status\n        },\n        size: {\n            type: String,\n            default: () => getConfig().avatar.size || getConfig().size\n        }\n    },\n    emits: [],\n    setup(props, context) {\n        const { emit } = context;\n        const xID = XEUtils.uniqueId();\n        const { computeSize } = useSize(props);\n        const refElem = ref();\n        const reactData = reactive({});\n        const refMaps = {\n            refElem\n        };\n        const computeAvatarStyle = computed(() => {\n            const { width, height } = props;\n            const stys = {};\n            if (width) {\n                stys.width = toCssUnit(width);\n            }\n            if (height) {\n                stys.height = toCssUnit(height);\n            }\n            return stys;\n        });\n        const computeCountNum = computed(() => {\n            const { count } = props;\n            return count ? XEUtils.toNumber(count) : 0;\n        });\n        const computeMaps = {};\n        const $xeAvatar = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $avatar: $xeAvatar }, params));\n        };\n        const collapsePaneMethods = {\n            dispatchEvent\n        };\n        const collapsePanePrivateMethods = {};\n        Object.assign($xeAvatar, collapsePaneMethods, collapsePanePrivateMethods);\n        const renderContent = () => {\n            const { icon, content, src } = props;\n            if (icon) {\n                return h('span', {\n                    class: 'vxe-avatar--icon'\n                }, [\n                    h('i', {\n                        class: icon\n                    })\n                ]);\n            }\n            if (content) {\n                return h('span', {\n                    class: 'vxe-avatar--content'\n                }, `${content}`);\n            }\n            if (src) {\n                return h('img', {\n                    class: 'vxe-avatar--img',\n                    src\n                });\n            }\n            return renderEmptyElement($xeAvatar);\n        };\n        const renderVN = () => {\n            const { circle, dot, status } = props;\n            const vSize = computeSize.value;\n            const countNum = computeCountNum.value;\n            const avatarStyle = computeAvatarStyle.value;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-avatar', {\n                        [`size--${vSize}`]: vSize,\n                        [`theme--${status}`]: status,\n                        'is--circle': circle,\n                        'is--dot': dot\n                    }],\n                style: avatarStyle\n            }, [\n                renderContent(),\n                countNum\n                    ? h('span', {\n                        class: 'vxe-avatar--count'\n                    }, countNum > 99 ? '99+' : `${countNum}`)\n                    : renderEmptyElement($xeAvatar)\n            ]);\n        };\n        $xeAvatar.renderVN = renderVN;\n        return $xeAvatar;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeAvatarComponent from './src/avatar';\nimport { dynamicApp } from '../dynamics';\nexport const VxeAvatar = Object.assign({}, VxeAvatarComponent, {\n    install(app) {\n        app.component(VxeAvatarComponent.name, VxeAvatarComponent);\n    }\n});\ndynamicApp.use(VxeAvatar);\nVxeUI.component(VxeAvatarComponent);\nexport const Avatar = VxeAvatar;\nexport default VxeAvatar;\n", "import { defineComponent, ref, h, computed, reactive } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getConfig, createEvent, useSize, renderEmptyElement } from '../../ui';\nexport default defineComponent({\n    name: 'VxeBadge',\n    props: {\n        count: [String, Number],\n        dot: Boolean,\n        content: [String, Number],\n        size: {\n            type: String,\n            default: () => getConfig().badge.size || getConfig().size\n        }\n    },\n    emits: [],\n    setup(props, context) {\n        const { emit, slots } = context;\n        const xID = XEUtils.uniqueId();\n        const refElem = ref();\n        const { computeSize } = useSize(props);\n        const reactData = reactive({});\n        const refMaps = {\n            refElem\n        };\n        const computeCountNum = computed(() => {\n            const { count } = props;\n            return count ? XEUtils.toNumber(count) : 0;\n        });\n        const computeMaps = {};\n        const $xeBadge = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $badge: $xeBadge }, params));\n        };\n        const collapsePaneMethods = {\n            dispatchEvent\n        };\n        const collapsePanePrivateMethods = {};\n        Object.assign($xeBadge, collapsePaneMethods, collapsePanePrivateMethods);\n        const renderVN = () => {\n            const { dot, content } = props;\n            const vSize = computeSize.value;\n            const countNum = computeCountNum.value;\n            const defaultSlot = slots.default;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-badge', {\n                        [`size--${vSize}`]: vSize,\n                        'is--dot': dot\n                    }]\n            }, [\n                defaultSlot || content\n                    ? h('div', {\n                        class: 'vxe-badge--content'\n                    }, defaultSlot ? defaultSlot({}) : `${content || ''}`)\n                    : [],\n                countNum\n                    ? h('span', {\n                        class: 'vxe-badge--count'\n                    }, countNum > 99 ? '99+' : `${countNum}`)\n                    : renderEmptyElement($xeBadge)\n            ]);\n        };\n        $xeBadge.renderVN = renderVN;\n        return $xeBadge;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeBadgeComponent from './src/badge';\nimport { dynamicApp } from '../dynamics';\nexport const VxeBadge = Object.assign({}, VxeBadgeComponent, {\n    install(app) {\n        app.component(VxeBadgeComponent.name, VxeBadgeComponent);\n    }\n});\ndynamicApp.use(VxeBadge);\nVxeUI.component(VxeBadgeComponent);\nexport const Badge = VxeBadge;\nexport default VxeBadge;\n", "import { defineComponent, ref, h, reactive, provide } from 'vue';\nimport { getConfig, createEvent } from '../../ui';\nimport XEUtils from 'xe-utils';\nimport VxeBreadcrumbItemComponent from './breadcrumb-item';\nexport default defineComponent({\n    name: 'VxeBreadcrumb',\n    props: {\n        separator: {\n            type: String,\n            default: () => getConfig().breadcrumb.separator\n        },\n        options: Array\n    },\n    emits: [\n        'click'\n    ],\n    setup(props, context) {\n        const { emit, slots } = context;\n        const xID = XEUtils.uniqueId();\n        const refElem = ref();\n        const reactData = reactive({});\n        const refMaps = {\n            refElem\n        };\n        const computeMaps = {};\n        const $xeBreadcrumb = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const breadcrumbMethods = {\n            dispatchEvent(type, params, evnt) {\n                emit(type, createEvent(evnt, { $breadcrumb: $xeBreadcrumb }, params));\n            }\n        };\n        const breadcrumbPrivateMethods = {\n            handleClickLink(evnt, option) {\n                breadcrumbMethods.dispatchEvent('click', { option }, evnt);\n            }\n        };\n        Object.assign($xeBreadcrumb, breadcrumbMethods, breadcrumbPrivateMethods);\n        const renderItems = () => {\n            const { options } = props;\n            if (options && options.length) {\n                return options.map(item => {\n                    return h(VxeBreadcrumbItemComponent, {\n                        title: item.title,\n                        routerLink: item.routerLink\n                    });\n                });\n            }\n            return [];\n        };\n        const renderVN = () => {\n            const defaultSlot = slots.default;\n            return h('div', {\n                ref: refElem,\n                class: 'vxe-breadcrumb'\n            }, defaultSlot ? defaultSlot({}) : renderItems());\n        };\n        provide('$xeBreadcrumb', $xeBreadcrumb);\n        $xeBreadcrumb.renderVN = renderVN;\n        return $xeBreadcrumb;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { defineComponent, ref, h, reactive, computed, resolveComponent, inject, createCommentVNode } from 'vue';\nimport XEUtils from 'xe-utils';\nexport default defineComponent({\n    name: 'VxeBreadcrumbItem',\n    props: {\n        title: String,\n        routerLink: Object\n    },\n    emits: [],\n    setup(props, context) {\n        const { slots } = context;\n        const xID = XEUtils.uniqueId();\n        const refElem = ref();\n        const $xeBreadcrumb = inject('$xeBreadcrumb', null);\n        const reactData = reactive({});\n        const refMaps = {\n            refElem\n        };\n        const computeSeparator = computed(() => {\n            if ($xeBreadcrumb) {\n                return $xeBreadcrumb.props.separator;\n            }\n            return '';\n        });\n        const clickEvent = (evnt) => {\n            if ($xeBreadcrumb) {\n                const item = {\n                    title: props.title,\n                    routerLink: props.routerLink\n                };\n                $xeBreadcrumb.handleClickLink(evnt, item);\n            }\n        };\n        const computeMaps = {};\n        const $xeBreadcrumbItem = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const renderVN = () => {\n            const { title, routerLink } = props;\n            const separator = computeSeparator.value;\n            const defaultSlot = slots.default;\n            return h('span', {\n                ref: refElem,\n                class: 'vxe-breadcrumb-item',\n                onClick: clickEvent\n            }, [\n                h('span', {\n                    class: 'vxe-breadcrumb-item--content'\n                }, [\n                    routerLink\n                        ? h(resolveComponent('router-link'), {\n                            class: 'vxe-breadcrumb-item--content-link',\n                            title,\n                            to: routerLink\n                        }, {\n                            default() {\n                                return h('span', {\n                                    class: 'vxe-breadcrumb-item--content-text'\n                                }, defaultSlot ? defaultSlot({}) : `${title || ''}`);\n                            }\n                        })\n                        : h('span', {\n                            class: 'vxe-breadcrumb-item--content-text'\n                        }, defaultSlot ? defaultSlot({}) : `${title || ''}`)\n                ]),\n                separator\n                    ? h('span', {\n                        class: 'vxe-breadcrumb-item--separator'\n                    }, `${separator}`)\n                    : createCommentVNode()\n            ]);\n        };\n        $xeBreadcrumbItem.renderVN = renderVN;\n        return $xeBreadcrumbItem;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeBreadcrumbComponent from './src/breadcrumb';\nimport { dynamicApp } from '../dynamics';\nexport const VxeBreadcrumb = Object.assign({}, VxeBreadcrumbComponent, {\n    install(app) {\n        app.component(VxeBreadcrumbComponent.name, VxeBreadcrumbComponent);\n    }\n});\ndynamicApp.use(VxeBreadcrumb);\nVxeUI.component(VxeBreadcrumbComponent);\nexport const Breadcrumb = VxeBreadcrumb;\nexport default VxeBreadcrumb;\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeBreadcrumbItemComponent from '../breadcrumb/src/breadcrumb-item';\nimport { dynamicApp } from '../dynamics';\nexport const VxeBreadcrumbItem = Object.assign({}, VxeBreadcrumbItemComponent, {\n    install(app) {\n        app.component(VxeBreadcrumbItemComponent.name, VxeBreadcrumbItemComponent);\n    }\n});\ndynamicApp.use(VxeBreadcrumbItem);\nVxeUI.component(VxeBreadcrumbItemComponent);\nexport const BreadcrumbItem = VxeBreadcrumbItem;\nexport default VxeBreadcrumbItem;\n", "import { defineComponent, h, reactive, provide, createCommentVNode } from 'vue';\nimport { getConfig, createEvent, useSize, usePermission } from '@vxe-ui/core';\nimport XEUtils from 'xe-utils';\nimport VxeButtonComponent from './button';\nexport default defineComponent({\n    name: 'VxeButtonGroup',\n    props: {\n        options: Array,\n        mode: String,\n        status: String,\n        round: Boolean,\n        vertical: Boolean,\n        circle: Boolean,\n        align: String,\n        className: [String, Function],\n        disabled: Boolean,\n        permissionCode: [String, Number],\n        size: {\n            type: String,\n            default: () => getConfig().buttonGroup.size || getConfig().size\n        }\n    },\n    emits: [\n        'click'\n    ],\n    setup(props, context) {\n        const { slots, emit } = context;\n        const xID = XEUtils.uniqueId();\n        const reactData = reactive({});\n        const computeMaps = {};\n        const $xeButtonGroup = {\n            xID,\n            props,\n            context,\n            reactData,\n            getComputeMaps: () => computeMaps\n        };\n        useSize(props);\n        const { computePermissionInfo } = usePermission(props);\n        const buttonGroupMethods = {\n            dispatchEvent(type, params, evnt) {\n                emit(type, createEvent(evnt, { $buttonGroup: $xeButtonGroup }, params));\n            }\n        };\n        const buttonGroupPrivateMethods = {\n            handleClick(params, evnt) {\n                const { options } = props;\n                const { name } = params;\n                const option = options ? options.find(item => item.name === name) : null;\n                buttonGroupMethods.dispatchEvent('click', Object.assign(Object.assign({}, params), { option }), evnt);\n            }\n        };\n        Object.assign($xeButtonGroup, buttonGroupMethods, buttonGroupPrivateMethods);\n        const renderVN = () => {\n            const { className, options, vertical } = props;\n            const permissionInfo = computePermissionInfo.value;\n            const defaultSlot = slots.default;\n            if (!permissionInfo.visible) {\n                return createCommentVNode();\n            }\n            return h('div', {\n                class: ['vxe-button-group', className ? (XEUtils.isFunction(className) ? className({ $buttonGroup: $xeButtonGroup }) : className) : '', {\n                        'is--vertical': vertical\n                    }]\n            }, defaultSlot\n                ? defaultSlot({})\n                : (options\n                    ? options.map((item, index) => {\n                        return h(VxeButtonComponent, Object.assign({ key: index }, item));\n                    })\n                    : []));\n        };\n        $xeButtonGroup.renderVN = renderVN;\n        provide('$xeButtonGroup', $xeButtonGroup);\n        return $xeButtonGroup;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeButtonGroupComponent from '../button/src/button-group';\nimport { dynamicApp } from '../dynamics';\nexport const VxeButtonGroup = Object.assign({}, VxeButtonGroupComponent, {\n    install(app) {\n        app.component(VxeButtonGroupComponent.name, VxeButtonGroupComponent);\n    }\n});\ndynamicApp.use(VxeButtonGroup);\nVxeUI.component(VxeButtonGroupComponent);\nexport const ButtonGroup = VxeButtonGroup;\nexport default VxeButtonGroup;\n", "import { defineComponent, h, ref, computed, reactive, watch, onMounted } from 'vue';\nimport { getConfig, getI18n, createEvent, useSize, renderEmptyElement } from '../../ui';\nimport { getDateQuarter } from '../../date-picker/src/util';\nimport { toCssUnit } from '../../ui/src/dom';\nimport VxeButtonComponent from '../../button/src/button';\nimport XEUtils from 'xe-utils';\nexport default defineComponent({\n    name: 'VxeCalendar',\n    props: {\n        modelValue: [String, Number, Date],\n        type: {\n            type: String,\n            default: 'date'\n        },\n        className: String,\n        size: {\n            type: String,\n            default: () => getConfig().calendar.size || getConfig().size\n        },\n        multiple: Boolean,\n        width: [String, Number],\n        height: [String, Number],\n        // date、week、month、quarter、year\n        minDate: {\n            type: [String, Number, Date],\n            default: () => getConfig().calendar.minDate\n        },\n        maxDate: {\n            type: [String, Number, Date],\n            default: () => getConfig().calendar.maxDate\n        },\n        startDay: {\n            type: [String, Number],\n            default: () => getConfig().calendar.startDay\n        },\n        labelFormat: String,\n        valueFormat: String,\n        festivalMethod: {\n            type: Function,\n            default: () => getConfig().calendar.festivalMethod\n        },\n        disabledMethod: {\n            type: Function,\n            default: () => getConfig().calendar.disabledMethod\n        },\n        // week\n        selectDay: {\n            type: [String, Number],\n            default: () => getConfig().calendar.selectDay\n        }\n    },\n    emits: [\n        'update:modelValue',\n        'change',\n        'click',\n        'date-prev',\n        'date-today',\n        'date-next',\n        'view-change'\n    ],\n    setup(props, context) {\n        const { emit } = context;\n        const xID = XEUtils.uniqueId();\n        const { computeSize } = useSize(props);\n        const reactData = reactive({\n            selectValue: props.modelValue,\n            inputValue: props.modelValue,\n            datePanelValue: null,\n            datePanelLabel: '',\n            datePanelType: 'day',\n            selectMonth: null,\n            currentDate: null\n        });\n        const internalData = {\n            yearSize: 12,\n            monthSize: 20,\n            quarterSize: 8\n        };\n        const refElem = ref();\n        const refMaps = {\n            refElem\n        };\n        const $xeCalendar = {\n            xID,\n            props,\n            context,\n            reactData,\n            internalData,\n            getRefMaps: () => refMaps\n        };\n        const computeCalendarStyle = computed(() => {\n            const { height, width } = props;\n            const stys = {};\n            if (width) {\n                stys.width = toCssUnit(width);\n            }\n            if (height) {\n                stys.height = toCssUnit(height);\n            }\n            return stys;\n        });\n        const computeIsDisabled = computed(() => {\n            return false;\n        });\n        const computeIsCalendarType = computed(() => {\n            return ['date', 'week', 'month', 'quarter', 'year'].indexOf(props.type) > -1;\n        });\n        const computeDateStartTime = computed(() => {\n            return props.minDate ? XEUtils.toStringDate(props.minDate) : null;\n        });\n        const computeDateEndTime = computed(() => {\n            return props.maxDate ? XEUtils.toStringDate(props.maxDate) : null;\n        });\n        const computeSupportMultiples = computed(() => {\n            return ['date', 'week', 'month', 'quarter', 'year'].indexOf(props.type) > -1;\n        });\n        const computeDateListValue = computed(() => {\n            const { multiple } = props;\n            const { selectValue } = reactData;\n            const isCalendarType = computeIsCalendarType.value;\n            const dateValueFormat = computeDateValueFormat.value;\n            if (multiple && selectValue && isCalendarType) {\n                return XEUtils.toValueString(selectValue).split(',').map(item => {\n                    const date = parseDate(item, dateValueFormat);\n                    if (XEUtils.isValidDate(date)) {\n                        return date;\n                    }\n                    return null;\n                });\n            }\n            return [];\n        });\n        const computeDateMultipleValue = computed(() => {\n            const dateListValue = computeDateListValue.value;\n            const dateValueFormat = computeDateValueFormat.value;\n            return dateListValue.map(date => XEUtils.toDateString(date, dateValueFormat));\n        });\n        const computeDateMultipleLabel = computed(() => {\n            const dateListValue = computeDateListValue.value;\n            const dateLabelFormat = computeDateLabelFormat.value;\n            return dateListValue.map(date => XEUtils.toDateString(date, dateLabelFormat)).join(', ');\n        });\n        const computeDateValueFormat = computed(() => {\n            const { valueFormat } = props;\n            if (valueFormat) {\n                return valueFormat;\n            }\n            return 'yyyy-MM-dd';\n        });\n        const computeDateValue = computed(() => {\n            const { selectValue } = reactData;\n            const isCalendarType = computeIsCalendarType.value;\n            const dateValueFormat = computeDateValueFormat.value;\n            let val = null;\n            if (selectValue && isCalendarType) {\n                const date = parseDate(selectValue, dateValueFormat);\n                if (XEUtils.isValidDate(date)) {\n                    val = date;\n                }\n            }\n            return val;\n        });\n        const computeIsDisabledPrevDateBtn = computed(() => {\n            const dateStartTime = computeDateStartTime.value;\n            const { selectMonth } = reactData;\n            if (selectMonth && dateStartTime) {\n                return selectMonth <= dateStartTime;\n            }\n            return false;\n        });\n        const computeIsDisabledNextDateBtn = computed(() => {\n            const dateEndTime = computeDateEndTime.value;\n            const { selectMonth } = reactData;\n            if (selectMonth && dateEndTime) {\n                return selectMonth >= dateEndTime;\n            }\n            return false;\n        });\n        const computeDateHMSTime = computed(() => {\n            const dateValue = computeDateValue.value;\n            return dateValue ? (dateValue.getHours() * 3600 + dateValue.getMinutes() * 60 + dateValue.getSeconds()) * 1000 : 0;\n        });\n        const computeDateLabelFormat = computed(() => {\n            const { labelFormat } = props;\n            const isCalendarType = computeIsCalendarType.value;\n            const dateValueFormat = computeDateValueFormat.value;\n            if (isCalendarType) {\n                return labelFormat || dateValueFormat || getI18n(`vxe.input.date.labelFormat.${props.type}`);\n            }\n            return null;\n        });\n        const computeYearList = computed(() => {\n            const { selectMonth, currentDate } = reactData;\n            const { yearSize } = internalData;\n            const years = [];\n            if (selectMonth && currentDate) {\n                const currFullYear = currentDate.getFullYear();\n                const selectFullYear = selectMonth.getFullYear();\n                const startYearDate = new Date(selectFullYear - selectFullYear % yearSize, 0, 1);\n                for (let index = -4; index < yearSize + 4; index++) {\n                    const date = XEUtils.getWhatYear(startYearDate, index, 'first');\n                    const itemFullYear = date.getFullYear();\n                    years.push({\n                        date,\n                        isCurrent: true,\n                        isPrev: index < 0,\n                        isNow: currFullYear === itemFullYear,\n                        isNext: index >= yearSize,\n                        year: itemFullYear\n                    });\n                }\n            }\n            return years;\n        });\n        const computeSelectDatePanelObj = computed(() => {\n            const isCalendarType = computeIsCalendarType.value;\n            let y = '';\n            let m = '';\n            if (isCalendarType) {\n                const { datePanelType, selectMonth } = reactData;\n                const yearList = computeYearList.value;\n                let year = '';\n                let month;\n                if (selectMonth) {\n                    year = selectMonth.getFullYear();\n                    month = selectMonth.getMonth() + 1;\n                }\n                if (datePanelType === 'quarter' || datePanelType === 'month') {\n                    y = `${year}`;\n                }\n                else if (datePanelType === 'year') {\n                    y = yearList.length ? `${yearList[0].year} - ${yearList[yearList.length - 1].year}` : '';\n                }\n                else {\n                    y = `${year}`;\n                    m = month ? getI18n(`vxe.input.date.m${month}`) : '-';\n                }\n            }\n            return {\n                y,\n                m\n            };\n        });\n        const computeFirstDayOfWeek = computed(() => {\n            const { startDay } = props;\n            return XEUtils.toNumber(startDay);\n        });\n        const computeWeekDatas = computed(() => {\n            const weeks = [];\n            const isCalendarType = computeIsCalendarType.value;\n            if (isCalendarType) {\n                let sWeek = computeFirstDayOfWeek.value;\n                weeks.push(sWeek);\n                for (let index = 0; index < 6; index++) {\n                    if (sWeek >= 6) {\n                        sWeek = 0;\n                    }\n                    else {\n                        sWeek++;\n                    }\n                    weeks.push(sWeek);\n                }\n            }\n            return weeks;\n        });\n        const computeDateHeaders = computed(() => {\n            const isCalendarType = computeIsCalendarType.value;\n            if (isCalendarType) {\n                const weekDatas = computeWeekDatas.value;\n                return weekDatas.map((day) => {\n                    return {\n                        value: day,\n                        label: getI18n(`vxe.input.date.weeks.w${day}`)\n                    };\n                });\n            }\n            return [];\n        });\n        const computeWeekHeaders = computed(() => {\n            const isCalendarType = computeIsCalendarType.value;\n            if (isCalendarType) {\n                const dateHeaders = computeDateHeaders.value;\n                return [{ label: getI18n('vxe.input.date.weeks.w') }].concat(dateHeaders);\n            }\n            return [];\n        });\n        const computeYearDatas = computed(() => {\n            const yearList = computeYearList.value;\n            return XEUtils.chunk(yearList, 4);\n        });\n        const computeQuarterList = computed(() => {\n            const { selectMonth, currentDate } = reactData;\n            const { quarterSize } = internalData;\n            const quarters = [];\n            if (selectMonth && currentDate) {\n                const currFullYear = currentDate.getFullYear();\n                const currQuarter = getDateQuarter(currentDate);\n                const firstYear = XEUtils.getWhatYear(selectMonth, 0, 'first');\n                const selFullYear = firstYear.getFullYear();\n                for (let index = -2; index < quarterSize - 2; index++) {\n                    const date = XEUtils.getWhatQuarter(firstYear, index);\n                    const itemFullYear = date.getFullYear();\n                    const itemQuarter = getDateQuarter(date);\n                    const isPrev = itemFullYear < selFullYear;\n                    quarters.push({\n                        date,\n                        isPrev,\n                        isCurrent: itemFullYear === selFullYear,\n                        isNow: itemFullYear === currFullYear && itemQuarter === currQuarter,\n                        isNext: !isPrev && itemFullYear > selFullYear,\n                        quarter: itemQuarter\n                    });\n                }\n            }\n            return quarters;\n        });\n        const computeQuarterDatas = computed(() => {\n            const quarterList = computeQuarterList.value;\n            return XEUtils.chunk(quarterList, 2);\n        });\n        const computeMonthList = computed(() => {\n            const { selectMonth, currentDate } = reactData;\n            const { monthSize } = internalData;\n            const months = [];\n            if (selectMonth && currentDate) {\n                const currFullYear = currentDate.getFullYear();\n                const currMonth = currentDate.getMonth();\n                const selFullYear = XEUtils.getWhatYear(selectMonth, 0, 'first').getFullYear();\n                for (let index = -4; index < monthSize - 4; index++) {\n                    const date = XEUtils.getWhatYear(selectMonth, 0, index);\n                    const itemFullYear = date.getFullYear();\n                    const itemMonth = date.getMonth();\n                    const isPrev = itemFullYear < selFullYear;\n                    months.push({\n                        date,\n                        isPrev,\n                        isCurrent: itemFullYear === selFullYear,\n                        isNow: itemFullYear === currFullYear && itemMonth === currMonth,\n                        isNext: !isPrev && itemFullYear > selFullYear,\n                        month: itemMonth\n                    });\n                }\n            }\n            return months;\n        });\n        const computeMonthDatas = computed(() => {\n            const monthList = computeMonthList.value;\n            return XEUtils.chunk(monthList, 4);\n        });\n        const computeDayList = computed(() => {\n            const { selectMonth, currentDate } = reactData;\n            const days = [];\n            if (selectMonth && currentDate) {\n                const dateHMSTime = computeDateHMSTime.value;\n                const weekDatas = computeWeekDatas.value;\n                const currFullYear = currentDate.getFullYear();\n                const currMonth = currentDate.getMonth();\n                const currDate = currentDate.getDate();\n                const selFullYear = selectMonth.getFullYear();\n                const selMonth = selectMonth.getMonth();\n                const selDay = selectMonth.getDay();\n                const prevOffsetDate = -weekDatas.indexOf(selDay);\n                const startDayDate = new Date(XEUtils.getWhatDay(selectMonth, prevOffsetDate).getTime() + dateHMSTime);\n                for (let index = 0; index < 42; index++) {\n                    const date = XEUtils.getWhatDay(startDayDate, index);\n                    const itemFullYear = date.getFullYear();\n                    const itemMonth = date.getMonth();\n                    const itemDate = date.getDate();\n                    const isPrev = date < selectMonth;\n                    days.push({\n                        date,\n                        isPrev,\n                        isCurrent: itemFullYear === selFullYear && itemMonth === selMonth,\n                        isNow: itemFullYear === currFullYear && itemMonth === currMonth && itemDate === currDate,\n                        isNext: !isPrev && selMonth !== itemMonth,\n                        label: itemDate\n                    });\n                }\n            }\n            return days;\n        });\n        const computeDayDatas = computed(() => {\n            const dayList = computeDayList.value;\n            return XEUtils.chunk(dayList, 7);\n        });\n        const computeWeekDates = computed(() => {\n            const dayDatas = computeDayDatas.value;\n            const firstDayOfWeek = computeFirstDayOfWeek.value;\n            return dayDatas.map((list) => {\n                const firstItem = list[0];\n                const item = {\n                    date: firstItem.date,\n                    isWeekNumber: true,\n                    isPrev: false,\n                    isCurrent: false,\n                    isNow: false,\n                    isNext: false,\n                    label: XEUtils.getYearWeek(firstItem.date, firstDayOfWeek)\n                };\n                return [item].concat(list);\n            });\n        });\n        const parseDate = (value, format) => {\n            return XEUtils.toStringDate(value, format);\n        };\n        const handleChange = (value, evnt) => {\n            reactData.inputValue = value;\n            emit('update:modelValue', value);\n            if (XEUtils.toValueString(props.modelValue) !== value) {\n                dispatchEvent('change', { value }, evnt);\n            }\n        };\n        const dateParseValue = (value) => {\n            const { type } = props;\n            const dateLabelFormat = computeDateLabelFormat.value;\n            const dateValueFormat = computeDateValueFormat.value;\n            const firstDayOfWeek = computeFirstDayOfWeek.value;\n            let dValue = null;\n            let dLabel = '';\n            if (value) {\n                dValue = parseDate(value, dateValueFormat);\n            }\n            if (XEUtils.isValidDate(dValue)) {\n                dLabel = XEUtils.toDateString(dValue, dateLabelFormat, { firstDay: firstDayOfWeek });\n                // 由于年份和第几周是冲突的行为，所以需要特殊处理，判断是否跨年\n                if (dateLabelFormat && type === 'week') {\n                    const firstWeekDate = XEUtils.getWhatWeek(dValue, 0, firstDayOfWeek, firstDayOfWeek);\n                    if (firstWeekDate.getFullYear() < dValue.getFullYear()) {\n                        const yyIndex = dateLabelFormat.indexOf('yyyy');\n                        if (yyIndex > -1) {\n                            const yyNum = Number(dLabel.substring(yyIndex, yyIndex + 4));\n                            if (yyNum && !isNaN(yyNum)) {\n                                dLabel = dLabel.replace(`${yyNum}`, `${yyNum - 1}`);\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                dValue = null;\n            }\n            reactData.datePanelValue = dValue;\n            reactData.datePanelLabel = dLabel;\n        };\n        /**\n         * 值变化时处理\n         */\n        const changeValue = () => {\n            const isCalendarType = computeIsCalendarType.value;\n            const { inputValue } = reactData;\n            if (isCalendarType) {\n                dateParseValue(inputValue);\n                reactData.inputValue = props.multiple ? computeDateMultipleLabel.value : reactData.datePanelLabel;\n            }\n        };\n        /**\n         * 检查初始值\n         */\n        const initValue = () => {\n            const isCalendarType = computeIsCalendarType.value;\n            if (isCalendarType) {\n                changeValue();\n            }\n        };\n        const dateCheckMonth = (date) => {\n            const month = XEUtils.getWhatMonth(date, 0, 'first');\n            if (!XEUtils.isEqual(month, reactData.selectMonth)) {\n                reactData.selectMonth = month;\n            }\n        };\n        const dateChange = (date) => {\n            const { modelValue, multiple } = props;\n            const dateValueFormat = computeDateValueFormat.value;\n            const firstDayOfWeek = computeFirstDayOfWeek.value;\n            if (props.type === 'week') {\n                const sWeek = XEUtils.toNumber(props.selectDay);\n                date = XEUtils.getWhatWeek(date, 0, sWeek, firstDayOfWeek);\n            }\n            const inpVal = XEUtils.toDateString(date, dateValueFormat, { firstDay: firstDayOfWeek });\n            dateCheckMonth(date);\n            reactData.selectValue = date;\n            if (multiple) {\n                // 如果为多选\n                const dateMultipleValue = computeDateMultipleValue.value;\n                // 如果是日期类型\n                if (dateMultipleValue.some(val => XEUtils.isEqual(val, inpVal))) {\n                    handleChange(dateMultipleValue.filter(val => !XEUtils.isEqual(val, inpVal)).join(','), { type: 'update' });\n                }\n                else {\n                    handleChange(dateMultipleValue.concat([inpVal]).join(','), { type: 'update' });\n                }\n            }\n            else {\n                // 如果为单选\n                if (!XEUtils.isEqual(modelValue, inpVal)) {\n                    handleChange(inpVal, { type: 'update' });\n                }\n            }\n        };\n        const dateMonthHandle = (date, offsetMonth) => {\n            reactData.selectMonth = XEUtils.getWhatMonth(date, offsetMonth, 'first');\n        };\n        const dateNowHandle = () => {\n            const currentDate = XEUtils.getWhatDay(Date.now(), 0, 'first');\n            reactData.currentDate = currentDate;\n            dateMonthHandle(currentDate, 0);\n        };\n        const dateToggleYearTypeEvent = () => {\n            reactData.datePanelType = 'year';\n        };\n        const dateToggleMonthTypeEvent = (evnt) => {\n            let { datePanelType } = reactData;\n            if (datePanelType === 'month' || datePanelType === 'quarter') {\n                datePanelType = 'year';\n            }\n            else {\n                datePanelType = 'month';\n            }\n            reactData.datePanelType = datePanelType;\n            changeViewEvent(evnt);\n        };\n        const datePrevEvent = (evnt) => {\n            const { type } = props;\n            const { datePanelType, selectMonth } = reactData;\n            const { yearSize } = internalData;\n            const isDisabledPrevDateBtn = computeIsDisabledPrevDateBtn.value;\n            if (!isDisabledPrevDateBtn) {\n                if (type === 'year') {\n                    reactData.selectMonth = XEUtils.getWhatYear(selectMonth, -yearSize, 'first');\n                }\n                else if (type === 'month' || type === 'quarter') {\n                    if (datePanelType === 'year') {\n                        reactData.selectMonth = XEUtils.getWhatYear(selectMonth, -yearSize, 'first');\n                    }\n                    else {\n                        reactData.selectMonth = XEUtils.getWhatYear(selectMonth, -1, 'first');\n                    }\n                }\n                else {\n                    if (datePanelType === 'year') {\n                        reactData.selectMonth = XEUtils.getWhatYear(selectMonth, -yearSize, 'first');\n                    }\n                    else if (datePanelType === 'month') {\n                        reactData.selectMonth = XEUtils.getWhatYear(selectMonth, -1, 'first');\n                    }\n                    else {\n                        reactData.selectMonth = XEUtils.getWhatMonth(selectMonth, -1, 'first');\n                    }\n                }\n                dispatchEvent('date-prev', { type }, evnt);\n                changeViewEvent(evnt);\n            }\n        };\n        const dateTodayMonthEvent = (evnt) => {\n            dateNowHandle();\n            if (!props.multiple) {\n                dateChange(reactData.currentDate);\n            }\n            dispatchEvent('date-today', { type: props.type }, evnt);\n            changeViewEvent(evnt);\n        };\n        const dateNextEvent = (evnt) => {\n            const { type } = props;\n            const { datePanelType, selectMonth } = reactData;\n            const { yearSize } = internalData;\n            const isDisabledNextDateBtn = computeIsDisabledNextDateBtn.value;\n            if (!isDisabledNextDateBtn) {\n                if (type === 'year') {\n                    reactData.selectMonth = XEUtils.getWhatYear(selectMonth, yearSize, 'first');\n                }\n                else if (type === 'month' || type === 'quarter') {\n                    if (datePanelType === 'year') {\n                        reactData.selectMonth = XEUtils.getWhatYear(selectMonth, yearSize, 'first');\n                    }\n                    else {\n                        reactData.selectMonth = XEUtils.getWhatYear(selectMonth, 1, 'first');\n                    }\n                }\n                else {\n                    if (datePanelType === 'year') {\n                        reactData.selectMonth = XEUtils.getWhatYear(selectMonth, yearSize, 'first');\n                    }\n                    else if (datePanelType === 'month') {\n                        reactData.selectMonth = XEUtils.getWhatYear(selectMonth, 1, 'first');\n                    }\n                    else {\n                        reactData.selectMonth = XEUtils.getWhatMonth(selectMonth, 1, 'first');\n                    }\n                }\n                dispatchEvent('date-next', { type }, evnt);\n                changeViewEvent(evnt);\n            }\n        };\n        const isDateDisabled = (item) => {\n            const { disabledMethod } = props;\n            const { datePanelType } = reactData;\n            return disabledMethod && disabledMethod({ type: datePanelType, viewType: datePanelType, date: item.date, $calendar: $xeCalendar });\n        };\n        const changeViewEvent = (evnt) => {\n            const { datePanelType } = reactData;\n            const yearDatas = computeYearDatas.value;\n            const quarterDatas = computeQuarterDatas.value;\n            const monthDatas = computeMonthDatas.value;\n            const weekDates = computeWeekDates.value;\n            const dayDatas = computeDayDatas.value;\n            const viewDates = [];\n            let dataList = [];\n            switch (datePanelType) {\n                case 'year':\n                    dataList = yearDatas;\n                    break;\n                case 'quarter':\n                    dataList = quarterDatas;\n                    break;\n                case 'month':\n                    dataList = monthDatas;\n                    break;\n                case 'week':\n                    dataList = weekDates;\n                    break;\n                case 'day':\n                    dataList = dayDatas;\n                    break;\n            }\n            dataList.forEach(rows => {\n                rows.forEach(item => {\n                    viewDates.push(item.date);\n                });\n            });\n            dispatchEvent('view-change', { viewType: datePanelType, viewDates }, evnt);\n        };\n        const dateSelectItem = (date) => {\n            const { type } = props;\n            const { datePanelType } = reactData;\n            if (type === 'month') {\n                if (datePanelType === 'year') {\n                    reactData.datePanelType = 'month';\n                    dateCheckMonth(date);\n                    changeViewEvent(null);\n                }\n                else {\n                    dateChange(date);\n                }\n            }\n            else if (type === 'year') {\n                dateChange(date);\n            }\n            else if (type === 'quarter') {\n                if (datePanelType === 'year') {\n                    reactData.datePanelType = 'quarter';\n                    dateCheckMonth(date);\n                    changeViewEvent(null);\n                }\n                else {\n                    dateChange(date);\n                }\n            }\n            else {\n                if (datePanelType === 'month') {\n                    reactData.datePanelType = type === 'week' ? type : 'day';\n                    dateCheckMonth(date);\n                    changeViewEvent(null);\n                }\n                else if (datePanelType === 'year') {\n                    reactData.datePanelType = 'month';\n                    dateCheckMonth(date);\n                    changeViewEvent(null);\n                }\n                else {\n                    dateChange(date);\n                }\n            }\n        };\n        const dateSelectEvent = (item) => {\n            if (!isDateDisabled(item)) {\n                dateSelectItem(item.date);\n            }\n        };\n        const dateMoveDay = (offsetDay) => {\n            if (!isDateDisabled({ date: offsetDay })) {\n                const dayList = computeDayList.value;\n                if (!dayList.some((item) => XEUtils.isDateSame(item.date, offsetDay, 'yyyyMMdd'))) {\n                    dateCheckMonth(offsetDay);\n                }\n                dateParseValue(offsetDay);\n            }\n        };\n        const dateMoveYear = (offsetYear) => {\n            if (!isDateDisabled({ date: offsetYear })) {\n                const yearList = computeYearList.value;\n                if (!yearList.some((item) => XEUtils.isDateSame(item.date, offsetYear, 'yyyy'))) {\n                    dateCheckMonth(offsetYear);\n                }\n                dateParseValue(offsetYear);\n            }\n        };\n        const dateMoveQuarter = (offsetQuarter) => {\n            if (!isDateDisabled({ date: offsetQuarter })) {\n                const quarterList = computeQuarterList.value;\n                if (!quarterList.some((item) => XEUtils.isDateSame(item.date, offsetQuarter, 'yyyyq'))) {\n                    dateCheckMonth(offsetQuarter);\n                }\n                dateParseValue(offsetQuarter);\n            }\n        };\n        const dateMoveMonth = (offsetMonth) => {\n            if (!isDateDisabled({ date: offsetMonth })) {\n                const monthList = computeMonthList.value;\n                if (!monthList.some((item) => XEUtils.isDateSame(item.date, offsetMonth, 'yyyyMM'))) {\n                    dateCheckMonth(offsetMonth);\n                }\n                dateParseValue(offsetMonth);\n            }\n        };\n        const dateMouseenterEvent = (item) => {\n            if (!isDateDisabled(item)) {\n                const { datePanelType } = reactData;\n                if (datePanelType === 'month') {\n                    dateMoveMonth(item.date);\n                }\n                else if (datePanelType === 'quarter') {\n                    dateMoveQuarter(item.date);\n                }\n                else if (datePanelType === 'year') {\n                    dateMoveYear(item.date);\n                }\n                else {\n                    dateMoveDay(item.date);\n                }\n            }\n        };\n        const dateConfirmEvent = () => {\n        };\n        const dateOpenPanel = () => {\n            const { type } = props;\n            const dateValue = computeDateValue.value;\n            if (['year', 'quarter', 'month', 'week'].indexOf(type) > -1) {\n                reactData.datePanelType = type;\n            }\n            else {\n                reactData.datePanelType = 'day';\n            }\n            reactData.currentDate = XEUtils.getWhatDay(Date.now(), 0, 'first');\n            if (dateValue) {\n                dateMonthHandle(dateValue, 0);\n                dateParseValue(dateValue);\n            }\n            else {\n                dateNowHandle();\n            }\n        };\n        const renderDateLabel = (item, label) => {\n            const { festivalMethod } = props;\n            if (festivalMethod) {\n                const { datePanelType } = reactData;\n                const festivalRest = festivalMethod({ type: datePanelType, viewType: datePanelType, date: item.date, $calendar: $xeCalendar });\n                const festivalItem = festivalRest ? (XEUtils.isString(festivalRest) ? { label: festivalRest } : festivalRest) : {};\n                const extraItem = festivalItem.extra ? (XEUtils.isString(festivalItem.extra) ? { label: festivalItem.extra } : festivalItem.extra) : null;\n                const labels = [\n                    h('span', {\n                        class: ['vxe-calendar--date-label', {\n                                'is-notice': festivalItem.notice\n                            }]\n                    }, extraItem && extraItem.label\n                        ? [\n                            h('span', `${label || ''}`),\n                            h('span', {\n                                class: ['vxe-calendar--date-label--extra', extraItem.important ? 'is-important' : '', extraItem.className],\n                                style: extraItem.style\n                            }, XEUtils.toValueString(extraItem.label))\n                        ]\n                        : [`${label || ''}`])\n                ];\n                const festivalLabel = festivalItem.label;\n                if (festivalLabel) {\n                    // 默认最多支持3个节日重叠\n                    const festivalLabels = XEUtils.toValueString(festivalLabel).split(',');\n                    labels.push(h('span', {\n                        class: ['vxe-calendar--date-festival', festivalItem.important ? 'is-important' : '', festivalItem.className],\n                        style: festivalItem.style\n                    }, [\n                        festivalLabels.length > 1\n                            ? h('span', {\n                                class: ['vxe-calendar--date-festival--overlap', `overlap--${festivalLabels.length}`]\n                            }, festivalLabels.map(label => h('span', label.substring(0, 3))))\n                            : h('span', {\n                                class: 'vxe-calendar--date-festival--label'\n                            }, festivalLabels[0].substring(0, 3))\n                    ]));\n                }\n                return labels;\n            }\n            return `${label || ''}`;\n        };\n        const renderDateDayTable = () => {\n            const { multiple } = props;\n            const { datePanelType, datePanelValue } = reactData;\n            const dateValue = computeDateValue.value;\n            const dateHeaders = computeDateHeaders.value;\n            const dayDatas = computeDayDatas.value;\n            const dateListValue = computeDateListValue.value;\n            const matchFormat = 'yyyyMMdd';\n            return [\n                h('table', {\n                    class: `vxe-calendar--date-${datePanelType}-view`,\n                    cellspacing: 0,\n                    cellpadding: 0,\n                    border: 0\n                }, [\n                    h('tr', dateHeaders.map((item) => {\n                        return h('th', {\n                            class: 'vxe-calendar--view-th'\n                        }, item.label);\n                    })),\n                    ...dayDatas.map((rows) => {\n                        return h('tr', rows.map((item) => {\n                            return h('td', {\n                                class: ['vxe-calendar--view-td', {\n                                        'is--prev': item.isPrev,\n                                        'is--current': item.isCurrent,\n                                        'is--now': item.isNow,\n                                        'is--next': item.isNext,\n                                        'is--disabled': isDateDisabled(item),\n                                        'is--selected': multiple ? dateListValue.some(val => XEUtils.isDateSame(val, item.date, matchFormat)) : XEUtils.isDateSame(dateValue, item.date, matchFormat),\n                                        'is--hover': XEUtils.isDateSame(datePanelValue, item.date, matchFormat)\n                                    }],\n                                onClick: () => dateSelectEvent(item),\n                                onMouseenter: () => dateMouseenterEvent(item)\n                            }, renderDateLabel(item, item.label));\n                        }));\n                    })\n                ])\n            ];\n        };\n        const renderDateWeekTable = () => {\n            const { multiple } = props;\n            const { datePanelType, datePanelValue } = reactData;\n            const dateValue = computeDateValue.value;\n            const weekHeaders = computeWeekHeaders.value;\n            const weekDates = computeWeekDates.value;\n            const dateListValue = computeDateListValue.value;\n            const matchFormat = 'yyyyMMdd';\n            return [\n                h('table', {\n                    class: `vxe-calendar--date-${datePanelType}-view`,\n                    cellspacing: 0,\n                    cellpadding: 0,\n                    border: 0\n                }, [\n                    h('tr', weekHeaders.map((item) => {\n                        return h('td', {\n                            class: 'vxe-calendar--view-th'\n                        }, item.label);\n                    })),\n                    ...weekDates.map((rows) => {\n                        const isSelected = multiple ? rows.some((item) => dateListValue.some(val => XEUtils.isDateSame(val, item.date, matchFormat))) : rows.some((item) => XEUtils.isDateSame(dateValue, item.date, matchFormat));\n                        const isHover = rows.some((item) => XEUtils.isDateSame(datePanelValue, item.date, matchFormat));\n                        return h('tr', rows.map((item) => {\n                            return h('td', {\n                                class: ['vxe-calendar--view-td', {\n                                        'is--prev': item.isPrev,\n                                        'is--current': item.isCurrent,\n                                        'is--now': item.isNow,\n                                        'is--next': item.isNext,\n                                        'is--disabled': isDateDisabled(item),\n                                        'is--selected': isSelected,\n                                        'is--hover': isHover\n                                    }],\n                                // event\n                                onClick: () => dateSelectEvent(item),\n                                onMouseenter: () => dateMouseenterEvent(item)\n                            }, renderDateLabel(item, item.label));\n                        }));\n                    })\n                ])\n            ];\n        };\n        const renderDateMonthTable = () => {\n            const { multiple } = props;\n            const { datePanelType, datePanelValue } = reactData;\n            const dateValue = computeDateValue.value;\n            const monthDatas = computeMonthDatas.value;\n            const dateListValue = computeDateListValue.value;\n            const matchFormat = 'yyyyMM';\n            return [\n                h('table', {\n                    class: `vxe-calendar--date-${datePanelType}-view`,\n                    cellspacing: 0,\n                    cellpadding: 0,\n                    border: 0\n                }, [\n                    h('tbody', monthDatas.map((rows) => {\n                        return h('tr', rows.map((item) => {\n                            return h('td', {\n                                class: ['vxe-calendar--view-td', {\n                                        'is--prev': item.isPrev,\n                                        'is--current': item.isCurrent,\n                                        'is--now': item.isNow,\n                                        'is--next': item.isNext,\n                                        'is--disabled': isDateDisabled(item),\n                                        'is--selected': multiple ? dateListValue.some(val => XEUtils.isDateSame(val, item.date, matchFormat)) : XEUtils.isDateSame(dateValue, item.date, matchFormat),\n                                        'is--hover': XEUtils.isDateSame(datePanelValue, item.date, matchFormat)\n                                    }],\n                                onClick: () => dateSelectEvent(item),\n                                onMouseenter: () => dateMouseenterEvent(item)\n                            }, renderDateLabel(item, getI18n(`vxe.input.date.months.m${item.month}`)));\n                        }));\n                    }))\n                ])\n            ];\n        };\n        const renderDateQuarterTable = () => {\n            const { multiple } = props;\n            const { datePanelType, datePanelValue } = reactData;\n            const dateValue = computeDateValue.value;\n            const quarterDatas = computeQuarterDatas.value;\n            const dateListValue = computeDateListValue.value;\n            const matchFormat = 'yyyyq';\n            return [\n                h('table', {\n                    class: `vxe-calendar--date-${datePanelType}-view`,\n                    cellspacing: 0,\n                    cellpadding: 0,\n                    border: 0\n                }, [\n                    h('tbody', quarterDatas.map((rows) => {\n                        return h('tr', rows.map((item) => {\n                            return h('td', {\n                                class: ['vxe-calendar--view-td', {\n                                        'is--prev': item.isPrev,\n                                        'is--current': item.isCurrent,\n                                        'is--now': item.isNow,\n                                        'is--next': item.isNext,\n                                        'is--disabled': isDateDisabled(item),\n                                        'is--selected': multiple ? dateListValue.some(val => XEUtils.isDateSame(val, item.date, matchFormat)) : XEUtils.isDateSame(dateValue, item.date, matchFormat),\n                                        'is--hover': XEUtils.isDateSame(datePanelValue, item.date, matchFormat)\n                                    }],\n                                onClick: () => dateSelectEvent(item),\n                                onMouseenter: () => dateMouseenterEvent(item)\n                            }, renderDateLabel(item, getI18n(`vxe.input.date.quarters.q${item.quarter}`)));\n                        }));\n                    }))\n                ])\n            ];\n        };\n        const renderDateYearTable = () => {\n            const { multiple } = props;\n            const { datePanelType, datePanelValue } = reactData;\n            const dateValue = computeDateValue.value;\n            const yearDatas = computeYearDatas.value;\n            const dateListValue = computeDateListValue.value;\n            const matchFormat = 'yyyy';\n            return [\n                h('table', {\n                    class: `vxe-calendar--date-${datePanelType}-view`,\n                    cellspacing: 0,\n                    cellpadding: 0,\n                    border: 0\n                }, [\n                    h('tbody', yearDatas.map((rows) => {\n                        return h('tr', rows.map((item) => {\n                            return h('td', {\n                                class: ['vxe-calendar--view-td', {\n                                        'is--prev': item.isPrev,\n                                        'is--current': item.isCurrent,\n                                        'is--now': item.isNow,\n                                        'is--next': item.isNext,\n                                        'is--disabled': isDateDisabled(item),\n                                        'is--selected': multiple ? dateListValue.some(val => XEUtils.isDateSame(val, item.date, matchFormat)) : XEUtils.isDateSame(dateValue, item.date, matchFormat),\n                                        'is--hover': XEUtils.isDateSame(datePanelValue, item.date, matchFormat)\n                                    }],\n                                onClick: () => dateSelectEvent(item),\n                                onMouseenter: () => dateMouseenterEvent(item)\n                            }, renderDateLabel(item, item.year));\n                        }));\n                    }))\n                ])\n            ];\n        };\n        const renderDateTable = () => {\n            const { datePanelType } = reactData;\n            switch (datePanelType) {\n                case 'week':\n                    return renderDateWeekTable();\n                case 'month':\n                    return renderDateMonthTable();\n                case 'quarter':\n                    return renderDateQuarterTable();\n                case 'year':\n                    return renderDateYearTable();\n            }\n            return renderDateDayTable();\n        };\n        const renderDatePanel = () => {\n            const { multiple } = props;\n            const { datePanelType } = reactData;\n            const isDisabledPrevDateBtn = computeIsDisabledPrevDateBtn.value;\n            const isDisabledNextDateBtn = computeIsDisabledNextDateBtn.value;\n            const selectDatePanelObj = computeSelectDatePanelObj.value;\n            return [\n                h('div', {\n                    class: 'vxe-calendar--header'\n                }, [\n                    h('div', {\n                        class: 'vxe-calendar--type-wrapper'\n                    }, [\n                        datePanelType === 'year'\n                            ? h(VxeButtonComponent, {\n                                class: 'vxe-calendar--date-picker-label',\n                                disabled: datePanelType === 'year',\n                                content: selectDatePanelObj.y\n                            })\n                            : h('span', {\n                                class: 'vxe-calendar--date-picker-btns'\n                            }, [\n                                h(VxeButtonComponent, {\n                                    class: 'vxe-calendar--date-picker-btn',\n                                    content: selectDatePanelObj.y,\n                                    onClick: dateToggleYearTypeEvent\n                                }),\n                                selectDatePanelObj.m\n                                    ? h(VxeButtonComponent, {\n                                        class: 'vxe-calendar--date-picker-btn',\n                                        content: selectDatePanelObj.m,\n                                        onClick: dateToggleMonthTypeEvent\n                                    })\n                                    : renderEmptyElement($xeCalendar)\n                            ])\n                    ]),\n                    h('div', {\n                        class: 'vxe-calendar--btn-wrapper'\n                    }, [\n                        h(VxeButtonComponent, {\n                            disabled: isDisabledPrevDateBtn,\n                            icon: 'vxe-icon-caret-left',\n                            onClick: datePrevEvent\n                        }),\n                        h(VxeButtonComponent, {\n                            icon: 'vxe-icon-dot',\n                            onClick: dateTodayMonthEvent\n                        }),\n                        h(VxeButtonComponent, {\n                            disabled: isDisabledNextDateBtn,\n                            icon: 'vxe-icon-caret-right',\n                            onClick: dateNextEvent\n                        }),\n                        multiple && computeSupportMultiples.value\n                            ? h('span', {\n                                class: 'vxe-calendar--btn vxe-calendar--confirm-btn'\n                            }, [\n                                h('button', {\n                                    class: 'vxe-calendar--confirm',\n                                    type: 'button',\n                                    onClick: dateConfirmEvent\n                                }, getI18n('vxe.button.confirm'))\n                            ])\n                            : null\n                    ])\n                ]),\n                h('div', {\n                    class: 'vxe-calendar--body'\n                }, renderDateTable())\n            ];\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $input: $xeCalendar }, params));\n        };\n        const calendarMethods = {\n            dispatchEvent\n        };\n        Object.assign($xeCalendar, calendarMethods);\n        const renderVN = () => {\n            const { className, type } = props;\n            const vSize = computeSize.value;\n            const isDisabled = computeIsDisabled.value;\n            const calendarStyle = computeCalendarStyle.value;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-calendar', `type--${type}`, className, {\n                        [`size--${vSize}`]: vSize,\n                        'is--disabled': isDisabled\n                    }],\n                style: calendarStyle\n            }, [\n                renderDatePanel()\n            ]);\n        };\n        $xeCalendar.renderVN = renderVN;\n        watch(() => props.modelValue, (val) => {\n            reactData.inputValue = val;\n            changeValue();\n        });\n        watch(() => props.type, () => {\n            // 切换类型是重置内置变量\n            Object.assign(reactData, {\n                selectValue: null,\n                inputValue: null,\n                datePanelValue: null,\n                datePanelLabel: '',\n                datePanelType: 'day',\n                selectMonth: null,\n                currentDate: null\n            });\n            initValue();\n            dateOpenPanel();\n        });\n        watch(computeDateLabelFormat, () => {\n            const isCalendarType = computeIsCalendarType.value;\n            if (isCalendarType) {\n                dateParseValue(reactData.datePanelValue);\n                reactData.inputValue = props.multiple ? computeDateMultipleLabel.value : reactData.datePanelLabel;\n            }\n        });\n        onMounted(() => {\n            dateOpenPanel();\n        });\n        initValue();\n        return $xeCalendar;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeCalendarComponent from './src/calendar';\nimport { dynamicApp } from '../dynamics';\nexport const VxeCalendar = Object.assign({}, VxeCalendarComponent, {\n    install(app) {\n        app.component(VxeCalendarComponent.name, VxeCalendarComponent);\n    }\n});\ndynamicApp.use(VxeCalendar);\nVxeUI.component(VxeCalendarComponent);\nexport const Calendar = VxeCalendar;\nexport default VxeCalendar;\n", "import { defineComponent, ref, h, reactive, createCommentVNode, computed } from 'vue';\nimport { getSlotVNs } from '../../ui/src/vn';\nimport { getConfig, createEvent } from '../../ui';\nimport { toCssUnit } from '../../ui/src/dom';\nimport VxeLoadingComponent from '../../loading/src/loading';\nimport XEUtils from 'xe-utils';\nexport default defineComponent({\n    name: 'VxeCard',\n    props: {\n        title: String,\n        showTitleOverflow: {\n            type: Boolean,\n            default: () => getConfig().card.showTitleOverflow\n        },\n        width: [String, Number],\n        height: [String, Number],\n        border: {\n            type: Boolean,\n            default: () => getConfig().card.border\n        },\n        loading: Boolean,\n        shadow: {\n            type: Boolean,\n            default: () => getConfig().card.shadow\n        },\n        padding: {\n            type: Boolean,\n            default: () => getConfig().card.padding\n        }\n    },\n    emits: [],\n    setup(props, context) {\n        const { slots, emit } = context;\n        const xID = XEUtils.uniqueId();\n        const refElem = ref();\n        const reactData = reactive({});\n        const refMaps = {\n            refElem\n        };\n        const computeCardStyle = computed(() => {\n            const { height, width } = props;\n            const stys = {};\n            if (width) {\n                stys.width = toCssUnit(width);\n            }\n            if (height) {\n                stys.height = toCssUnit(height);\n            }\n            return stys;\n        });\n        const computeMaps = {};\n        const $xeCard = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $card: $xeCard }, params));\n        };\n        const cardMethods = {\n            dispatchEvent\n        };\n        const cardPrivateMethods = {};\n        Object.assign($xeCard, cardMethods, cardPrivateMethods);\n        const renderVN = () => {\n            const { title, border, shadow, padding, loading, showTitleOverflow } = props;\n            const defaultSlot = slots.default;\n            const headerSlot = slots.header;\n            const titleSlot = slots.title;\n            const extraSlot = slots.extra;\n            const footerSlot = slots.footer;\n            const leftSlot = slots.left;\n            const rightSlot = slots.right;\n            const cardStyle = computeCardStyle.value;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-card', {\n                        'is--border': border,\n                        'is--shadow': shadow,\n                        'is--padding': padding\n                    }],\n                style: cardStyle\n            }, [\n                title || titleSlot || headerSlot\n                    ? h('div', {\n                        class: 'vxe-card--header'\n                    }, headerSlot\n                        ? getSlotVNs(headerSlot({}))\n                        : [\n                            h('div', {\n                                class: ['vxe-card--header-title', {\n                                        'is--ellipsis': showTitleOverflow\n                                    }]\n                            }, titleSlot ? getSlotVNs(titleSlot({})) : `${title || ''}`),\n                            extraSlot\n                                ? h('div', {\n                                    class: 'vxe-card--header-extra'\n                                }, getSlotVNs(extraSlot({})))\n                                : createCommentVNode()\n                        ])\n                    : createCommentVNode(),\n                h('div', {\n                    class: 'vxe-card--body'\n                }, [\n                    leftSlot\n                        ? h('div', {\n                            class: 'vxe-card--body-left'\n                        }, getSlotVNs(leftSlot({})))\n                        : createCommentVNode(),\n                    h('div', {\n                        class: 'vxe-card--body-content'\n                    }, defaultSlot ? getSlotVNs(defaultSlot({})) : []),\n                    rightSlot\n                        ? h('div', {\n                            class: 'vxe-card--body-right'\n                        }, getSlotVNs(rightSlot({})))\n                        : createCommentVNode()\n                ]),\n                footerSlot\n                    ? h('div', {\n                        class: 'vxe-card--footer'\n                    }, getSlotVNs(footerSlot({})))\n                    : createCommentVNode(),\n                /**\n                 * 加载中\n                 */\n                h(VxeLoadingComponent, {\n                    class: 'vxe-card--loading',\n                    modelValue: loading\n                })\n            ]);\n        };\n        $xeCard.renderVN = renderVN;\n        return $xeCard;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeCardComponent from './src/card';\nimport { dynamicApp } from '../dynamics';\nexport const VxeCard = Object.assign({}, VxeCardComponent, {\n    install(app) {\n        app.component(VxeCardComponent.name, VxeCardComponent);\n    }\n});\ndynamicApp.use(VxeCard);\nVxeUI.component(VxeCardComponent);\nexport const Card = VxeCard;\nexport default VxeCard;\n", "import { defineComponent, ref, h, reactive, provide, watch, nextTick, onMounted, computed, onUnmounted, createCommentVNode } from 'vue';\nimport { getConfig, getIcon, createEvent } from '../../ui';\nimport { getSlotVNs } from '../../ui/src/vn';\nimport { toCssUnit } from '../../ui/src/dom';\nimport VxeLoadingComponent from '../../loading/src/loading';\nimport XEUtils from 'xe-utils';\nexport default defineComponent({\n    name: 'VxeCarousel',\n    props: {\n        modelValue: [String, Number],\n        options: Array,\n        loading: Boolean,\n        height: {\n            type: [Number, String],\n            default: () => getConfig().carousel.height\n        },\n        width: {\n            type: [Number, String],\n            default: () => getConfig().carousel.width\n        },\n        autoPlay: {\n            type: Boolean,\n            default: () => getConfig().carousel.autoPlay\n        },\n        interval: {\n            type: [Number, String],\n            default: () => getConfig().carousel.interval\n        },\n        loop: {\n            type: Boolean,\n            default: () => getConfig().carousel.loop\n        },\n        vertical: {\n            type: Boolean,\n            default: () => getConfig().carousel.vertical\n        },\n        showIndicators: {\n            type: Boolean,\n            default: () => getConfig().carousel.showIndicators\n        }\n    },\n    emits: [\n        'update:modelValue',\n        'change'\n    ],\n    setup(props, context) {\n        const { emit, slots } = context;\n        const xID = XEUtils.uniqueId();\n        const refElem = ref();\n        const refWrapperElem = ref();\n        const reactData = reactive({\n            activeName: '',\n            staticItems: [],\n            itemWidth: 0,\n            itemHeight: 0\n        });\n        const internalData = {\n            apTimeout: undefined,\n            stopFlag: false\n        };\n        const refMaps = {\n            refElem\n        };\n        const computeListStyle = computed(() => {\n            const { vertical, options } = props;\n            const { activeName, itemWidth, itemHeight, staticItems } = reactData;\n            const list = (staticItems && staticItems.length ? staticItems : options) || [];\n            const activeIndex = Math.max(0, XEUtils.findIndexOf(list, item => item.name === activeName));\n            const stys = {};\n            if (vertical) {\n                stys.transform = `translateY(-${activeIndex * itemHeight}px)`;\n            }\n            else {\n                stys.width = `${itemWidth * list.length}px`;\n                stys.transform = `translateX(-${activeIndex * itemWidth}px)`;\n            }\n            return stys;\n        });\n        const computeMaps = {};\n        const $xeCarousel = {\n            xID,\n            props,\n            context,\n            reactData,\n            internalData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const updateStyle = () => {\n            nextTick(() => {\n                const wrapperElem = refWrapperElem.value;\n                if (wrapperElem) {\n                    reactData.itemWidth = wrapperElem.clientWidth;\n                    reactData.itemHeight = wrapperElem.clientHeight;\n                }\n            });\n        };\n        const clickItemEvent = (evnt, item) => {\n            const value = item.name;\n            reactData.activeName = item.name;\n            emit('update:modelValue', value);\n            emit('change', { value }, evnt);\n            updateStyle();\n        };\n        const initDefaultActive = (list) => {\n            let activeName = null;\n            if (list && list.length) {\n                let validVal = false;\n                activeName = props.modelValue;\n                list.forEach((item) => {\n                    if (activeName === item.name) {\n                        validVal = true;\n                    }\n                });\n                if (!validVal) {\n                    activeName = list[0].name;\n                    emit('update:modelValue', activeName);\n                }\n            }\n            reactData.activeName = activeName;\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $carousel: $xeCarousel }, params));\n        };\n        const handlePrevNext = (isNext) => {\n            const { options, loop } = props;\n            const { activeName, staticItems } = reactData;\n            const list = (staticItems && staticItems.length ? staticItems : options) || [];\n            const index = Math.max(0, XEUtils.findIndexOf(list, item => item.name === activeName));\n            if (index > -1) {\n                let item = null;\n                if (isNext) {\n                    if (index < list.length - 1) {\n                        item = list[index + 1];\n                    }\n                    else {\n                        if (loop) {\n                            item = list[0];\n                        }\n                    }\n                }\n                else {\n                    if (index > 0) {\n                        item = list[index - 1];\n                    }\n                    else {\n                        if (loop) {\n                            item = list[list.length - 1];\n                        }\n                    }\n                }\n                if (item) {\n                    const name = item.name;\n                    const value = name;\n                    reactData.activeName = name;\n                    emit('update:modelValue', value);\n                    return true;\n                }\n            }\n            return false;\n        };\n        const carouselMethods = {\n            dispatchEvent,\n            prev() {\n                if (handlePrevNext(false)) {\n                    handleAutoPlay();\n                }\n                return nextTick();\n            },\n            next() {\n                if (handlePrevNext(true)) {\n                    handleAutoPlay();\n                }\n                return nextTick();\n            }\n        };\n        const prevEvent = (evnt) => {\n            if (handlePrevNext(false)) {\n                const value = reactData.activeName;\n                emit('change', { value }, evnt);\n            }\n        };\n        const nextEvent = (evnt) => {\n            if (handlePrevNext(true)) {\n                const value = reactData.activeName;\n                emit('change', { value }, evnt);\n            }\n        };\n        const stopAutoPlay = () => {\n            const { apTimeout } = internalData;\n            internalData.stopFlag = true;\n            if (apTimeout) {\n                clearTimeout(apTimeout);\n                internalData.apTimeout = undefined;\n            }\n        };\n        const handleAutoPlay = () => {\n            const { autoPlay, interval } = props;\n            const { stopFlag } = internalData;\n            stopAutoPlay();\n            if (autoPlay) {\n                internalData.stopFlag = false;\n                internalData.apTimeout = setTimeout(() => {\n                    if (!stopFlag) {\n                        handlePrevNext(true);\n                    }\n                }, XEUtils.toNumber(interval) || 300);\n            }\n        };\n        const mouseenterEvent = () => {\n            stopAutoPlay();\n        };\n        const mouseleaveEvent = () => {\n            handleAutoPlay();\n        };\n        const carouselPrivateMethods = {};\n        const callSlot = (slotFunc, params) => {\n            if (slotFunc) {\n                if (XEUtils.isString(slotFunc)) {\n                    slotFunc = slots[slotFunc] || null;\n                }\n                if (XEUtils.isFunction(slotFunc)) {\n                    return getSlotVNs(slotFunc(params));\n                }\n            }\n            return [];\n        };\n        Object.assign($xeCarousel, carouselMethods, carouselPrivateMethods);\n        const renderItemWrapper = (list) => {\n            const { height } = props;\n            const { activeName } = reactData;\n            const listStyle = computeListStyle.value;\n            return h('div', {\n                class: 'vxe-carousel--list',\n                style: listStyle\n            }, list.map(item => {\n                const { name, url, slots } = item;\n                const defaultSlot = slots ? slots.default : null;\n                return h('div', {\n                    key: `${name}`,\n                    class: ['vxe-carousel--item-inner', {\n                            'is--active': activeName === name\n                        }],\n                    style: height\n                        ? {\n                            height: toCssUnit(height)\n                        }\n                        : null\n                }, defaultSlot\n                    ? callSlot(defaultSlot, {})\n                    : [\n                        h('img', {\n                            class: 'vxe-carousel--item-img',\n                            src: url\n                        })\n                    ]);\n            }));\n        };\n        const renderIndicators = (list) => {\n            const { activeName } = reactData;\n            return h('div', {\n                class: 'vxe-carousel--indicators'\n            }, list.map((item) => {\n                const { name } = item;\n                return h('div', {\n                    key: `${name}`,\n                    class: ['vxe-carousel--indicators-item', {\n                            'is--active': activeName === name\n                        }],\n                    onClick(evnt) {\n                        clickItemEvent(evnt, item);\n                    }\n                });\n            }));\n        };\n        const renderVN = () => {\n            const { loading, height, width, showIndicators, vertical, options } = props;\n            const { staticItems } = reactData;\n            const defaultSlot = slots.default;\n            const list = (staticItems && staticItems.length ? staticItems : options) || [];\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-carousel', `is--${vertical ? 'vertical' : 'horizontal'}`],\n                style: width\n                    ? {\n                        width: toCssUnit(width)\n                    }\n                    : null,\n                onMouseenter: mouseenterEvent,\n                onMouseleave: mouseleaveEvent\n            }, [\n                h('div', {\n                    class: 'vxe-carousel--slots'\n                }, defaultSlot ? defaultSlot({}) : []),\n                h('div', {\n                    ref: refWrapperElem,\n                    class: 'vxe-carousel--item-wrapper',\n                    style: height\n                        ? {\n                            height: toCssUnit(height)\n                        }\n                        : null\n                }, [\n                    renderItemWrapper(list)\n                ]),\n                showIndicators ? renderIndicators(list) : createCommentVNode(),\n                h('div', {\n                    class: 'vxe-carousel--btn-wrapper'\n                }, [\n                    h('div', {\n                        class: 'vxe-carousel--previous-btn',\n                        onClick: prevEvent\n                    }, [\n                        h('i', {\n                            class: vertical ? getIcon().CAROUSEL_VERTICAL_PREVIOUS : getIcon().CAROUSEL_HORIZONTAL_PREVIOUS\n                        })\n                    ]),\n                    h('div', {\n                        class: 'vxe-carousel--next-btn',\n                        onClick: nextEvent\n                    }, [\n                        h('i', {\n                            class: vertical ? getIcon().CAROUSEL_VERTICAL_NEXT : getIcon().CAROUSEL_HORIZONTAL_NEXT\n                        })\n                    ])\n                ]),\n                /**\n                 * 加载中\n                 */\n                h(VxeLoadingComponent, {\n                    class: 'vxe-carousel--loading',\n                    modelValue: loading\n                })\n            ]);\n        };\n        const optsFlag = ref(0);\n        watch(() => props.options ? props.options.length : -1, () => {\n            optsFlag.value++;\n        });\n        watch(() => props.options, () => {\n            optsFlag.value++;\n        });\n        watch(optsFlag, () => {\n            initDefaultActive(props.options);\n        });\n        const stFlag = ref(0);\n        watch(() => reactData.staticItems ? reactData.staticItems.length : -1, () => {\n            stFlag.value++;\n        });\n        watch(() => reactData.staticItems, () => {\n            stFlag.value++;\n        });\n        watch(stFlag, () => {\n            initDefaultActive(reactData.staticItems);\n        });\n        watch(() => props.autoPlay, () => {\n            handleAutoPlay();\n        });\n        initDefaultActive(reactData.staticItems.length ? reactData.staticItems : props.options);\n        onMounted(() => {\n            handleAutoPlay();\n            updateStyle();\n        });\n        onUnmounted(() => {\n            stopAutoPlay();\n        });\n        provide('$xeCarousel', $xeCarousel);\n        $xeCarousel.renderVN = renderVN;\n        return $xeCarousel;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeCarouselComponent from './src/carousel';\nimport { dynamicApp } from '../dynamics';\nexport const VxeCarousel = Object.assign({}, VxeCarouselComponent, {\n    install(app) {\n        app.component(VxeCarouselComponent.name, VxeCarouselComponent);\n    }\n});\ndynamicApp.use(VxeCarousel);\nVxeUI.component(VxeCarouselComponent);\nexport const Carousel = VxeCarousel;\nexport default VxeCarousel;\n", "import XEUtils from 'xe-utils';\nexport function assembleCarouselItem($xeCarousel, elem, itemConfig) {\n    const staticItems = $xeCarousel.reactData.staticItems;\n    const parentElem = elem.parentNode;\n    if (parentElem) {\n        staticItems.splice(XEUtils.arrayIndexOf(parentElem.children, elem), 0, itemConfig);\n    }\n    $xeCarousel.reactData.staticItems = staticItems.slice(0);\n}\nexport function destroyCarouselItem($xeCarousel, itemConfig) {\n    const staticItems = $xeCarousel.reactData.staticItems;\n    const index = XEUtils.findIndexOf(staticItems, item => item.id === itemConfig.id);\n    if (index > -1) {\n        staticItems.splice(index, 1);\n    }\n    $xeCarousel.reactData.staticItems = staticItems.slice(0);\n}\n", "import { defineComponent, ref, h, reactive, inject, watch, onMounted, onUnmounted } from 'vue';\nimport { createEvent } from '../../ui';\nimport { assembleCarouselItem, destroyCarouselItem } from './util';\nimport XEUtils from 'xe-utils';\nexport default defineComponent({\n    name: 'VxeCarouselItem',\n    props: {\n        name: [String, Number],\n        className: String,\n        url: String\n    },\n    emits: [],\n    setup(props, context) {\n        const { slots, emit } = context;\n        const $xeCarousel = inject('$xeCarousel', null);\n        const xID = XEUtils.uniqueId();\n        const refElem = ref();\n        const reactData = reactive({});\n        const itemConfig = reactive({\n            id: xID,\n            name: props.name,\n            url: props.url,\n            className: props.className,\n            slots\n        });\n        const refMaps = {\n            refElem\n        };\n        const computeMaps = {};\n        const $xeCarouselItem = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $carouselItem: $xeCarouselItem }, params));\n        };\n        const carouselItemMethods = {\n            dispatchEvent\n        };\n        const carouselItemPrivateMethods = {};\n        Object.assign($xeCarouselItem, carouselItemMethods, carouselItemPrivateMethods);\n        const renderVN = () => {\n            return h('div', {\n                ref: refElem\n            });\n        };\n        watch(() => props.name, (val) => {\n            itemConfig.name = val;\n        });\n        watch(() => props.url, (val) => {\n            itemConfig.url = val;\n        });\n        onMounted(() => {\n            const elem = refElem.value;\n            if ($xeCarousel && elem) {\n                assembleCarouselItem($xeCarousel, elem, itemConfig);\n            }\n        });\n        onUnmounted(() => {\n            if ($xeCarousel) {\n                destroyCarouselItem($xeCarousel, itemConfig);\n            }\n        });\n        $xeCarouselItem.renderVN = renderVN;\n        return $xeCarouselItem;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeCarouselItemComponent from '../carousel/src/carousel-item';\nimport { dynamicApp } from '../dynamics';\nexport const VxeCarouselItem = Object.assign({}, VxeCarouselItemComponent, {\n    install(app) {\n        app.component(VxeCarouselItemComponent.name, VxeCarouselItemComponent);\n    }\n});\ndynamicApp.use(VxeCarouselItem);\nVxeUI.component(VxeCarouselItemComponent);\nexport const CarouselItem = VxeCarouselItem;\nexport default VxeCarouselItem;\n", "import { defineComponent, h, provide, computed, inject, reactive } from 'vue';\nimport { getConfig, createEvent, useSize } from '../../ui';\nimport XEUtils from 'xe-utils';\nimport VxeCheckboxComponent from './checkbox';\nexport default defineComponent({\n    name: 'VxeCheckboxGroup',\n    props: {\n        modelValue: Array,\n        options: Array,\n        optionProps: Object,\n        disabled: {\n            type: Boolean,\n            default: null\n        },\n        max: {\n            type: [String, Number],\n            default: null\n        },\n        size: {\n            type: String,\n            default: () => getConfig().checkboxGroup.size || getConfig().size\n        }\n    },\n    emits: [\n        'update:modelValue',\n        'change'\n    ],\n    setup(props, context) {\n        const { slots, emit } = context;\n        const $xeForm = inject('$xeForm', null);\n        const formItemInfo = inject('xeFormItemInfo', null);\n        const xID = XEUtils.uniqueId();\n        const reactData = reactive({});\n        const computeIsDisabled = computed(() => {\n            const { disabled } = props;\n            if (disabled === null) {\n                if ($xeForm) {\n                    return $xeForm.props.readonly || $xeForm.props.disabled;\n                }\n                return false;\n            }\n            return disabled;\n        });\n        const computeIsMaximize = computed(() => {\n            const { modelValue, max } = props;\n            if (max) {\n                return (modelValue ? modelValue.length : 0) >= XEUtils.toNumber(max);\n            }\n            return false;\n        });\n        const computePropsOpts = computed(() => {\n            return Object.assign({}, props.optionProps);\n        });\n        const computeLabelField = computed(() => {\n            const propsOpts = computePropsOpts.value;\n            return propsOpts.label || 'label';\n        });\n        const computeValueField = computed(() => {\n            const propsOpts = computePropsOpts.value;\n            return propsOpts.value || 'value';\n        });\n        const computeDisabledField = computed(() => {\n            const propsOpts = computePropsOpts.value;\n            return propsOpts.disabled || 'disabled';\n        });\n        const computeMaps = {\n            computeIsMaximize,\n            computeIsDisabled\n        };\n        const $xeCheckboxGroup = {\n            xID,\n            props,\n            context,\n            reactData,\n            getComputeMaps: () => computeMaps\n        };\n        useSize(props);\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $checkboxGroup: $xeCheckboxGroup }, params));\n        };\n        const checkboxGroupMethods = {\n            dispatchEvent\n        };\n        const checkboxGroupPrivateMethods = {\n            handleChecked(params, evnt) {\n                const { checked, label } = params;\n                const checklist = props.modelValue || [];\n                const checkIndex = checklist.indexOf(label);\n                if (checked) {\n                    if (checkIndex === -1) {\n                        checklist.push(label);\n                    }\n                }\n                else {\n                    checklist.splice(checkIndex, 1);\n                }\n                emit('update:modelValue', checklist);\n                $xeCheckboxGroup.dispatchEvent('change', Object.assign({ checklist }, params), evnt);\n                // 自动更新校验状态\n                if ($xeForm && formItemInfo) {\n                    $xeForm.triggerItemEvent(evnt, formItemInfo.itemConfig.field, checklist);\n                }\n            }\n        };\n        Object.assign($xeCheckboxGroup, checkboxGroupMethods, checkboxGroupPrivateMethods);\n        const renderVN = () => {\n            const { options } = props;\n            const defaultSlot = slots.default;\n            const valueField = computeValueField.value;\n            const labelField = computeLabelField.value;\n            const disabledField = computeDisabledField.value;\n            return h('div', {\n                class: 'vxe-checkbox-group'\n            }, defaultSlot\n                ? defaultSlot({})\n                : (options\n                    ? options.map(item => {\n                        return h(VxeCheckboxComponent, {\n                            key: item[valueField],\n                            label: item[valueField],\n                            content: item[labelField],\n                            disabled: item[disabledField]\n                        });\n                    })\n                    : []));\n        };\n        provide('$xeCheckboxGroup', $xeCheckboxGroup);\n        $xeCheckboxGroup.renderVN = renderVN;\n        return renderVN;\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeCheckboxGroupComponent from '../checkbox/src/group';\nimport { dynamicApp } from '../dynamics';\nexport const VxeCheckboxGroup = Object.assign(VxeCheckboxGroupComponent, {\n    install(app) {\n        app.component(VxeCheckboxGroupComponent.name, VxeCheckboxGroupComponent);\n    }\n});\ndynamicApp.use(VxeCheckboxGroup);\nVxeUI.component(VxeCheckboxGroupComponent);\nexport const CheckboxGroup = VxeCheckboxGroup;\nexport default VxeCheckboxGroup;\n", "import { defineComponent, ref, h, reactive, computed, inject } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getConfig, createEvent, useSize } from '../../ui';\nimport { toCssUnit } from '../../ui/src/dom';\nexport default defineComponent({\n    name: 'VxeCol',\n    props: {\n        span: [Number, String],\n        align: String,\n        width: [Number, String],\n        fill: Boolean,\n        ellipsis: Boolean,\n        size: {\n            type: String,\n            default: () => getConfig().col.size || getConfig().size\n        }\n    },\n    emits: [],\n    setup(props, context) {\n        const { slots, emit } = context;\n        const xID = XEUtils.uniqueId();\n        useSize(props);\n        const refElem = ref();\n        const reactData = reactive({});\n        const refMaps = {\n            refElem\n        };\n        const $xeRow = inject('$xeRow', null);\n        const computeRowGutter = computed(() => {\n            if ($xeRow) {\n                return $xeRow.props.gutter;\n            }\n            return null;\n        });\n        const computeRowVertical = computed(() => {\n            if ($xeRow) {\n                return $xeRow.props.vertical;\n            }\n            return null;\n        });\n        const computeColStyle = computed(() => {\n            const { width } = props;\n            const rowGutter = computeRowGutter.value;\n            const rowVertical = computeRowVertical.value;\n            const style = {};\n            if (rowGutter) {\n                let [lrGutter, tbGutter] = XEUtils.isArray(rowGutter) ? rowGutter : [rowGutter];\n                if (rowVertical) {\n                    tbGutter = lrGutter;\n                    lrGutter = '';\n                }\n                if (lrGutter) {\n                    const padding = XEUtils.isNumber(lrGutter) ? toCssUnit(lrGutter / 2) : `calc(${toCssUnit(lrGutter)} / 2)`;\n                    style.paddingLeft = padding;\n                    style.paddingRight = padding;\n                }\n                if (tbGutter) {\n                    const padding = XEUtils.isNumber(tbGutter) ? toCssUnit(tbGutter / 2) : `calc(${toCssUnit(tbGutter)} / 2)`;\n                    style.paddingTop = padding;\n                    style.paddingBottom = padding;\n                }\n            }\n            if (width) {\n                style.width = toCssUnit(width);\n            }\n            return style;\n        });\n        const computeMaps = {};\n        const $xeCol = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $col: $xeCol }, params));\n        };\n        const colMethods = {\n            dispatchEvent\n        };\n        const colPrivateMethods = {};\n        Object.assign($xeCol, colMethods, colPrivateMethods);\n        const renderVN = () => {\n            const { span, fill, align, width, ellipsis } = props;\n            const colStyle = computeColStyle.value;\n            const defaultSlot = slots.default;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-col', span ? `span${span}` : '', align ? `align--${align}` : '', {\n                        'is--span': !!span,\n                        'is--width': !!width,\n                        'is--fill': fill,\n                        'is--ellipsis': ellipsis\n                    }],\n                style: colStyle\n            }, [\n                h('div', {\n                    class: 'vxe-col--inner'\n                }, defaultSlot ? defaultSlot({}) : [])\n            ]);\n        };\n        $xeCol.renderVN = renderVN;\n        return $xeCol;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeColComponent from '../row/src/col';\nimport { dynamicApp } from '../dynamics';\nexport const VxeCol = Object.assign({}, VxeColComponent, {\n    install(app) {\n        app.component(VxeColComponent.name, VxeColComponent);\n    }\n});\ndynamicApp.use(VxeCol);\nVxeUI.component(VxeColComponent);\nexport const Col = VxeCol;\nexport default VxeCol;\n", "import { defineComponent, ref, h, reactive, provide, computed, watch } from 'vue';\nimport { getConfig, getIcon, createEvent, permission, renderEmptyElement, useSize } from '../../ui';\nimport { getSlotVNs } from '../../ui/src/vn';\nimport XEUtils from 'xe-utils';\nexport default defineComponent({\n    name: 'VxeCollapse',\n    props: {\n        modelValue: Array,\n        options: Array,\n        padding: {\n            type: Boolean,\n            default: () => getConfig().collapse.padding\n        },\n        expandConfig: Object,\n        size: {\n            type: String,\n            default: () => getConfig().collapse.size || getConfig().size\n        }\n    },\n    emits: [\n        'update:modelValue',\n        'load',\n        'change',\n        'toggle-expand'\n    ],\n    setup(props, context) {\n        const { emit, slots } = context;\n        const xID = XEUtils.uniqueId();\n        const { computeSize } = useSize(props);\n        const refElem = ref();\n        const reactData = reactive({\n            staticPanes: [],\n            activeNames: [],\n            initNames: [],\n            cachePaneMaps: {}\n        });\n        const refMaps = {\n            refElem\n        };\n        const computeItemOptions = computed(() => {\n            const { options } = props;\n            return (options || []).filter((item) => handleFilterItem(item));\n        });\n        const computeItemStaticOptions = computed(() => {\n            const { staticPanes } = reactData;\n            return staticPanes.filter((item) => handleFilterItem(item));\n        });\n        const computeExpandOpts = computed(() => {\n            return Object.assign({}, getConfig().collapse.expandConfig, props.expandConfig);\n        });\n        const computeMaps = {};\n        const $xeCollapse = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const handleFilterItem = (item) => {\n            const { permissionCode } = item;\n            if (permissionCode) {\n                if (!permission.checkVisible(permissionCode)) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        const addInitName = (name) => {\n            const { initNames } = reactData;\n            if (name && !initNames.includes(name)) {\n                initNames.push(name);\n                dispatchEvent('load', { name }, null);\n                return true;\n            }\n            return false;\n        };\n        const initDefaultName = (list) => {\n            const { activeNames } = reactData;\n            const nameMaps = {};\n            if (list && list.length) {\n                list.forEach((item) => {\n                    const { name, preload } = item || {};\n                    if (name) {\n                        const isActive = activeNames.includes(name);\n                        nameMaps[`${name}`] = {\n                            loading: false\n                        };\n                        if (isActive) {\n                            addInitName(name);\n                        }\n                        if (preload) {\n                            if (!isActive) {\n                                activeNames.push(name);\n                            }\n                        }\n                    }\n                });\n            }\n            reactData.activeNames = activeNames ? activeNames.slice(0) : [];\n            reactData.cachePaneMaps = nameMaps;\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $collapse: $xeCollapse }, params));\n        };\n        const collapseMethods = {\n            dispatchEvent\n        };\n        const callSlot = (slotFunc, params) => {\n            if (slotFunc) {\n                if (XEUtils.isString(slotFunc)) {\n                    slotFunc = slots[slotFunc] || null;\n                }\n                if (XEUtils.isFunction(slotFunc)) {\n                    return getSlotVNs(slotFunc(params));\n                }\n            }\n            return [];\n        };\n        const handleClickEvent = (evnt, item) => {\n            const { activeNames } = reactData;\n            const { name } = item;\n            if (name) {\n                const aIndex = activeNames.indexOf(name);\n                let expanded = false;\n                if (aIndex === -1) {\n                    expanded = true;\n                    activeNames.push(name);\n                }\n                else {\n                    activeNames.splice(aIndex, 1);\n                }\n                addInitName(name);\n                dispatchEvent('change', { value: activeNames, name }, evnt);\n                dispatchEvent('toggle-expand', { value: activeNames, name, expanded }, evnt);\n            }\n        };\n        const collapsePrivateMethods = {};\n        Object.assign($xeCollapse, collapseMethods, collapsePrivateMethods);\n        const renderList = (itemList) => {\n            const { activeNames, initNames } = reactData;\n            const expandOpts = computeExpandOpts.value;\n            return itemList.map(item => {\n                const { icon, name, title, slots } = item;\n                const titleSlot = slots ? slots.title : null;\n                const defaultSlot = slots ? slots.default : null;\n                const isActive = name && activeNames.includes(name);\n                return h('div', {\n                    class: 'vxe-collapse-item'\n                }, [\n                    h('div', {\n                        class: 'vxe-collapse--item-header',\n                        onClick(evnt) {\n                            handleClickEvent(evnt, item);\n                        }\n                    }, [\n                        expandOpts.showIcon\n                            ? h('span', {\n                                class: 'vxe-collapse--item-switch'\n                            }, [\n                                h('i', {\n                                    class: isActive ? getIcon().COLLAPSE_OPEN : getIcon().COLLAPSE_CLOSE\n                                })\n                            ])\n                            : renderEmptyElement($xeCollapse),\n                        icon\n                            ? h('span', {\n                                class: 'vxe-collapse--item-icon'\n                            }, [\n                                h('i', {\n                                    class: icon\n                                })\n                            ])\n                            : renderEmptyElement($xeCollapse),\n                        h('span', {\n                            class: 'vxe-collapse--item-name'\n                        }, titleSlot ? callSlot(titleSlot, { name, title }) : `${title}`)\n                    ]),\n                    h('div', {\n                        class: ['vxe-collapse--item-content', {\n                                'is--visible': isActive\n                            }]\n                    }, [\n                        name && initNames.includes(name)\n                            ? h('div', {\n                                class: 'vxe-collapse--item-inner'\n                            }, [\n                                defaultSlot ? callSlot(defaultSlot, { name, title }) : ''\n                            ])\n                            : renderEmptyElement($xeCollapse)\n                    ])\n                ]);\n            });\n        };\n        const renderVN = () => {\n            const { padding } = props;\n            const vSize = computeSize.value;\n            const itemOptions = computeItemOptions.value;\n            const itemStaticOptions = computeItemStaticOptions.value;\n            const defaultSlot = slots.default;\n            const itemList = defaultSlot ? itemStaticOptions : itemOptions;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-collapse', {\n                        [`size--${vSize}`]: vSize,\n                        'is--padding': padding\n                    }]\n            }, [\n                h('div', {\n                    class: 'vxe-collapse-slots'\n                }, defaultSlot ? defaultSlot({}) : []),\n                renderList(itemList)\n            ]);\n        };\n        watch(() => props.modelValue, (val) => {\n            reactData.activeNames = val || [];\n        });\n        const optsFlag = ref(0);\n        watch(() => props.options ? props.options.length : -1, () => {\n            optsFlag.value++;\n        });\n        watch(() => props.options, () => {\n            optsFlag.value++;\n        });\n        watch(optsFlag, () => {\n            initDefaultName(props.options);\n        });\n        const stFlag = ref(0);\n        watch(() => reactData.staticPanes ? reactData.staticPanes.length : -1, () => {\n            stFlag.value++;\n        });\n        watch(() => reactData.staticPanes, () => {\n            stFlag.value++;\n        });\n        watch(stFlag, () => {\n            initDefaultName(reactData.staticPanes);\n        });\n        reactData.activeNames = props.modelValue || [];\n        initDefaultName(reactData.staticPanes.length ? reactData.staticPanes : props.options);\n        provide('$xeCollapse', $xeCollapse);\n        $xeCollapse.renderVN = renderVN;\n        return $xeCollapse;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeCollapseComponent from './src/collapse';\nimport { dynamicApp } from '../dynamics';\nexport const VxeCollapse = Object.assign({}, VxeCollapseComponent, {\n    install(app) {\n        app.component(VxeCollapseComponent.name, VxeCollapseComponent);\n    }\n});\ndynamicApp.use(VxeCollapse);\nVxeUI.component(VxeCollapseComponent);\nexport const Collapse = VxeCollapse;\nexport default VxeCollapse;\n", "import { defineComponent, ref, h, inject, watch, reactive, onMounted, onUnmounted } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { createEvent } from '../../ui';\nimport { assembleCollapseItem, destroyCollapseItem } from './util';\nexport default defineComponent({\n    name: 'VxeCollapsePane',\n    props: {\n        title: [String, Number],\n        name: [String, Number],\n        icon: String,\n        preload: Boolean,\n        permissionCode: [String, Number]\n    },\n    emits: [],\n    setup(props, context) {\n        const { emit, slots } = context;\n        const xID = XEUtils.uniqueId();\n        const $xeCollapse = inject('$xeCollapse', null);\n        const refElem = ref();\n        const reactData = reactive({});\n        const collapseConfig = reactive({\n            id: xID,\n            title: props.title,\n            name: props.name,\n            icon: props.icon,\n            preload: props.preload,\n            permissionCode: props.permissionCode,\n            slots: slots\n        });\n        const refMaps = {\n            refElem\n        };\n        const computeMaps = {};\n        const $xeCollapsePane = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $collapsePane: $xeCollapsePane }, params));\n        };\n        const collapsePaneMethods = {\n            dispatchEvent\n        };\n        const collapsePanePrivateMethods = {};\n        Object.assign($xeCollapsePane, collapsePaneMethods, collapsePanePrivateMethods);\n        const renderVN = () => {\n            return h('div', {\n                ref: refElem\n            }, []);\n        };\n        watch(() => props.title, (val) => {\n            collapseConfig.title = val;\n        });\n        watch(() => props.name, (val) => {\n            collapseConfig.name = val;\n        });\n        watch(() => props.icon, (val) => {\n            collapseConfig.icon = val;\n        });\n        watch(() => props.permissionCode, (val) => {\n            collapseConfig.permissionCode = val;\n        });\n        onMounted(() => {\n            const elem = refElem.value;\n            if ($xeCollapse && elem) {\n                assembleCollapseItem($xeCollapse, elem, collapseConfig);\n            }\n        });\n        onUnmounted(() => {\n            if ($xeCollapse) {\n                destroyCollapseItem($xeCollapse, collapseConfig);\n            }\n        });\n        $xeCollapsePane.renderVN = renderVN;\n        return $xeCollapsePane;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import XEUtils from 'xe-utils';\nexport function assembleCollapseItem($xeCollapse, elem, collapseConfig) {\n    const staticPanes = $xeCollapse.reactData.staticPanes;\n    const parentElem = elem.parentNode;\n    if (parentElem) {\n        staticPanes.splice(XEUtils.arrayIndexOf(parentElem.children, elem), 0, collapseConfig);\n        $xeCollapse.reactData.staticPanes = staticPanes.slice(0);\n    }\n}\nexport function destroyCollapseItem($xeCollapse, collapseConfig) {\n    const staticPanes = $xeCollapse.reactData.staticPanes;\n    const matchObj = XEUtils.findTree(staticPanes, item => item.id === collapseConfig.id, { children: 'children' });\n    if (matchObj) {\n        matchObj.items.splice(matchObj.index, 1);\n    }\n    $xeCollapse.reactData.staticPanes = staticPanes.slice(0);\n}\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeCollapsePaneComponent from '../collapse/src/collapse-pane';\nimport { dynamicApp } from '../dynamics';\nexport const VxeCollapsePane = Object.assign({}, VxeCollapsePaneComponent, {\n    install(app) {\n        app.component(VxeCollapsePaneComponent.name, VxeCollapsePaneComponent);\n    }\n});\ndynamicApp.use(VxeCollapsePane);\nVxeUI.component(VxeCollapsePaneComponent);\nexport const CollapsePane = VxeCollapsePane;\nexport default VxeCollapsePane;\n", "import { defineComponent, watch, computed, provide, ref, inject, Teleport, h, nextTick, reactive, onMounted, onUnmounted } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { VxeUI, getIcon, getConfig, getI18n, globalEvents, createEvent, useSize, renderEmptyElement } from '../../ui';\nimport { getEventTargetNode, getAbsolutePos, toCssUnit } from '../../ui/src/dom';\nimport { getLastZIndex, nextZIndex } from '../../ui/src/utils';\nimport { parseColor, updateColorAlpha, hexToHsv, rgbToHsv, rgbToHex, hexToRgb, hsvToRgb, toRgb } from './util';\nimport VxeButtonComponent from '../../button/src/button';\nimport VxeInputComponent from '../../input/src/input';\nexport default defineComponent({\n    name: 'VxeColorPicker',\n    props: {\n        modelValue: String,\n        placeholder: String,\n        clearable: {\n            type: Boolean,\n            default: () => getConfig().colorPicker.clearable\n        },\n        type: {\n            type: String,\n            default: () => getConfig().colorPicker.type\n        },\n        size: {\n            type: String,\n            default: () => getConfig().colorPicker.size || getConfig().size\n        },\n        className: [String, Function],\n        popupClassName: [String, Function],\n        colors: {\n            type: Array,\n            default: () => XEUtils.clone(getConfig().colorPicker.colors, true) || []\n        },\n        showAlpha: {\n            type: Boolean,\n            default: () => getConfig().colorPicker.showAlpha\n        },\n        showEyeDropper: {\n            type: Boolean,\n            default: () => getConfig().colorPicker.showEyeDropper\n        },\n        showColorExtractor: {\n            type: Boolean,\n            default: () => getConfig().colorPicker.showColorExtractor\n        },\n        showQuick: {\n            type: Boolean,\n            default: () => getConfig().colorPicker.showQuick\n        },\n        readonly: {\n            type: Boolean,\n            default: null\n        },\n        disabled: {\n            type: Boolean,\n            default: null\n        },\n        clickToCopy: {\n            type: Boolean,\n            default: () => getConfig().colorPicker.clickToCopy\n        },\n        placement: String,\n        transfer: {\n            type: Boolean,\n            default: null\n        }\n    },\n    emits: [\n        'update:modelValue',\n        'change',\n        'clear',\n        'click'\n    ],\n    setup(props, context) {\n        const { emit } = context;\n        const $xeModal = inject('$xeModal', null);\n        const $xeDrawer = inject('$xeDrawer', null);\n        const $xeTable = inject('$xeTable', null);\n        const $xeForm = inject('$xeForm', null);\n        const formItemInfo = inject('xeFormItemInfo', null);\n        const WinEyeDropper = typeof window !== 'undefined' ? window.EyeDropper : null;\n        const xID = XEUtils.uniqueId();\n        const { computeSize } = useSize(props);\n        const refElem = ref();\n        const refInput = ref();\n        const refOptionPanel = ref();\n        const refHueSliderElem = ref();\n        const refHueSliderBtnElem = ref();\n        const refAlphaSliderElem = ref();\n        const refAlphaSliderBtnElem = ref();\n        const refColorPanelElem = ref();\n        const refColorActiveElem = ref();\n        const reactData = reactive({\n            initialized: false,\n            selectColor: `${props.modelValue || ''}`,\n            panelColor: '',\n            hexValue: '',\n            rValue: 0,\n            gValue: 0,\n            bValue: 0,\n            aValue: 0,\n            panelIndex: 0,\n            panelStyle: {},\n            panelPlacement: null,\n            visiblePanel: false,\n            isAniVisible: false,\n            isActivated: false\n        });\n        const internalData = {\n        // hpTimeout: undefined\n        };\n        const computeFormReadonly = computed(() => {\n            const { readonly } = props;\n            if (readonly === null) {\n                if ($xeForm) {\n                    return $xeForm.props.readonly;\n                }\n                return false;\n            }\n            return readonly;\n        });\n        const computeIsDisabled = computed(() => {\n            const { disabled } = props;\n            if (disabled === null) {\n                if ($xeForm) {\n                    return $xeForm.props.disabled;\n                }\n                return false;\n            }\n            return disabled;\n        });\n        const computeBtnTransfer = computed(() => {\n            const { transfer } = props;\n            if (transfer === null) {\n                const globalTransfer = getConfig().colorPicker.transfer;\n                if (XEUtils.isBoolean(globalTransfer)) {\n                    return globalTransfer;\n                }\n                if ($xeTable || $xeModal || $xeDrawer || $xeForm) {\n                    return true;\n                }\n            }\n            return transfer;\n        });\n        const computeColorList = computed(() => {\n            const { colors } = props;\n            if (colors) {\n                return colors.map(item => {\n                    if (XEUtils.isString(item)) {\n                        return {\n                            label: item,\n                            value: item\n                        };\n                    }\n                    return {\n                        label: XEUtils.eqNull(item.label) ? item.value : item.label,\n                        value: item.value\n                    };\n                });\n            }\n            return [];\n        });\n        const computeValueType = computed(() => {\n            const { type } = props;\n            if (type === 'rgb' || type === 'rgba') {\n                return 'rgb';\n            }\n            return 'hex';\n        });\n        const computeIsRgb = computed(() => {\n            const valueType = computeValueType.value;\n            return valueType === 'rgb';\n        });\n        const refMaps = {\n            refElem\n        };\n        const computeMaps = {};\n        const $xeColorPicker = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const emitModel = (value) => {\n            emit('update:modelValue', value);\n        };\n        const updateMode = () => {\n            const { modelValue } = props;\n            reactData.selectColor = XEUtils.toValueString(modelValue);\n            updateModelColor();\n        };\n        const updateModelColor = () => {\n            const { selectColor, isAniVisible } = reactData;\n            const isRgb = computeIsRgb.value;\n            const hueSliderEl = refHueSliderElem.value;\n            const alphaSliderEl = refAlphaSliderElem.value;\n            const colorRest = parseColor(selectColor);\n            reactData.hexValue = colorRest.hex;\n            reactData.rValue = colorRest.r;\n            reactData.gValue = colorRest.g;\n            reactData.bValue = colorRest.b;\n            reactData.aValue = colorRest.a;\n            if (colorRest.value) {\n                if (isRgb) {\n                    if (colorRest.type === 'hex') {\n                        const rgbRest = hexToRgb(colorRest.hex);\n                        if (rgbRest) {\n                            reactData.rValue = rgbRest.r;\n                            reactData.gValue = rgbRest.g;\n                            reactData.bValue = rgbRest.b;\n                            reactData.aValue = rgbRest.a;\n                        }\n                    }\n                }\n                else {\n                    if (colorRest.type !== 'hex') {\n                        reactData.hexValue = rgbToHex(colorRest);\n                    }\n                }\n            }\n            if (isAniVisible) {\n                const hsvRest = colorRest.type === 'hex' ? hexToHsv(colorRest.hex) : rgbToHsv(colorRest);\n                const colorPanelEl = refColorPanelElem.value;\n                if (hsvRest) {\n                    if (colorPanelEl) {\n                        const offsetTop = colorPanelEl.clientHeight * (1 - hsvRest.v);\n                        const offsetLeft = colorPanelEl.clientWidth * hsvRest.s;\n                        handlePanelColor(offsetLeft, offsetTop);\n                    }\n                    if (hueSliderEl) {\n                        handleHueColor(XEUtils.ceil((1 - hsvRest.h / 360) * hueSliderEl.clientWidth));\n                    }\n                }\n                if (alphaSliderEl) {\n                    handleAlphaColor(alphaSliderEl.clientWidth * colorRest.a);\n                }\n            }\n        };\n        const updateZindex = () => {\n            if (reactData.panelIndex < getLastZIndex()) {\n                reactData.panelIndex = nextZIndex();\n            }\n        };\n        const updatePlacement = () => {\n            return nextTick().then(() => {\n                const { placement } = props;\n                const { panelIndex } = reactData;\n                const el = refElem.value;\n                const panelElem = refOptionPanel.value;\n                const btnTransfer = computeBtnTransfer.value;\n                if (panelElem && el) {\n                    const targetHeight = el.offsetHeight;\n                    const targetWidth = el.offsetWidth;\n                    const panelHeight = panelElem.offsetHeight;\n                    const panelWidth = panelElem.offsetWidth;\n                    const marginSize = 5;\n                    const panelStyle = {\n                        zIndex: panelIndex\n                    };\n                    const { boundingTop, boundingLeft, visibleHeight, visibleWidth } = getAbsolutePos(el);\n                    let panelPlacement = 'bottom';\n                    if (btnTransfer) {\n                        let left = boundingLeft;\n                        let top = boundingTop + targetHeight;\n                        if (placement === 'top') {\n                            panelPlacement = 'top';\n                            top = boundingTop - panelHeight;\n                        }\n                        else if (!placement) {\n                            // 如果下面不够放，则向上\n                            if (top + panelHeight + marginSize > visibleHeight) {\n                                panelPlacement = 'top';\n                                top = boundingTop - panelHeight;\n                            }\n                            // 如果上面不够放，则向下（优先）\n                            if (top < marginSize) {\n                                panelPlacement = 'bottom';\n                                top = boundingTop + targetHeight;\n                            }\n                        }\n                        // 如果溢出右边\n                        if (left + panelWidth + marginSize > visibleWidth) {\n                            left -= left + panelWidth + marginSize - visibleWidth;\n                        }\n                        // 如果溢出左边\n                        if (left < marginSize) {\n                            left = marginSize;\n                        }\n                        Object.assign(panelStyle, {\n                            left: `${left}px`,\n                            top: `${top}px`,\n                            minWidth: `${targetWidth}px`\n                        });\n                    }\n                    else {\n                        if (placement === 'top') {\n                            panelPlacement = 'top';\n                            panelStyle.bottom = `${targetHeight}px`;\n                        }\n                        else if (!placement) {\n                            // 如果下面不够放，则向上\n                            if (boundingTop + targetHeight + panelHeight > visibleHeight) {\n                                // 如果上面不够放，则向下（优先）\n                                if (boundingTop - targetHeight - panelHeight > marginSize) {\n                                    panelPlacement = 'top';\n                                    panelStyle.bottom = `${targetHeight}px`;\n                                }\n                            }\n                        }\n                    }\n                    reactData.panelStyle = panelStyle;\n                    reactData.panelPlacement = panelPlacement;\n                    return nextTick();\n                }\n            });\n        };\n        const showOptionPanel = () => {\n            const { hpTimeout } = internalData;\n            const isDisabled = computeIsDisabled.value;\n            if (!isDisabled) {\n                if (hpTimeout) {\n                    clearTimeout(hpTimeout);\n                    internalData.hpTimeout = undefined;\n                }\n                if (!reactData.initialized) {\n                    reactData.initialized = true;\n                }\n                reactData.isActivated = true;\n                reactData.isAniVisible = true;\n                setTimeout(() => {\n                    updateModelColor();\n                    reactData.visiblePanel = true;\n                }, 10);\n                updateZindex();\n                updatePlacement();\n            }\n        };\n        const hideOptionPanel = () => {\n            reactData.visiblePanel = false;\n            internalData.hpTimeout = setTimeout(() => {\n                reactData.isAniVisible = false;\n            }, 350);\n        };\n        const changeEvent = (evnt, value) => {\n            reactData.selectColor = value;\n            if (value !== props.modelValue) {\n                emitModel(value);\n                dispatchEvent('change', { value }, evnt);\n                // 自动更新校验状态\n                if ($xeForm && formItemInfo) {\n                    $xeForm.triggerItemEvent(evnt, formItemInfo.itemConfig.field, value);\n                }\n            }\n        };\n        const clearValueEvent = (evnt, selectValue) => {\n            changeEvent(evnt, selectValue);\n            dispatchEvent('clear', { value: selectValue }, evnt);\n        };\n        const focusEvent = () => {\n            const isDisabled = computeIsDisabled.value;\n            if (!isDisabled) {\n                if (!reactData.visiblePanel) {\n                    showOptionPanel();\n                }\n            }\n        };\n        const blurEvent = () => {\n            reactData.isActivated = false;\n        };\n        const clearEvent = (evnt) => {\n            clearValueEvent(evnt, null);\n            hideOptionPanel();\n        };\n        const confirmEvent = (evnt) => {\n            const { selectColor } = reactData;\n            changeEvent(evnt, selectColor);\n            hideOptionPanel();\n        };\n        const togglePanelEvent = (evnt) => {\n            evnt.preventDefault();\n            if (reactData.visiblePanel) {\n                hideOptionPanel();\n            }\n            else {\n                showOptionPanel();\n            }\n        };\n        const clickEvent = (evnt) => {\n            togglePanelEvent(evnt);\n            dispatchEvent('click', {}, evnt);\n        };\n        const handleHueColor = (offsetLeft) => {\n            const hueSliderEl = refHueSliderElem.value;\n            const hueSliderBtnEl = refHueSliderBtnElem.value;\n            if (hueSliderEl && hueSliderBtnEl) {\n                if (offsetLeft < 0) {\n                    offsetLeft = 0;\n                }\n                const barWidth = XEUtils.toInteger(hueSliderEl.clientWidth);\n                const itemNum = 255;\n                const countNum = itemNum * 6;\n                const offsetX = XEUtils.ceil(countNum / barWidth * offsetLeft);\n                const offsetNum = offsetX % itemNum;\n                let rNum = 0;\n                let gNum = 0;\n                let bNum = 0;\n                switch (Math.ceil(offsetX / itemNum)) {\n                    case 1:\n                        rNum = itemNum;\n                        bNum = offsetNum;\n                        break;\n                    case 2:\n                        rNum = itemNum - offsetNum;\n                        bNum = itemNum;\n                        break;\n                    case 3:\n                        gNum = offsetNum;\n                        bNum = itemNum;\n                        break;\n                    case 4:\n                        gNum = itemNum;\n                        bNum = itemNum - offsetNum;\n                        break;\n                    case 5:\n                        rNum = offsetNum;\n                        gNum = itemNum;\n                        break;\n                    case 6:\n                        rNum = itemNum;\n                        gNum = itemNum - offsetNum;\n                        break;\n                }\n                reactData.panelColor = toRgb(rNum, gNum, bNum);\n                hueSliderBtnEl.style.left = toCssUnit(offsetLeft);\n            }\n        };\n        const handleHueBarEvent = (evnt) => {\n            const hueSliderEl = refHueSliderElem.value;\n            const hueSliderBtnEl = refHueSliderBtnElem.value;\n            if (hueSliderEl && hueSliderBtnEl) {\n                const hueSliderRect = hueSliderEl.getBoundingClientRect();\n                const barWidth = XEUtils.toInteger(hueSliderEl.clientWidth);\n                const offsetLeft = XEUtils.ceil(Math.min(barWidth - 1, Math.max(1, evnt.clientX - hueSliderRect.x)));\n                handleHueColor(offsetLeft);\n            }\n        };\n        const handleHueSliderMousedownEvent = (evnt) => {\n            evnt.preventDefault();\n            document.onmousemove = evnt => {\n                evnt.preventDefault();\n                handleHueBarEvent(evnt);\n            };\n            document.onmouseup = (evnt) => {\n                document.onmousemove = null;\n                document.onmouseup = null;\n                handleHueBarEvent(evnt);\n            };\n        };\n        const handleAlphaColor = (offsetLeft) => {\n            const { selectColor } = reactData;\n            const alphaSliderEl = refAlphaSliderElem.value;\n            const alphaSliderBtnEl = refAlphaSliderBtnElem.value;\n            if (alphaSliderEl && alphaSliderBtnEl) {\n                const alphaSliderRect = alphaSliderEl.getBoundingClientRect();\n                const barWidth = alphaSliderRect.width;\n                if (offsetLeft < 0) {\n                    offsetLeft = 0;\n                }\n                if (offsetLeft > barWidth) {\n                    offsetLeft = barWidth;\n                }\n                const alpha = XEUtils.ceil(100 / barWidth * offsetLeft / 100, 2);\n                reactData.aValue = alpha;\n                alphaSliderBtnEl.style.left = toCssUnit(offsetLeft);\n                reactData.selectColor = updateColorAlpha(selectColor, alpha);\n            }\n        };\n        const handleAlphaBarEvent = (evnt) => {\n            const alphaSliderEl = refAlphaSliderElem.value;\n            const alphaSliderBtnEl = refAlphaSliderBtnElem.value;\n            if (alphaSliderEl && alphaSliderBtnEl) {\n                const alphaSliderRect = alphaSliderEl.getBoundingClientRect();\n                const barWidth = alphaSliderRect.width;\n                const offsetLeft = Math.min(barWidth, Math.max(0, evnt.clientX - alphaSliderRect.x));\n                handleAlphaColor(offsetLeft);\n                updateModelColor();\n            }\n        };\n        const handleAlphaSliderMousedownEvent = (evnt) => {\n            evnt.preventDefault();\n            document.onmousemove = evnt => {\n                evnt.preventDefault();\n                handleAlphaBarEvent(evnt);\n            };\n            document.onmouseup = (evnt) => {\n                document.onmousemove = null;\n                document.onmouseup = null;\n                handleAlphaBarEvent(evnt);\n            };\n        };\n        const handleInputRgbEvent = () => {\n            const { rValue, gValue, bValue, aValue } = reactData;\n            reactData.selectColor = toRgb(rValue, gValue, bValue, aValue);\n            updateModelColor();\n        };\n        const handleInputAlphaEvent = () => {\n            const { aValue } = reactData;\n            const alphaSliderEl = refAlphaSliderElem.value;\n            const alphaSliderBtnEl = refAlphaSliderBtnElem.value;\n            if (alphaSliderEl && alphaSliderBtnEl) {\n                const alphaSliderRect = alphaSliderEl.getBoundingClientRect();\n                const barWidth = alphaSliderRect.width;\n                const offsetLeft = barWidth * aValue;\n                handleAlphaColor(offsetLeft);\n            }\n        };\n        const handleQuickEvent = (evnt, item) => {\n            const value = item.value;\n            reactData.selectColor = value;\n            updateModelColor();\n        };\n        const handlePanelColor = (offsetLeft, offsetTop) => {\n            const colorActiveEl = refColorActiveElem.value;\n            if (colorActiveEl) {\n                colorActiveEl.style.top = toCssUnit(offsetTop);\n                colorActiveEl.style.left = toCssUnit(offsetLeft);\n            }\n        };\n        const handleEyeDropperEvent = () => {\n            if (WinEyeDropper) {\n                try {\n                    const eyeDropper = new WinEyeDropper();\n                    eyeDropper.open().then((rest) => {\n                        if (rest && rest.sRGBHex) {\n                            reactData.selectColor = rest.sRGBHex;\n                            updateModelColor();\n                        }\n                    }).catch(() => {\n                    });\n                }\n                catch (e) { }\n            }\n        };\n        const handleSelectColorMousedownEvent = (evnt) => {\n            const { showAlpha } = props;\n            const { panelColor, aValue } = reactData;\n            const colorPanelEl = refColorPanelElem.value;\n            const colorActiveEl = refColorActiveElem.value;\n            if (colorPanelEl && colorActiveEl) {\n                const colorPanelRect = colorPanelEl.getBoundingClientRect();\n                const offsetTop = evnt.clientY - colorPanelRect.y;\n                const offsetLeft = evnt.clientX - colorPanelRect.x;\n                const colorRest = parseColor(panelColor);\n                if (colorRest) {\n                    const hsvRest = colorRest.type === 'hex' ? hexToHsv(colorRest.hex) : rgbToHsv(colorRest);\n                    if (hsvRest) {\n                        const ragRest = hsvToRgb(hsvRest.h, offsetLeft / colorPanelEl.clientWidth, (1 - offsetTop / colorPanelEl.clientHeight));\n                        reactData.selectColor = toRgb(ragRest.r, ragRest.g, ragRest.b, showAlpha ? aValue : null);\n                        handlePanelColor(offsetLeft, offsetTop);\n                        updateModelColor();\n                    }\n                }\n            }\n        };\n        const handleCopyColorEvent = () => {\n            const { selectColor } = reactData;\n            if (selectColor) {\n                if (VxeUI.clipboard.copy(selectColor)) {\n                    if (VxeUI.modal) {\n                        VxeUI.modal.message({\n                            content: getI18n('vxe.colorPicker.copySuccess', [selectColor]),\n                            status: 'success'\n                        });\n                    }\n                }\n            }\n        };\n        const handleGlobalMousewheelEvent = (evnt) => {\n            const { visiblePanel } = reactData;\n            const isDisabled = computeIsDisabled.value;\n            if (!isDisabled) {\n                if (visiblePanel) {\n                    const panelElem = refOptionPanel.value;\n                    if (getEventTargetNode(evnt, panelElem).flag) {\n                        updatePlacement();\n                    }\n                    else {\n                        hideOptionPanel();\n                    }\n                }\n            }\n        };\n        const handleGlobalMousedownEvent = (evnt) => {\n            const { visiblePanel } = reactData;\n            const isDisabled = computeIsDisabled.value;\n            if (!isDisabled) {\n                const el = refElem.value;\n                const panelElem = refOptionPanel.value;\n                reactData.isActivated = getEventTargetNode(evnt, el).flag || getEventTargetNode(evnt, panelElem).flag;\n                if (visiblePanel && !reactData.isActivated) {\n                    hideOptionPanel();\n                }\n            }\n        };\n        const handleGlobalBlurEvent = () => {\n            hideOptionPanel();\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $colorPicker: $xeColorPicker }, params));\n        };\n        const colorPickerMethods = {\n            dispatchEvent\n        };\n        const colorPickerPrivateMethods = {};\n        Object.assign($xeColorPicker, colorPickerMethods, colorPickerPrivateMethods);\n        const renderColorWrapper = () => {\n            const { showColorExtractor } = props;\n            const { panelColor } = reactData;\n            if (showColorExtractor) {\n                return h('div', {\n                    ref: refColorPanelElem,\n                    class: 'vxe-color-picker--color-wrapper',\n                    onMousedown: handleSelectColorMousedownEvent\n                }, [\n                    h('div', {\n                        class: 'vxe-color-picker--color-bg',\n                        style: {\n                            backgroundColor: panelColor\n                        }\n                    }),\n                    h('div', {\n                        class: 'vxe-color-picker--white-bg'\n                    }),\n                    h('div', {\n                        class: 'vxe-color-picker--black-bg'\n                    }),\n                    h('div', {\n                        ref: refColorActiveElem,\n                        class: 'vxe-color-picker--color-active'\n                    })\n                ]);\n            }\n            return renderEmptyElement($xeColorPicker);\n        };\n        const renderColorBar = () => {\n            const { showAlpha, clickToCopy, showEyeDropper } = props;\n            const { hexValue, rValue, gValue, bValue, aValue, selectColor, panelColor } = reactData;\n            const valueType = computeValueType.value;\n            const isRgb = computeIsRgb.value;\n            return h('div', {\n                class: 'vxe-color-picker--bar-wrapper'\n            }, [\n                h('div', {\n                    class: 'vxe-color-picker--slider-wrapper'\n                }, [\n                    showEyeDropper && WinEyeDropper\n                        ? h('div', {\n                            class: 'vxe-color-picker--color-dropper'\n                        }, [\n                            h('span', {\n                                class: 'vxe-color-picker--color-dropper-btn',\n                                onClick: handleEyeDropperEvent\n                            }, [\n                                h('i', {\n                                    class: getIcon().EYE_DROPPER\n                                })\n                            ])\n                        ])\n                        : renderEmptyElement($xeColorPicker),\n                    h('div', {\n                        class: 'vxe-color-picker--slider-preview'\n                    }, [\n                        h('div', {\n                            class: 'vxe-color-picker--preview-btn'\n                        }, [\n                            h('div', {\n                                class: 'vxe-color-picker--preview-color',\n                                style: {\n                                    backgroundColor: selectColor\n                                }\n                            }, clickToCopy\n                                ? [\n                                    h('span', {\n                                        class: 'vxe-color-picker--preview-copy-btn',\n                                        onClick: handleCopyColorEvent\n                                    }, [\n                                        h('i', {\n                                            class: getIcon().COLOR_COPY\n                                        })\n                                    ])\n                                ]\n                                : [])\n                        ])\n                    ]),\n                    h('div', {\n                        class: 'vxe-color-picker--slider-handle'\n                    }, [\n                        h('div', {\n                            ref: refHueSliderElem,\n                            class: 'vxe-color-picker--bar-hue-slider',\n                            onClick: handleHueBarEvent\n                        }, [\n                            h('div', {\n                                ref: refHueSliderBtnElem,\n                                class: 'vxe-color-picker--bar-hue-btn',\n                                onMousedown: handleHueSliderMousedownEvent\n                            })\n                        ]),\n                        showAlpha\n                            ? h('div', {\n                                ref: refAlphaSliderElem,\n                                class: 'vxe-color-picker--bar-alpha-slider',\n                                onClick: handleAlphaBarEvent\n                            }, [\n                                h('div', {\n                                    class: 'vxe-color-picker--bar-alpha-bg',\n                                    style: {\n                                        background: `linear-gradient(to right, rgba(0, 0, 0, 0), ${panelColor})`\n                                    }\n                                }),\n                                h('div', {\n                                    ref: refAlphaSliderBtnElem,\n                                    class: 'vxe-color-picker--bar-alpha-btn',\n                                    onMousedown: handleAlphaSliderMousedownEvent\n                                })\n                            ])\n                            : renderEmptyElement($xeColorPicker)\n                    ])\n                ]),\n                h('div', {\n                    class: `vxe-color-picker--${valueType}-wrapper`\n                }, isRgb\n                    ? [\n                        h('div', {\n                            class: 'vxe-color-picker--input-wrapper'\n                        }, [\n                            h(VxeInputComponent, {\n                                type: 'integer',\n                                size: 'mini',\n                                align: 'center',\n                                min: 0,\n                                max: 255,\n                                maxLength: 3,\n                                placeholder: '',\n                                modelValue: rValue,\n                                'onUpdate:modelValue'(val) {\n                                    reactData.rValue = val;\n                                },\n                                onChange: handleInputRgbEvent\n                            }),\n                            h(VxeInputComponent, {\n                                type: 'integer',\n                                size: 'mini',\n                                align: 'center',\n                                min: 0,\n                                max: 255,\n                                maxLength: 3,\n                                placeholder: '',\n                                modelValue: gValue,\n                                'onUpdate:modelValue'(val) {\n                                    reactData.gValue = val;\n                                },\n                                onChange: handleInputRgbEvent\n                            }),\n                            h(VxeInputComponent, {\n                                type: 'integer',\n                                size: 'mini',\n                                align: 'center',\n                                min: 0,\n                                max: 255,\n                                maxLength: 3,\n                                placeholder: '',\n                                modelValue: bValue,\n                                'onUpdate:modelValue'(val) {\n                                    reactData.bValue = val;\n                                },\n                                onChange: handleInputRgbEvent\n                            }),\n                            h(VxeInputComponent, {\n                                type: 'number',\n                                size: 'mini',\n                                align: 'center',\n                                min: 0,\n                                max: 1,\n                                step: 0.01,\n                                maxLength: 4,\n                                placeholder: '',\n                                modelValue: aValue,\n                                'onUpdate:modelValue'(val) {\n                                    reactData.aValue = val;\n                                },\n                                onChange: handleInputAlphaEvent\n                            })\n                        ]),\n                        h('div', {\n                            class: 'vxe-color-picker--input-title'\n                        }, [\n                            h('span', 'R'),\n                            h('span', 'G'),\n                            h('span', 'B'),\n                            h('span', 'A')\n                        ])\n                    ]\n                    : [\n                        h('div', {\n                            class: 'vxe-color-picker--input-title'\n                        }, 'HEX'),\n                        h('div', {\n                            class: 'vxe-color-picker--input-wrapper'\n                        }, [\n                            h(VxeInputComponent, {\n                                type: 'text',\n                                size: 'mini',\n                                align: 'center',\n                                maxLength: 9,\n                                placeholder: '',\n                                modelValue: hexValue,\n                                'onUpdate:modelValue'(val) {\n                                    reactData.hexValue = val;\n                                },\n                                onChange() {\n                                    const colorRest = parseColor(reactData.hexValue);\n                                    if (colorRest) {\n                                        if (colorRest.value) {\n                                            reactData.selectColor = colorRest.value;\n                                            updateModelColor();\n                                        }\n                                    }\n                                }\n                            })\n                        ])\n                    ])\n            ]);\n        };\n        const renderQuickWrapper = () => {\n            const { showQuick } = props;\n            const colorList = computeColorList.value;\n            if (showQuick && colorList.length) {\n                return h('div', {\n                    class: 'vxe-color-picker--quick-wrapper'\n                }, colorList.map((item, i) => {\n                    return h('div', {\n                        key: i,\n                        class: 'vxe-color-picker--quick-item',\n                        title: item.label || '',\n                        style: {\n                            backgroundColor: item.value\n                        },\n                        onClick(evnt) {\n                            handleQuickEvent(evnt, item);\n                        }\n                    });\n                }));\n            }\n            return renderEmptyElement($xeColorPicker);\n        };\n        const renderVN = () => {\n            const { className, popupClassName, clearable, modelValue } = props;\n            const { initialized, isActivated, isAniVisible, visiblePanel } = reactData;\n            const vSize = computeSize.value;\n            const isDisabled = computeIsDisabled.value;\n            const btnTransfer = computeBtnTransfer.value;\n            const formReadonly = computeFormReadonly.value;\n            if (formReadonly) {\n                return h('div', {\n                    ref: refElem,\n                    class: ['vxe-color-picker--readonly', className]\n                }, [\n                    h('div', {\n                        class: 'vxe-color-picker--readonly-color',\n                        style: {\n                            backgroundColor: modelValue\n                        }\n                    })\n                ]);\n            }\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-color-picker', className ? (XEUtils.isFunction(className) ? className({ $colorPicker: $xeColorPicker }) : className) : '', {\n                        [`size--${vSize}`]: vSize,\n                        'is--selected': !!modelValue,\n                        'is--visible': visiblePanel,\n                        'is--disabled': isDisabled,\n                        'is--active': isActivated\n                    }]\n            }, [\n                h('input', {\n                    ref: refInput,\n                    class: 'vxe-color-picker--input',\n                    onFocus: focusEvent,\n                    onBlur: blurEvent\n                }),\n                h('div', {\n                    class: 'vxe-color-picker--inner',\n                    onClick: clickEvent\n                }, [\n                    h('div', {\n                        class: 'vxe-color-picker--inner-color',\n                        style: {\n                            backgroundColor: modelValue\n                        }\n                    })\n                ]),\n                h(Teleport, {\n                    to: 'body',\n                    disabled: btnTransfer ? !initialized : true\n                }, [\n                    h('div', {\n                        ref: refOptionPanel,\n                        class: ['vxe-table--ignore-clear vxe-color-picker--panel', popupClassName ? (XEUtils.isFunction(popupClassName) ? popupClassName({ $colorPicker: $xeColorPicker }) : popupClassName) : '', {\n                                [`size--${vSize}`]: vSize,\n                                'is--transfer': btnTransfer,\n                                'ani--leave': isAniVisible,\n                                'ani--enter': visiblePanel\n                            }],\n                        placement: reactData.panelPlacement,\n                        style: reactData.panelStyle\n                    }, [\n                        initialized && (visiblePanel || isAniVisible)\n                            ? h('div', {\n                                class: 'vxe-color-picker--panel-wrapper'\n                            }, [\n                                renderColorWrapper(),\n                                renderColorBar(),\n                                renderQuickWrapper(),\n                                h('div', {\n                                    class: 'vxe-color-picker--footer-wrapper'\n                                }, [\n                                    clearable\n                                        ? h(VxeButtonComponent, {\n                                            content: getI18n('vxe.colorPicker.clear'),\n                                            size: 'mini',\n                                            onClick: clearEvent\n                                        })\n                                        : renderEmptyElement($xeColorPicker),\n                                    h(VxeButtonComponent, {\n                                        content: getI18n('vxe.colorPicker.confirm'),\n                                        size: 'mini',\n                                        status: 'primary',\n                                        onClick: confirmEvent\n                                    })\n                                ])\n                            ])\n                            : renderEmptyElement($xeColorPicker)\n                    ])\n                ])\n            ]);\n        };\n        watch(() => props.modelValue, () => {\n            updateMode();\n        });\n        onMounted(() => {\n            globalEvents.on($xeColorPicker, 'mousewheel', handleGlobalMousewheelEvent);\n            globalEvents.on($xeColorPicker, 'mousedown', handleGlobalMousedownEvent);\n            globalEvents.on($xeColorPicker, 'blur', handleGlobalBlurEvent);\n        });\n        onUnmounted(() => {\n            globalEvents.off($xeColorPicker, 'mousewheel');\n            globalEvents.off($xeColorPicker, 'mousedown');\n            globalEvents.off($xeColorPicker, 'blur');\n        });\n        updateMode();\n        provide('$xeColorPicker', $xeColorPicker);\n        $xeColorPicker.renderVN = renderVN;\n        return $xeColorPicker;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import XEUtils from 'xe-utils';\nconst hexAlphaKeyMaps = {};\nconst hexAlphaNumMaps = {};\n'FF,FC,FA,F7,F5,F2,F0,ED,EB,E8,E6,E3,E0,DE,DB,D9,D6,D4,D1,CF,CC,C9,C7,C4,C2,BF,BD,BA,B8,B5,B3,B0,AD,AB,A8,A6,A3,A1,9E,9C,99,96,94,91,8F,8C,8A,87,85,82,80,7D,7A,78,75,73,70,6E,6B,69,66,63,61,5E,5C,59,57,54,52,4F,4D,4A,47,45,42,40,3D,3B,38,36,33,30,2E,2B,29,26,24,21,1F,1C,1A,17,14,12,0F,0D,0A,08,05,03,00'.split(',').forEach((key, i) => {\n    const num = (100 - i) / 100;\n    hexAlphaKeyMaps[key] = num;\n    hexAlphaNumMaps[num] = key;\n});\nconst rgbRE = /^rgb(a?)\\((\\d{1,3})[,\\s]+(\\d{1,3})[,\\s]+(\\d{1,3})([,//\\s]+([0-9.]{1,4})(%?))?\\)$/;\nexport function hasRgb(value) {\n    return value && rgbRE.test(value);\n}\nconst hexRE = /^(#?)([0-9A-Fa-f]{6})([0-9A-Fa-f]{2})?$/;\nexport function hasHex(value) {\n    return value && hexRE.test(value);\n}\nexport function parseColor(value) {\n    const rest = {\n        value: '',\n        type: '',\n        hex: '',\n        hexV: '',\n        hexA: '',\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 1\n    };\n    if (value) {\n        const hexRest = value.match(hexRE);\n        if (hexRest) {\n            rest.value = value;\n            rest.type = 'hex';\n            rest.hex = value;\n            rest.hexV = hexRest[2];\n            rest.hexA = hexRest[3] || '';\n            rest.a = (hexRest[3] ? hexAlphaKeyMaps[hexRest[3].toUpperCase()] : 1) || 1;\n        }\n        const rgbRest = value.match(rgbRE);\n        if (rgbRest) {\n            rest.value = value;\n            rest.type = rgbRest[6] ? 'rgba' : 'rgb';\n            rest.r = parseInt(rgbRest[2]);\n            rest.g = parseInt(rgbRest[3]);\n            rest.b = parseInt(rgbRest[4]);\n            rest.a = rgbRest[7] ? parseInt(rgbRest[6]) / 100 : (rgbRest[6] ? parseFloat(rgbRest[6]) : 1);\n        }\n    }\n    return rest;\n}\nexport function updateColorAlpha(value, alpha = 1) {\n    const colorRest = parseColor(value);\n    const { type, hexV, r, g, b } = colorRest;\n    if (type === 'rgb' || type === 'rgba') {\n        return toRgb(r, g, b, alpha);\n    }\n    if (type === 'hex') {\n        return `#${hexV}${alpha === 1 ? '' : (hexAlphaNumMaps[alpha] || '')}`;\n    }\n    return '';\n}\nexport function toRgb(r, g, b, a) {\n    if (XEUtils.eqNull(a)) {\n        return `rgb(${r},${g},${b})`;\n    }\n    return `rgba(${r},${g},${b},${a})`;\n}\nexport function rgbToHex(rgbRest) {\n    if (!rgbRest) {\n        return '';\n    }\n    const { r, g, b, a = 1 } = rgbRest;\n    const hexR = r.toString(16).padStart(2, '0');\n    const hexG = g.toString(16).padStart(2, '0');\n    const hexB = b.toString(16).padStart(2, '0');\n    const hexA = a === 1 ? '' : (hexAlphaNumMaps[a] || '');\n    // 返回十六进制颜色代码\n    return `#${hexR}${hexG}${hexB}${hexA}`.toUpperCase();\n}\nexport function rgbToHsv(rgbRest) {\n    if (!rgbRest) {\n        return null;\n    }\n    const { r, g, b } = rgbRest;\n    const rAbs = r / 255;\n    const gAbs = g / 255;\n    const bAbs = b / 255;\n    let h = 0;\n    let s = 0;\n    const val = Math.max(rAbs, gAbs, bAbs);\n    const num = val - Math.min(rAbs, gAbs, bAbs);\n    const handleDiff = (c) => (val - c) / 6 / num + 1 / 2;\n    if (num === 0) {\n        h = s = 0;\n    }\n    else {\n        s = num / val;\n        const rr = handleDiff(rAbs);\n        const gg = handleDiff(gAbs);\n        const bb = handleDiff(bAbs);\n        if (rAbs === val) {\n            h = bb - gg;\n        }\n        else if (gAbs === val) {\n            h = (1 / 3) + rr - bb;\n        }\n        else if (bAbs === val) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: XEUtils.round(s, 2),\n        v: XEUtils.round(val, 2)\n    };\n}\nexport function hsvToRgb(h, s, v) {\n    let r = 0;\n    let g = 0;\n    let b = 0;\n    const i = Math.floor(h / 60);\n    const f = h / 60 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n    switch (i) {\n        case 0:\n            r = v;\n            g = t;\n            b = p;\n            break;\n        case 1:\n            r = q;\n            g = v;\n            b = p;\n            break;\n        case 2:\n            r = p;\n            g = v;\n            b = t;\n            break;\n        case 3:\n            r = p;\n            g = q;\n            b = v;\n            break;\n        case 4:\n            r = t;\n            g = p;\n            b = v;\n            break;\n        case 5:\n            r = v;\n            g = p;\n            b = q;\n            break;\n    }\n    return {\n        r: Math.round(r * 255),\n        g: Math.round(g * 255),\n        b: Math.round(b * 255)\n    };\n}\nexport function hexToHsv(str) {\n    const rgbRest = hexToRgb(str);\n    if (rgbRest) {\n        return rgbToHsv(rgbRest);\n    }\n    return null;\n}\nexport function hexToRgb(str) {\n    if (str) {\n        const rests = str.match(/^(#?)([0-9A-Fa-f]{2})([0-9A-Fa-f]{2})([0-9A-Fa-f]{2})([0-9A-Fa-f]{2})?$/);\n        if (rests) {\n            return {\n                r: parseInt(rests[2], 16),\n                g: parseInt(rests[3], 16),\n                b: parseInt(rests[4], 16),\n                a: (rests[5] ? hexAlphaKeyMaps[rests[5].toUpperCase()] : 1) || 1\n            };\n        }\n    }\n    return null;\n}\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeColorPickerComponent from './src/color-picker';\nimport { dynamicApp } from '../dynamics';\nexport const VxeColorPicker = Object.assign({}, VxeColorPickerComponent, {\n    install(app) {\n        app.component(VxeColorPickerComponent.name, VxeColorPickerComponent);\n    }\n});\ndynamicApp.use(VxeColorPicker);\nVxeUI.component(VxeColorPickerComponent);\nexport const ColorPicker = VxeColorPicker;\nexport default VxeColorPicker;\n", "import { defineComponent, ref, h, reactive, createCommentVNode } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { VxeUI, getConfig, getIcon, getI18n, useSize, createEvent } from '../../ui';\nimport { getSlotVNs } from '../../ui/src/vn';\nexport default defineComponent({\n    name: 'VxeText',\n    props: {\n        status: String,\n        title: [String, Number],\n        icon: String,\n        loading: Boolean,\n        content: [String, Number],\n        clickToCopy: Boolean,\n        size: {\n            type: String,\n            default: () => getConfig().text.size || getConfig().size\n        }\n    },\n    emits: [\n        'click'\n    ],\n    setup(props, context) {\n        const { emit, slots } = context;\n        const xID = XEUtils.uniqueId();\n        const { computeSize } = useSize(props);\n        const refElem = ref();\n        const refContentElem = ref();\n        const reactData = reactive({});\n        const refMaps = {\n            refElem\n        };\n        const computeMaps = {};\n        const clickIconEvent = () => {\n            const { content, clickToCopy } = props;\n            if (clickToCopy) {\n                const contentEl = refContentElem.value;\n                const copyVal = (contentEl ? contentEl.textContent : '') || content;\n                if (copyVal) {\n                    if (VxeUI.clipboard.copy(copyVal)) {\n                        if (VxeUI.modal) {\n                            VxeUI.modal.message({\n                                content: getI18n('vxe.text.copySuccess'),\n                                status: 'success'\n                            });\n                        }\n                    }\n                    else {\n                        if (VxeUI.modal) {\n                            VxeUI.modal.message({\n                                content: getI18n('vxe.text.copyError'),\n                                status: 'error'\n                            });\n                        }\n                    }\n                }\n            }\n        };\n        const $xeText = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $text: $xeText }, params));\n        };\n        const textMethods = {\n            dispatchEvent\n        };\n        const clickEvent = (evnt) => {\n            const { loading } = props;\n            if (!loading) {\n                dispatchEvent('click', {}, evnt);\n            }\n        };\n        const textPrivateMethods = {};\n        Object.assign($xeText, textMethods, textPrivateMethods);\n        const renderContent = () => {\n            const { loading, icon, content, clickToCopy } = props;\n            const defaultSlot = slots.default;\n            const iconSlot = slots.icon;\n            return [\n                loading\n                    ? h('span', {\n                        class: 'vxe-text--loading'\n                    }, [\n                        h('i', {\n                            class: getIcon().TEXT_LOADING\n                        })\n                    ])\n                    : (iconSlot || icon || clickToCopy\n                        ? h('span', {\n                            class: 'vxe-text--icon',\n                            onClick: clickIconEvent\n                        }, iconSlot\n                            ? getSlotVNs(iconSlot({}))\n                            : [\n                                h('i', {\n                                    class: icon || getIcon().TEXT_COPY\n                                })\n                            ])\n                        : createCommentVNode()),\n                h('span', {\n                    ref: refContentElem,\n                    class: 'vxe-text--content'\n                }, defaultSlot ? defaultSlot({}) : XEUtils.toValueString(content))\n            ];\n        };\n        const renderVN = () => {\n            const { loading, status, title, clickToCopy } = props;\n            const vSize = computeSize.value;\n            return h('span', {\n                ref: refElem,\n                title,\n                class: ['vxe-text', {\n                        [`size--${vSize}`]: vSize,\n                        [`theme--${status}`]: status,\n                        'is--copy': clickToCopy,\n                        'is--loading': loading\n                    }],\n                onClick: clickEvent\n            }, renderContent());\n        };\n        $xeText.renderVN = renderVN;\n        return $xeText;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { defineComponent, ref, h, reactive, watch, computed, onUnmounted, onMounted, createCommentVNode } from 'vue';\nimport { getConfig, getI18n, createEvent, useSize } from '../../ui';\nimport { getSlotVNs } from '../../ui/src/vn';\nimport VxeTextComponent from '../../text/src/text';\nimport XEUtils from 'xe-utils';\nexport default defineComponent({\n    name: 'VxeCountdown',\n    props: {\n        modelValue: [Number, String],\n        format: String,\n        prefixConfig: Object,\n        suffixConfig: Object,\n        size: {\n            type: String,\n            default: () => getConfig().countdown.size || getConfig().size\n        }\n    },\n    emits: [\n        'update:modelValue',\n        'start',\n        'end'\n    ],\n    setup(props, context) {\n        const { slots, emit } = context;\n        const xID = XEUtils.uniqueId();\n        const refElem = ref();\n        const { computeSize } = useSize(props);\n        const reactData = reactive({\n            currNum: 0,\n            secondNum: 0\n        });\n        const internalData = {\n            dnTimeout: undefined\n        };\n        const refMaps = {\n            refElem\n        };\n        const computeTimeFormats = computed(() => {\n            const { secondNum } = reactData;\n            if (secondNum >= 31622400000) {\n                return ['yyyy', 'MM', 'dd', 'HH', 'mm', 'ss'];\n            }\n            if (secondNum >= 2678400000) {\n                return ['MM', 'dd', 'HH', 'mm', 'ss'];\n            }\n            if (secondNum >= 86400000) {\n                return ['dd', 'HH', 'mm', 'ss'];\n            }\n            if (secondNum >= 3600000) {\n                return ['HH', 'mm', 'ss'];\n            }\n            if (secondNum >= 60000) {\n                return ['mm', 'ss'];\n            }\n            return ['ss'];\n        });\n        const computeDiffConf = computed(() => {\n            const { currNum } = reactData;\n            return XEUtils.getDateDiff(Date.now(), Date.now() + currNum);\n        });\n        const computeFormatLabel = computed(() => {\n            const { format } = props;\n            const diffConf = computeDiffConf.value;\n            let rest = '';\n            if (format) {\n                rest = `${format}`;\n                XEUtils.each(diffConf, (val, key) => {\n                    rest = rest.replace(new RegExp(key, 'g'), XEUtils.padStart(val, key.length, '0'));\n                });\n                return rest;\n            }\n            return rest;\n        });\n        const computePrefixOpts = computed(() => {\n            return Object.assign({}, props.prefixConfig, getConfig().countdown.prefixConfig);\n        });\n        const computeSuffixOpts = computed(() => {\n            return Object.assign({}, props.suffixConfig, getConfig().countdown.suffixConfig);\n        });\n        const computeMaps = {\n            computeSize\n        };\n        const $xeCountdown = {\n            xID,\n            props,\n            context,\n            reactData,\n            internalData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $carousel: $xeCountdown }, params));\n        };\n        const updateCount = () => {\n            const secondNum = XEUtils.toNumber(props.modelValue || 0);\n            reactData.secondNum = secondNum;\n            reactData.currNum = secondNum;\n        };\n        const handleTime = () => {\n            const { currNum } = reactData;\n            if (currNum > 1000) {\n                reactData.currNum -= 1000;\n                internalData.dnTimeout = setTimeout(() => {\n                    handleTime();\n                }, 1000);\n            }\n            else {\n                reactData.currNum = 0;\n                handleStop();\n            }\n        };\n        const countdownMethods = {\n            dispatchEvent\n        };\n        const handleStart = () => {\n            dispatchEvent('start', {}, null);\n            handleTime();\n        };\n        const handleStop = () => {\n            const { dnTimeout } = internalData;\n            if (dnTimeout) {\n                clearTimeout(dnTimeout);\n                internalData.dnTimeout = undefined;\n                dispatchEvent('end', {}, null);\n            }\n        };\n        const countdownPrivateMethods = {};\n        Object.assign($xeCountdown, countdownMethods, countdownPrivateMethods);\n        const renderDefaultContentVNs = () => {\n            const { format } = props;\n            const timeFormats = computeTimeFormats.value;\n            const diffConf = computeDiffConf.value;\n            const formatLabel = computeFormatLabel.value;\n            if (format) {\n                return [\n                    h('div', {\n                        key: 'format',\n                        class: 'vxe-countdown--content-format'\n                    }, formatLabel)\n                ];\n            }\n            return timeFormats.map((key, index) => {\n                return h('div', {\n                    key: index,\n                    class: 'vxe-countdown--content-item'\n                }, [\n                    h('div', {\n                        class: 'vxe-countdown--content-num'\n                    }, `${diffConf[key] || 0}`),\n                    h('div', {\n                        class: 'vxe-countdown--content-unit'\n                    }, getI18n(`vxe.countdown.formats.${key}`))\n                ]);\n            });\n        };\n        const renderVN = () => {\n            const { prefixConfig, suffixConfig } = props;\n            const { currNum } = reactData;\n            const vSize = computeSize.value;\n            const diffConf = computeDiffConf.value;\n            const prefixOpts = computePrefixOpts.value;\n            const suffixOpts = computeSuffixOpts.value;\n            const prefixSlot = slots.prefix;\n            const suffixSlot = slots.suffix;\n            const defaultSlot = slots.default;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-countdown', diffConf.done ? 'is--progress' : 'is-end', {\n                        [`size--${vSize}`]: vSize\n                    }]\n            }, [\n                prefixSlot || prefixConfig\n                    ? h('div', {\n                        class: 'vxe-countdown--prefix'\n                    }, prefixSlot\n                        ? getSlotVNs(prefixSlot({ currentValue: currNum, diffConf }))\n                        : [\n                            h(VxeTextComponent, {\n                                content: prefixOpts.content,\n                                icon: prefixOpts.icon,\n                                status: prefixOpts.status\n                            })\n                        ])\n                    : createCommentVNode(),\n                h('div', {\n                    class: 'vxe-countdown--content'\n                }, defaultSlot\n                    ? getSlotVNs(defaultSlot({ currentValue: currNum, diffConf }))\n                    : renderDefaultContentVNs()),\n                suffixSlot || suffixConfig\n                    ? h('div', {\n                        class: 'vxe-countdown--suffix'\n                    }, suffixSlot\n                        ? getSlotVNs(suffixSlot({ currentValue: currNum, diffConf }))\n                        : [\n                            h(VxeTextComponent, {\n                                content: suffixOpts.content,\n                                icon: suffixOpts.icon,\n                                status: suffixOpts.status\n                            })\n                        ])\n                    : createCommentVNode()\n            ]);\n        };\n        watch(() => props.modelValue, () => {\n            updateCount();\n            handleStop();\n            handleStart();\n        });\n        onUnmounted(() => {\n            handleStop();\n        });\n        onMounted(() => {\n            handleStart();\n        });\n        updateCount();\n        $xeCountdown.renderVN = renderVN;\n        return $xeCountdown;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeCountdownComponent from './src/countdown';\nimport { dynamicApp } from '../dynamics';\nexport const VxeCountdown = Object.assign({}, VxeCountdownComponent, {\n    install(app) {\n        app.component(VxeCountdownComponent.name, VxeCountdownComponent);\n    }\n});\ndynamicApp.use(VxeCountdown);\nVxeUI.component(VxeCountdownComponent);\nexport const Countdown = VxeCountdown;\nexport default VxeCountdown;\n", "import { defineComponent, h, Teleport, ref, computed, reactive, inject, nextTick, watch, onUnmounted, createCommentVNode } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getConfig, getIcon, getI18n, globalEvents, GLOBAL_EVENT_KEYS, createEvent, useSize, renderEmptyElement } from '../../ui';\nimport { getFuncText, getLastZIndex, nextZIndex, isEnableConf } from '../../ui/src/utils';\nimport { getAbsolutePos, getEventTargetNode } from '../../ui/src/dom';\nimport { toStringTimeDate, getDateQuarter } from './util';\nimport { getSlotVNs } from '../../ui/src/vn';\nimport VxeButtonGroupComponent from '../../button/src/button-group';\nexport default defineComponent({\n    name: 'VxeDatePicker',\n    props: {\n        modelValue: [String, Number, Date],\n        immediate: {\n            type: Boolean,\n            default: true\n        },\n        name: String,\n        type: {\n            type: String,\n            default: 'date'\n        },\n        clearable: {\n            type: Boolean,\n            default: () => getConfig().datePicker.clearable\n        },\n        readonly: {\n            type: Boolean,\n            default: null\n        },\n        disabled: {\n            type: Boolean,\n            default: null\n        },\n        placeholder: String,\n        maxLength: [String, Number],\n        autoComplete: {\n            type: String,\n            default: 'off'\n        },\n        align: String,\n        form: String,\n        className: String,\n        size: {\n            type: String,\n            default: () => getConfig().datePicker.size || getConfig().size\n        },\n        multiple: Boolean,\n        limitCount: {\n            type: [String, Number],\n            default: () => getConfig().upload.limitCount\n        },\n        // date、week、month、quarter、year\n        startDate: {\n            type: [String, Number, Date],\n            default: () => getConfig().datePicker.startDate\n        },\n        endDate: {\n            type: [String, Number, Date],\n            default: () => getConfig().datePicker.endDate\n        },\n        minDate: [String, Number, Date],\n        maxDate: [String, Number, Date],\n        startDay: {\n            type: [String, Number],\n            default: () => getConfig().datePicker.startDay\n        },\n        labelFormat: String,\n        valueFormat: String,\n        editable: {\n            type: Boolean,\n            default: true\n        },\n        festivalMethod: {\n            type: Function,\n            default: () => getConfig().datePicker.festivalMethod\n        },\n        disabledMethod: {\n            type: Function,\n            default: () => getConfig().datePicker.disabledMethod\n        },\n        // week\n        selectDay: {\n            type: [String, Number],\n            default: () => getConfig().datePicker.selectDay\n        },\n        prefixIcon: String,\n        suffixIcon: String,\n        placement: String,\n        transfer: {\n            type: Boolean,\n            default: null\n        },\n        shortcutConfig: Object,\n        // 已废弃 startWeek，被 startDay 替换\n        startWeek: Number,\n        // 已废弃\n        maxlength: [String, Number],\n        // 已废弃\n        autocomplete: String\n    },\n    emits: [\n        'update:modelValue',\n        'input',\n        'change',\n        'keydown',\n        'keyup',\n        'click',\n        'focus',\n        'blur',\n        'clear',\n        'prefix-click',\n        'suffix-click',\n        'date-prev',\n        'date-today',\n        'date-next',\n        'shortcut-click'\n    ],\n    setup(props, context) {\n        const { slots, emit } = context;\n        const $xeModal = inject('$xeModal', null);\n        const $xeDrawer = inject('$xeDrawer', null);\n        const $xeTable = inject('$xeTable', null);\n        const $xeForm = inject('$xeForm', null);\n        const formItemInfo = inject('xeFormItemInfo', null);\n        const xID = XEUtils.uniqueId();\n        const { computeSize } = useSize(props);\n        const reactData = reactive({\n            initialized: false,\n            panelIndex: 0,\n            visiblePanel: false,\n            isAniVisible: false,\n            panelStyle: {},\n            panelPlacement: '',\n            isActivated: false,\n            inputValue: '',\n            datetimePanelValue: null,\n            datePanelValue: null,\n            datePanelLabel: '',\n            datePanelType: 'day',\n            selectMonth: null,\n            currentDate: null\n        });\n        const internalData = {\n            yearSize: 12,\n            monthSize: 20,\n            quarterSize: 8,\n            hpTimeout: undefined\n        };\n        const refElem = ref();\n        const refInputTarget = ref();\n        const refInputPanel = ref();\n        const refPanelWrapper = ref();\n        const refInputTimeBody = ref();\n        const refMaps = {\n            refElem,\n            refInput: refInputTarget\n        };\n        const $xeDatePicker = {\n            xID,\n            props,\n            context,\n            reactData,\n            internalData,\n            getRefMaps: () => refMaps\n        };\n        let datePickerMethods = {};\n        const computeBtnTransfer = computed(() => {\n            const { transfer } = props;\n            if (transfer === null) {\n                const globalTransfer = getConfig().datePicker.transfer;\n                if (XEUtils.isBoolean(globalTransfer)) {\n                    return globalTransfer;\n                }\n                if ($xeTable || $xeModal || $xeDrawer || $xeForm) {\n                    return true;\n                }\n            }\n            return transfer;\n        });\n        const computeFormReadonly = computed(() => {\n            const { readonly } = props;\n            if (readonly === null) {\n                if ($xeForm) {\n                    return $xeForm.props.readonly;\n                }\n                return false;\n            }\n            return readonly;\n        });\n        const computeIsDisabled = computed(() => {\n            const { disabled } = props;\n            if (disabled === null) {\n                if ($xeForm) {\n                    return $xeForm.props.disabled;\n                }\n                return false;\n            }\n            return disabled;\n        });\n        const computeIsDateTimeType = computed(() => {\n            const { type } = props;\n            return type === 'time' || type === 'datetime';\n        });\n        const computeIsDatePickerType = computed(() => {\n            const isDateTimeType = computeIsDateTimeType.value;\n            return isDateTimeType || ['date', 'week', 'month', 'quarter', 'year'].indexOf(props.type) > -1;\n        });\n        const computeIsClearable = computed(() => {\n            return props.clearable;\n        });\n        const computeDateStartTime = computed(() => {\n            return props.startDate ? XEUtils.toStringDate(props.startDate) : null;\n        });\n        const computeDateEndTime = computed(() => {\n            return props.endDate ? XEUtils.toStringDate(props.endDate) : null;\n        });\n        const computeSupportMultiples = computed(() => {\n            return ['date', 'week', 'month', 'quarter', 'year'].indexOf(props.type) > -1;\n        });\n        const computeDateListValue = computed(() => {\n            const { modelValue, multiple } = props;\n            const isDatePickerType = computeIsDatePickerType.value;\n            const dateValueFormat = computeDateValueFormat.value;\n            if (multiple && modelValue && isDatePickerType) {\n                return XEUtils.toValueString(modelValue).split(',').map(item => {\n                    const date = parseDate(item, dateValueFormat);\n                    if (XEUtils.isValidDate(date)) {\n                        return date;\n                    }\n                    return date;\n                });\n            }\n            return [];\n        });\n        const computeDateMultipleValue = computed(() => {\n            const dateListValue = computeDateListValue.value;\n            const dateValueFormat = computeDateValueFormat.value;\n            return dateListValue.map(date => XEUtils.toDateString(date, dateValueFormat));\n        });\n        const computeDateMultipleLabel = computed(() => {\n            const dateListValue = computeDateListValue.value;\n            const dateLabelFormat = computeDateLabelFormat.value;\n            return dateListValue.map(date => XEUtils.toDateString(date, dateLabelFormat)).join(', ');\n        });\n        const computeLimitMaxCount = computed(() => {\n            return props.multiple ? XEUtils.toNumber(props.limitCount) : 0;\n        });\n        const computeOverCount = computed(() => {\n            const { multiple } = props;\n            const limitMaxCount = computeLimitMaxCount.value;\n            const dateMultipleValue = computeDateMultipleValue.value;\n            if (multiple && limitMaxCount) {\n                return dateMultipleValue.length >= limitMaxCount;\n            }\n            return false;\n        });\n        const computeDateValueFormat = computed(() => {\n            const { type, valueFormat } = props;\n            if (valueFormat) {\n                return valueFormat;\n            }\n            if (type === 'time') {\n                return 'HH:mm:ss';\n            }\n            if (type === 'datetime') {\n                return 'yyyy-MM-dd HH:mm:ss';\n            }\n            return 'yyyy-MM-dd';\n        });\n        const computeDateValue = computed(() => {\n            const { modelValue } = props;\n            const isDatePickerType = computeIsDatePickerType.value;\n            const dateValueFormat = computeDateValueFormat.value;\n            let val = null;\n            if (modelValue && isDatePickerType) {\n                const date = parseDate(modelValue, dateValueFormat);\n                if (XEUtils.isValidDate(date)) {\n                    val = date;\n                }\n            }\n            return val;\n        });\n        const computeIsDisabledPrevDateBtn = computed(() => {\n            const dateStartTime = computeDateStartTime.value;\n            const { selectMonth } = reactData;\n            if (selectMonth && dateStartTime) {\n                return selectMonth <= dateStartTime;\n            }\n            return false;\n        });\n        const computeIsDisabledNextDateBtn = computed(() => {\n            const dateEndTime = computeDateEndTime.value;\n            const { selectMonth } = reactData;\n            if (selectMonth && dateEndTime) {\n                return selectMonth >= dateEndTime;\n            }\n            return false;\n        });\n        const computeDateTimeLabel = computed(() => {\n            const { datetimePanelValue } = reactData;\n            const hasTimeSecond = computeHasTimeSecond.value;\n            if (datetimePanelValue) {\n                return XEUtils.toDateString(datetimePanelValue, hasTimeSecond ? 'HH:mm:ss' : 'HH:mm');\n            }\n            return '';\n        });\n        const computeDateHMSTime = computed(() => {\n            const dateValue = computeDateValue.value;\n            const isDateTimeType = computeIsDateTimeType.value;\n            return dateValue && isDateTimeType ? (dateValue.getHours() * 3600 + dateValue.getMinutes() * 60 + dateValue.getSeconds()) * 1000 : 0;\n        });\n        const computeDateLabelFormat = computed(() => {\n            const { labelFormat } = props;\n            const isDatePickerType = computeIsDatePickerType.value;\n            if (isDatePickerType) {\n                return labelFormat || getI18n(`vxe.input.date.labelFormat.${props.type}`);\n            }\n            return null;\n        });\n        const computeYearList = computed(() => {\n            const { yearSize } = internalData;\n            const { selectMonth, currentDate } = reactData;\n            const years = [];\n            if (selectMonth && currentDate) {\n                const currFullYear = currentDate.getFullYear();\n                const selectFullYear = selectMonth.getFullYear();\n                const startYearDate = new Date(selectFullYear - selectFullYear % yearSize, 0, 1);\n                for (let index = -4; index < yearSize + 4; index++) {\n                    const date = XEUtils.getWhatYear(startYearDate, index, 'first');\n                    const itemFullYear = date.getFullYear();\n                    years.push({\n                        date,\n                        isCurrent: true,\n                        isPrev: index < 0,\n                        isNow: currFullYear === itemFullYear,\n                        isNext: index >= yearSize,\n                        year: itemFullYear\n                    });\n                }\n            }\n            return years;\n        });\n        const computeSelectDatePanelObj = computed(() => {\n            const isDatePickerType = computeIsDatePickerType.value;\n            let y = '';\n            let m = '';\n            if (isDatePickerType) {\n                const { datePanelType, selectMonth } = reactData;\n                const yearList = computeYearList.value;\n                let year = '';\n                let month;\n                if (selectMonth) {\n                    year = selectMonth.getFullYear();\n                    month = selectMonth.getMonth() + 1;\n                }\n                if (datePanelType === 'quarter' || datePanelType === 'month') {\n                    y = getI18n('vxe.datePicker.yearTitle', [year]);\n                }\n                else if (datePanelType === 'year') {\n                    y = yearList.length ? `${yearList[0].year} - ${yearList[yearList.length - 1].year}` : '';\n                }\n                else {\n                    y = getI18n('vxe.datePicker.yearTitle', [year]);\n                    m = month ? getI18n(`vxe.input.date.m${month}`) : '-';\n                }\n            }\n            return {\n                y,\n                m\n            };\n        });\n        const computeFirstDayOfWeek = computed(() => {\n            const { startDay, startWeek } = props;\n            return XEUtils.toNumber(XEUtils.isNumber(startDay) || XEUtils.isString(startDay) ? startDay : startWeek);\n        });\n        const computeWeekDatas = computed(() => {\n            const weeks = [];\n            const isDatePickerType = computeIsDatePickerType.value;\n            if (isDatePickerType) {\n                let sWeek = computeFirstDayOfWeek.value;\n                weeks.push(sWeek);\n                for (let index = 0; index < 6; index++) {\n                    if (sWeek >= 6) {\n                        sWeek = 0;\n                    }\n                    else {\n                        sWeek++;\n                    }\n                    weeks.push(sWeek);\n                }\n            }\n            return weeks;\n        });\n        const computeDateHeaders = computed(() => {\n            const isDatePickerType = computeIsDatePickerType.value;\n            if (isDatePickerType) {\n                const weekDatas = computeWeekDatas.value;\n                return weekDatas.map((day) => {\n                    return {\n                        value: day,\n                        label: getI18n(`vxe.input.date.weeks.w${day}`)\n                    };\n                });\n            }\n            return [];\n        });\n        const computeWeekHeaders = computed(() => {\n            const isDatePickerType = computeIsDatePickerType.value;\n            if (isDatePickerType) {\n                const dateHeaders = computeDateHeaders.value;\n                return [{ label: getI18n('vxe.input.date.weeks.w') }].concat(dateHeaders);\n            }\n            return [];\n        });\n        const computeYearDatas = computed(() => {\n            const yearList = computeYearList.value;\n            return XEUtils.chunk(yearList, 4);\n        });\n        const computeQuarterList = computed(() => {\n            const { quarterSize } = internalData;\n            const { selectMonth, currentDate } = reactData;\n            const quarters = [];\n            if (selectMonth && currentDate) {\n                const currFullYear = currentDate.getFullYear();\n                const currQuarter = getDateQuarter(currentDate);\n                const firstYear = XEUtils.getWhatYear(selectMonth, 0, 'first');\n                const selFullYear = firstYear.getFullYear();\n                for (let index = -2; index < quarterSize - 2; index++) {\n                    const date = XEUtils.getWhatQuarter(firstYear, index);\n                    const itemFullYear = date.getFullYear();\n                    const itemQuarter = getDateQuarter(date);\n                    const isPrev = itemFullYear < selFullYear;\n                    quarters.push({\n                        date,\n                        isPrev,\n                        isCurrent: itemFullYear === selFullYear,\n                        isNow: itemFullYear === currFullYear && itemQuarter === currQuarter,\n                        isNext: !isPrev && itemFullYear > selFullYear,\n                        quarter: itemQuarter\n                    });\n                }\n            }\n            return quarters;\n        });\n        const computeQuarterDatas = computed(() => {\n            const quarterList = computeQuarterList.value;\n            return XEUtils.chunk(quarterList, 2);\n        });\n        const computeMonthList = computed(() => {\n            const { monthSize } = internalData;\n            const { selectMonth, currentDate } = reactData;\n            const months = [];\n            if (selectMonth && currentDate) {\n                const currFullYear = currentDate.getFullYear();\n                const currMonth = currentDate.getMonth();\n                const selFullYear = XEUtils.getWhatYear(selectMonth, 0, 'first').getFullYear();\n                for (let index = -4; index < monthSize - 4; index++) {\n                    const date = XEUtils.getWhatYear(selectMonth, 0, index);\n                    const itemFullYear = date.getFullYear();\n                    const itemMonth = date.getMonth();\n                    const isPrev = itemFullYear < selFullYear;\n                    months.push({\n                        date,\n                        isPrev,\n                        isCurrent: itemFullYear === selFullYear,\n                        isNow: itemFullYear === currFullYear && itemMonth === currMonth,\n                        isNext: !isPrev && itemFullYear > selFullYear,\n                        month: itemMonth\n                    });\n                }\n            }\n            return months;\n        });\n        const computeMonthDatas = computed(() => {\n            const monthList = computeMonthList.value;\n            return XEUtils.chunk(monthList, 4);\n        });\n        const computeDayList = computed(() => {\n            const { selectMonth, currentDate } = reactData;\n            const days = [];\n            if (selectMonth && currentDate) {\n                const dateHMSTime = computeDateHMSTime.value;\n                const weekDatas = computeWeekDatas.value;\n                const currFullYear = currentDate.getFullYear();\n                const currMonth = currentDate.getMonth();\n                const currDate = currentDate.getDate();\n                const selFullYear = selectMonth.getFullYear();\n                const selMonth = selectMonth.getMonth();\n                const selDay = selectMonth.getDay();\n                const prevOffsetDate = -weekDatas.indexOf(selDay);\n                const startDayDate = new Date(XEUtils.getWhatDay(selectMonth, prevOffsetDate).getTime() + dateHMSTime);\n                for (let index = 0; index < 42; index++) {\n                    const date = XEUtils.getWhatDay(startDayDate, index);\n                    const itemFullYear = date.getFullYear();\n                    const itemMonth = date.getMonth();\n                    const itemDate = date.getDate();\n                    const isPrev = date < selectMonth;\n                    days.push({\n                        date,\n                        isPrev,\n                        isCurrent: itemFullYear === selFullYear && itemMonth === selMonth,\n                        isNow: itemFullYear === currFullYear && itemMonth === currMonth && itemDate === currDate,\n                        isNext: !isPrev && selMonth !== itemMonth,\n                        label: itemDate\n                    });\n                }\n            }\n            return days;\n        });\n        const computeDayDatas = computed(() => {\n            const dayList = computeDayList.value;\n            return XEUtils.chunk(dayList, 7);\n        });\n        const computeWeekDates = computed(() => {\n            const dayDatas = computeDayDatas.value;\n            const firstDayOfWeek = computeFirstDayOfWeek.value;\n            return dayDatas.map((list) => {\n                const firstItem = list[0];\n                const item = {\n                    date: firstItem.date,\n                    isWeekNumber: true,\n                    isPrev: false,\n                    isCurrent: false,\n                    isNow: false,\n                    isNext: false,\n                    label: XEUtils.getYearWeek(firstItem.date, firstDayOfWeek)\n                };\n                return [item].concat(list);\n            });\n        });\n        const computeHourList = computed(() => {\n            const list = [];\n            const isDateTimeType = computeIsDateTimeType.value;\n            if (isDateTimeType) {\n                for (let index = 0; index < 24; index++) {\n                    list.push({\n                        value: index,\n                        label: ('' + index).padStart(2, '0')\n                    });\n                }\n            }\n            return list;\n        });\n        const computeMinuteList = computed(() => {\n            const list = [];\n            const isDateTimeType = computeIsDateTimeType.value;\n            if (isDateTimeType) {\n                for (let index = 0; index < 60; index++) {\n                    list.push({\n                        value: index,\n                        label: ('' + index).padStart(2, '0')\n                    });\n                }\n            }\n            return list;\n        });\n        const computeHasTimeMinute = computed(() => {\n            const dateValueFormat = computeDateValueFormat.value;\n            return !/HH/.test(dateValueFormat) || /mm/.test(dateValueFormat);\n        });\n        const computeHasTimeSecond = computed(() => {\n            const dateValueFormat = computeDateValueFormat.value;\n            return !/HH/.test(dateValueFormat) || /ss/.test(dateValueFormat);\n        });\n        const computeSecondList = computed(() => {\n            const minuteList = computeMinuteList.value;\n            return minuteList;\n        });\n        const computeInputReadonly = computed(() => {\n            const { type, editable, multiple } = props;\n            const formReadonly = computeFormReadonly.value;\n            return formReadonly || multiple || !editable || type === 'week' || type === 'quarter';\n        });\n        const computeDatePickerType = computed(() => {\n            return 'text';\n        });\n        const computeInpPlaceholder = computed(() => {\n            const { placeholder } = props;\n            if (placeholder) {\n                return getFuncText(placeholder);\n            }\n            const globalPlaceholder = getConfig().datePicker.placeholder;\n            if (globalPlaceholder) {\n                return getFuncText(globalPlaceholder);\n            }\n            return getI18n('vxe.base.pleaseSelect');\n        });\n        const computeInpImmediate = computed(() => {\n            const { immediate } = props;\n            return immediate;\n        });\n        const computeShortcutOpts = computed(() => {\n            return Object.assign({}, getConfig().datePicker.shortcutConfig, props.shortcutConfig);\n        });\n        const updateModelValue = (modelValue) => {\n            const { isActivated, visiblePanel } = reactData;\n            let val = '';\n            if (modelValue) {\n                if (XEUtils.isNumber(modelValue) && /^[0-9]{11,15}$/.test(`${modelValue}`)) {\n                    val = new Date(modelValue);\n                }\n                else {\n                    val = modelValue;\n                }\n            }\n            reactData.inputValue = val;\n            if (isActivated && visiblePanel) {\n                dateOpenPanel();\n            }\n        };\n        const parseDate = (value, format) => {\n            const { type, multiple } = props;\n            if (type === 'time') {\n                return toStringTimeDate(value);\n            }\n            if (XEUtils.isArray(value)) {\n                return XEUtils.toStringDate(value[0], format);\n            }\n            if (XEUtils.isString(value)) {\n                return XEUtils.toStringDate(multiple ? XEUtils.last(value.split(',')) : value, format);\n            }\n            return XEUtils.toStringDate(value, format);\n        };\n        const triggerEvent = (evnt) => {\n            const { inputValue } = reactData;\n            dispatchEvent(evnt.type, { value: inputValue }, evnt);\n        };\n        const handleChange = (value, evnt) => {\n            reactData.inputValue = value;\n            emit('update:modelValue', value);\n            if (XEUtils.toValueString(props.modelValue) !== value) {\n                dispatchEvent('change', { value }, evnt);\n                // 自动更新校验状态\n                if ($xeForm && formItemInfo) {\n                    $xeForm.triggerItemEvent(evnt, formItemInfo.itemConfig.field, value);\n                }\n            }\n        };\n        const inputEvent = (evnt) => {\n            const isDatePickerType = computeIsDatePickerType.value;\n            const inpImmediate = computeInpImmediate.value;\n            const inputElem = evnt.target;\n            const value = inputElem.value;\n            reactData.inputValue = value;\n            if (!isDatePickerType) {\n                if (inpImmediate) {\n                    handleChange(value, evnt);\n                }\n                else {\n                    dispatchEvent('input', { value }, evnt);\n                }\n            }\n        };\n        const changeEvent = (evnt) => {\n            const inpImmediate = computeInpImmediate.value;\n            if (!inpImmediate) {\n                triggerEvent(evnt);\n            }\n        };\n        const focusEvent = (evnt) => {\n            reactData.isActivated = true;\n            const isDatePickerType = computeIsDatePickerType.value;\n            if (isDatePickerType) {\n                datePickerOpenEvent(evnt);\n            }\n            triggerEvent(evnt);\n        };\n        const clickPrefixEvent = (evnt) => {\n            const isDisabled = computeIsDisabled.value;\n            if (!isDisabled) {\n                const { inputValue } = reactData;\n                dispatchEvent('prefix-click', { value: inputValue }, evnt);\n            }\n        };\n        const hidePanel = () => {\n            return new Promise(resolve => {\n                reactData.visiblePanel = false;\n                internalData.hpTimeout = setTimeout(() => {\n                    reactData.isAniVisible = false;\n                    resolve();\n                }, 350);\n            });\n        };\n        const clearValueEvent = (evnt, value) => {\n            const isDatePickerType = computeIsDatePickerType.value;\n            if (isDatePickerType) {\n                hidePanel();\n            }\n            handleChange('', evnt);\n            dispatchEvent('clear', { value }, evnt);\n        };\n        const clickSuffixEvent = (evnt) => {\n            const isDisabled = computeIsDisabled.value;\n            if (!isDisabled) {\n                const { inputValue } = reactData;\n                dispatchEvent('suffix-click', { value: inputValue }, evnt);\n            }\n        };\n        const dateParseValue = (value) => {\n            const { type } = props;\n            const dateLabelFormat = computeDateLabelFormat.value;\n            const dateValueFormat = computeDateValueFormat.value;\n            const firstDayOfWeek = computeFirstDayOfWeek.value;\n            let dValue = null;\n            let dLabel = '';\n            if (value) {\n                dValue = parseDate(value, dateValueFormat);\n            }\n            if (XEUtils.isValidDate(dValue)) {\n                dLabel = XEUtils.toDateString(dValue, dateLabelFormat, { firstDay: firstDayOfWeek });\n                // 周选择器，由于年份和第几周是冲突的行为，所以需要特殊处理，判断是否跨年，例如\n                // '2024-12-31' 'yyyy-MM-dd W' >> '2024-12-31 1'\n                // '2025-01-01' 'yyyy-MM-dd W' >> '2025-01-01 1'\n                if (dateLabelFormat && type === 'week') {\n                    const weekNum = XEUtils.getYearWeek(dValue, firstDayOfWeek);\n                    const weekDate = XEUtils.getWhatWeek(dValue, 0, weekNum === 1 ? ((6 + firstDayOfWeek) % 7) : firstDayOfWeek, firstDayOfWeek);\n                    const weekFullYear = weekDate.getFullYear();\n                    if (weekFullYear !== dValue.getFullYear()) {\n                        const yyIndex = dateLabelFormat.indexOf('yyyy');\n                        if (yyIndex > -1) {\n                            const yyNum = Number(dLabel.substring(yyIndex, yyIndex + 4));\n                            if (yyNum && !isNaN(yyNum)) {\n                                dLabel = dLabel.replace(`${yyNum}`, `${weekFullYear}`);\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                dValue = null;\n            }\n            reactData.datePanelValue = dValue;\n            reactData.datePanelLabel = dLabel;\n        };\n        /**\n         * 值变化时处理\n         */\n        const changeValue = () => {\n            const isDatePickerType = computeIsDatePickerType.value;\n            const { inputValue } = reactData;\n            if (isDatePickerType) {\n                dateParseValue(inputValue);\n                reactData.inputValue = props.multiple ? computeDateMultipleLabel.value : reactData.datePanelLabel;\n            }\n        };\n        /**\n         * 检查初始值\n         */\n        const initValue = () => {\n            const isDatePickerType = computeIsDatePickerType.value;\n            updateModelValue(props.modelValue);\n            if (isDatePickerType) {\n                changeValue();\n            }\n        };\n        const dateRevert = () => {\n            reactData.inputValue = props.multiple ? computeDateMultipleLabel.value : reactData.datePanelLabel;\n        };\n        const dateCheckMonth = (date) => {\n            const firstDayOfWeek = computeFirstDayOfWeek.value;\n            const weekNum = XEUtils.getYearWeek(date, firstDayOfWeek);\n            const weekStartDate = XEUtils.getWhatWeek(date, 0, firstDayOfWeek, firstDayOfWeek);\n            const month = XEUtils.getWhatMonth(weekNum === 1 ? XEUtils.getWhatDay(weekStartDate, 6) : date, 0, 'first');\n            if (!XEUtils.isEqual(month, reactData.selectMonth)) {\n                reactData.selectMonth = month;\n            }\n        };\n        const dateChange = (date, isReload) => {\n            const { modelValue, multiple } = props;\n            const { datetimePanelValue } = reactData;\n            const isDateTimeType = computeIsDateTimeType.value;\n            const dateValueFormat = computeDateValueFormat.value;\n            const firstDayOfWeek = computeFirstDayOfWeek.value;\n            if (props.type === 'week') {\n                const sWeek = XEUtils.toNumber(props.selectDay);\n                date = XEUtils.getWhatWeek(date, 0, sWeek, firstDayOfWeek);\n            }\n            else if (isDateTimeType) {\n                if (datetimePanelValue) {\n                    date.setHours(datetimePanelValue.getHours());\n                    date.setMinutes(datetimePanelValue.getMinutes());\n                    date.setSeconds(datetimePanelValue.getSeconds());\n                }\n            }\n            const inpVal = XEUtils.toDateString(date, dateValueFormat, { firstDay: firstDayOfWeek });\n            dateCheckMonth(date);\n            if (multiple) {\n                const overCount = computeOverCount.value;\n                // 如果为多选\n                if (isDateTimeType) {\n                    // 如果是datetime特殊类型\n                    const dateListValue = isReload ? [] : [...computeDateListValue.value];\n                    const datetimeRest = [];\n                    const eqIndex = XEUtils.findIndexOf(dateListValue, val => XEUtils.isDateSame(date, val, 'yyyyMMdd'));\n                    if (eqIndex === -1) {\n                        if (overCount) {\n                            // 如果超出最大多选数量\n                            return;\n                        }\n                        dateListValue.push(date);\n                    }\n                    else {\n                        dateListValue.splice(eqIndex, 1);\n                    }\n                    dateListValue.forEach(item => {\n                        if (item) {\n                            if (datetimePanelValue) {\n                                item.setHours(datetimePanelValue.getHours());\n                                item.setMinutes(datetimePanelValue.getMinutes());\n                                item.setSeconds(datetimePanelValue.getSeconds());\n                            }\n                            datetimeRest.push(item);\n                        }\n                    });\n                    handleChange(datetimeRest.map(date => XEUtils.toDateString(date, dateValueFormat)).join(','), { type: 'update' });\n                }\n                else {\n                    const dateMultipleValue = isReload ? [] : computeDateMultipleValue.value;\n                    // 如果是日期类型\n                    if (dateMultipleValue.some(val => XEUtils.isEqual(val, inpVal))) {\n                        handleChange(dateMultipleValue.filter(val => !XEUtils.isEqual(val, inpVal)).join(','), { type: 'update' });\n                    }\n                    else {\n                        if (overCount) {\n                            // 如果超出最大多选数量\n                            return;\n                        }\n                        handleChange(dateMultipleValue.concat([inpVal]).join(','), { type: 'update' });\n                    }\n                }\n            }\n            else {\n                // 如果为单选\n                if (!XEUtils.isEqual(modelValue, inpVal)) {\n                    handleChange(inpVal, { type: 'update' });\n                }\n            }\n        };\n        const afterCheckValue = () => {\n            const { type } = props;\n            const { inputValue, datetimePanelValue } = reactData;\n            const dateLabelFormat = computeDateLabelFormat.value;\n            const inputReadonly = computeInputReadonly.value;\n            if (!inputReadonly) {\n                if (inputValue) {\n                    let inpDateVal = parseDate(inputValue, dateLabelFormat);\n                    if (XEUtils.isValidDate(inpDateVal)) {\n                        if (type === 'time') {\n                            inpDateVal = XEUtils.toDateString(inpDateVal, dateLabelFormat);\n                            if (inputValue !== inpDateVal) {\n                                handleChange(inpDateVal, { type: 'check' });\n                            }\n                            reactData.inputValue = inpDateVal;\n                        }\n                        else {\n                            let isChange = false;\n                            const firstDayOfWeek = computeFirstDayOfWeek.value;\n                            if (type === 'datetime') {\n                                const dateValue = computeDateValue.value;\n                                if (inputValue !== XEUtils.toDateString(dateValue, dateLabelFormat) || inputValue !== XEUtils.toDateString(inpDateVal, dateLabelFormat)) {\n                                    isChange = true;\n                                    if (datetimePanelValue) {\n                                        datetimePanelValue.setHours(inpDateVal.getHours());\n                                        datetimePanelValue.setMinutes(inpDateVal.getMinutes());\n                                        datetimePanelValue.setSeconds(inpDateVal.getSeconds());\n                                    }\n                                }\n                            }\n                            else {\n                                isChange = true;\n                            }\n                            reactData.inputValue = XEUtils.toDateString(inpDateVal, dateLabelFormat, { firstDay: firstDayOfWeek });\n                            if (isChange) {\n                                dateChange(inpDateVal);\n                            }\n                        }\n                    }\n                    else {\n                        dateRevert();\n                    }\n                }\n                else {\n                    handleChange('', { type: 'check' });\n                }\n            }\n        };\n        const blurEvent = (evnt) => {\n            const { inputValue } = reactData;\n            const inpImmediate = computeInpImmediate.value;\n            const value = inputValue;\n            if (!inpImmediate) {\n                handleChange(value, evnt);\n            }\n            afterCheckValue();\n            if (!reactData.visiblePanel) {\n                reactData.isActivated = false;\n            }\n            dispatchEvent('blur', { value }, evnt);\n            // 自动更新校验状态\n            if ($xeForm && formItemInfo) {\n                $xeForm.triggerItemEvent(evnt, formItemInfo.itemConfig.field, value);\n            }\n        };\n        const keydownEvent = (evnt) => {\n            triggerEvent(evnt);\n        };\n        const keyupEvent = (evnt) => {\n            triggerEvent(evnt);\n        };\n        // 日期\n        const dateMonthHandle = (date, offsetMonth) => {\n            const firstDayOfWeek = computeFirstDayOfWeek.value;\n            const weekNum = XEUtils.getYearWeek(date, firstDayOfWeek);\n            const weekStartDate = XEUtils.getWhatWeek(date, 0, firstDayOfWeek, firstDayOfWeek);\n            const month = XEUtils.getWhatMonth(weekNum === 1 ? XEUtils.getWhatDay(weekStartDate, 6) : date, offsetMonth, 'first');\n            reactData.selectMonth = month;\n        };\n        const dateNowHandle = () => {\n            const { type } = props;\n            const firstDayOfWeek = computeFirstDayOfWeek.value;\n            let currentDate = new Date();\n            switch (type) {\n                case 'week':\n                    currentDate = XEUtils.getWhatWeek(currentDate, 0, firstDayOfWeek);\n                    break;\n                case 'datetime':\n                    currentDate = new Date();\n                    reactData.datetimePanelValue = new Date();\n                    break;\n                default:\n                    currentDate = XEUtils.getWhatDay(Date.now(), 0, 'first');\n                    break;\n            }\n            reactData.currentDate = currentDate;\n            dateMonthHandle(currentDate, 0);\n        };\n        const dateToggleYearTypeEvent = () => {\n            reactData.datePanelType = 'year';\n        };\n        const dateToggleMonthTypeEvent = () => {\n            let { datePanelType } = reactData;\n            if (datePanelType === 'month' || datePanelType === 'quarter') {\n                datePanelType = 'year';\n            }\n            else {\n                datePanelType = 'month';\n            }\n            reactData.datePanelType = datePanelType;\n        };\n        const datePrevEvent = (evnt) => {\n            const { type } = props;\n            const { datePanelType, selectMonth, inputValue } = reactData;\n            const { yearSize } = internalData;\n            const value = inputValue;\n            const isDisabledPrevDateBtn = computeIsDisabledPrevDateBtn.value;\n            if (!isDisabledPrevDateBtn) {\n                let viewDate;\n                if (type === 'year') {\n                    viewDate = XEUtils.getWhatYear(selectMonth, -yearSize, 'first');\n                }\n                else if (type === 'month' || type === 'quarter') {\n                    if (datePanelType === 'year') {\n                        viewDate = XEUtils.getWhatYear(selectMonth, -yearSize, 'first');\n                    }\n                    else {\n                        viewDate = XEUtils.getWhatYear(selectMonth, -1, 'first');\n                    }\n                }\n                else {\n                    if (datePanelType === 'year') {\n                        viewDate = XEUtils.getWhatYear(selectMonth, -yearSize, 'first');\n                    }\n                    else if (datePanelType === 'month') {\n                        viewDate = XEUtils.getWhatYear(selectMonth, -1, 'first');\n                    }\n                    else {\n                        viewDate = XEUtils.getWhatMonth(selectMonth, -1, 'first');\n                    }\n                }\n                reactData.selectMonth = viewDate;\n                dispatchEvent('date-prev', { viewType: datePanelType, viewDate, value, type }, evnt);\n            }\n        };\n        const dateTodayMonthEvent = (evnt) => {\n            dateNowHandle();\n            dateChange(reactData.currentDate, true);\n            if (!props.multiple) {\n                hidePanel();\n            }\n            dispatchEvent('date-today', { type: props.type }, evnt);\n        };\n        const dateNextEvent = (evnt) => {\n            const { type } = props;\n            const { datePanelType, selectMonth, inputValue } = reactData;\n            const { yearSize } = internalData;\n            const value = inputValue;\n            const isDisabledNextDateBtn = computeIsDisabledNextDateBtn.value;\n            if (!isDisabledNextDateBtn) {\n                let viewDate;\n                if (type === 'year') {\n                    viewDate = XEUtils.getWhatYear(selectMonth, yearSize, 'first');\n                }\n                else if (type === 'month' || type === 'quarter') {\n                    if (datePanelType === 'year') {\n                        viewDate = XEUtils.getWhatYear(selectMonth, yearSize, 'first');\n                    }\n                    else {\n                        viewDate = XEUtils.getWhatYear(selectMonth, 1, 'first');\n                    }\n                }\n                else {\n                    if (datePanelType === 'year') {\n                        viewDate = XEUtils.getWhatYear(selectMonth, yearSize, 'first');\n                    }\n                    else if (datePanelType === 'month') {\n                        viewDate = XEUtils.getWhatYear(selectMonth, 1, 'first');\n                    }\n                    else {\n                        viewDate = XEUtils.getWhatMonth(selectMonth, 1, 'first');\n                    }\n                }\n                reactData.selectMonth = viewDate;\n                dispatchEvent('date-next', { viewType: datePanelType, value, type }, evnt);\n            }\n        };\n        const isDateDisabled = (item) => {\n            const { disabledMethod } = props;\n            const { datePanelType } = reactData;\n            const dateStartTime = computeDateStartTime.value;\n            const dateEndTime = computeDateEndTime.value;\n            const { date } = item;\n            if (dateStartTime && dateStartTime.getTime() > date.getTime()) {\n                return true;\n            }\n            if (dateEndTime && dateEndTime.getTime() < date.getTime()) {\n                return true;\n            }\n            if (disabledMethod) {\n                return disabledMethod({ type: datePanelType, viewType: datePanelType, date, $datePicker: $xeDatePicker });\n            }\n            return false;\n        };\n        const dateSelectItem = (date) => {\n            const { type, multiple } = props;\n            const { datePanelType } = reactData;\n            if (type === 'month') {\n                if (datePanelType === 'year') {\n                    reactData.datePanelType = 'month';\n                    dateCheckMonth(date);\n                }\n                else {\n                    dateChange(date);\n                    if (!multiple) {\n                        hidePanel();\n                    }\n                }\n            }\n            else if (type === 'year') {\n                dateChange(date);\n                if (!multiple) {\n                    hidePanel();\n                }\n            }\n            else if (type === 'quarter') {\n                if (datePanelType === 'year') {\n                    reactData.datePanelType = 'quarter';\n                    dateCheckMonth(date);\n                }\n                else {\n                    dateChange(date);\n                    if (!multiple) {\n                        hidePanel();\n                    }\n                }\n            }\n            else {\n                if (datePanelType === 'month') {\n                    reactData.datePanelType = type === 'week' ? type : 'day';\n                    dateCheckMonth(date);\n                }\n                else if (datePanelType === 'year') {\n                    reactData.datePanelType = 'month';\n                    dateCheckMonth(date);\n                }\n                else {\n                    dateChange(date);\n                    if (type === 'datetime') {\n                        // 日期带时间\n                    }\n                    else {\n                        if (!multiple) {\n                            hidePanel();\n                        }\n                    }\n                }\n            }\n        };\n        const dateSelectEvent = (item) => {\n            if (!isDateDisabled(item)) {\n                dateSelectItem(item.date);\n            }\n        };\n        const dateMoveDay = (offsetDay) => {\n            if (!isDateDisabled({ date: offsetDay })) {\n                const dayList = computeDayList.value;\n                if (!dayList.some((item) => XEUtils.isDateSame(item.date, offsetDay, 'yyyyMMdd'))) {\n                    dateCheckMonth(offsetDay);\n                }\n                dateParseValue(offsetDay);\n            }\n        };\n        const dateMoveYear = (offsetYear) => {\n            if (!isDateDisabled({ date: offsetYear })) {\n                const yearList = computeYearList.value;\n                if (!yearList.some((item) => XEUtils.isDateSame(item.date, offsetYear, 'yyyy'))) {\n                    dateCheckMonth(offsetYear);\n                }\n                dateParseValue(offsetYear);\n            }\n        };\n        const dateMoveQuarter = (offsetQuarter) => {\n            if (!isDateDisabled({ date: offsetQuarter })) {\n                const quarterList = computeQuarterList.value;\n                if (!quarterList.some((item) => XEUtils.isDateSame(item.date, offsetQuarter, 'yyyyq'))) {\n                    dateCheckMonth(offsetQuarter);\n                }\n                dateParseValue(offsetQuarter);\n            }\n        };\n        const dateMoveMonth = (offsetMonth) => {\n            if (!isDateDisabled({ date: offsetMonth })) {\n                const monthList = computeMonthList.value;\n                if (!monthList.some((item) => XEUtils.isDateSame(item.date, offsetMonth, 'yyyyMM'))) {\n                    dateCheckMonth(offsetMonth);\n                }\n                dateParseValue(offsetMonth);\n            }\n        };\n        const dateMouseenterEvent = (item) => {\n            if (!isDateDisabled(item)) {\n                const { datePanelType } = reactData;\n                if (datePanelType === 'month') {\n                    dateMoveMonth(item.date);\n                }\n                else if (datePanelType === 'quarter') {\n                    dateMoveQuarter(item.date);\n                }\n                else if (datePanelType === 'year') {\n                    dateMoveYear(item.date);\n                }\n                else {\n                    dateMoveDay(item.date);\n                }\n            }\n        };\n        const updateTimePos = (liElem) => {\n            if (liElem) {\n                const height = liElem.offsetHeight;\n                const ulElem = liElem.parentNode;\n                ulElem.scrollTop = liElem.offsetTop - height * 4;\n            }\n        };\n        const dateTimeChangeEvent = (evnt) => {\n            const { datetimePanelValue } = reactData;\n            reactData.datetimePanelValue = datetimePanelValue ? new Date(datetimePanelValue.getTime()) : new Date();\n            updateTimePos(evnt.currentTarget);\n        };\n        const dateHourEvent = (evnt, item) => {\n            const { datetimePanelValue } = reactData;\n            if (datetimePanelValue) {\n                datetimePanelValue.setHours(item.value);\n            }\n            dateTimeChangeEvent(evnt);\n        };\n        // const dateClearEvent = (evnt: MouseEvent) => {\n        //   const value = ''\n        //   handleChange(value, evnt)\n        //   dispatchEvent('clear', { value }, evnt)\n        // }\n        const dateConfirmEvent = () => {\n            const { multiple } = props;\n            const { datetimePanelValue } = reactData;\n            const dateValue = computeDateValue.value;\n            const isDateTimeType = computeIsDateTimeType.value;\n            if (isDateTimeType) {\n                const dateValueFormat = computeDateValueFormat.value;\n                if (multiple) {\n                    // 如果为多选\n                    const dateMultipleValue = computeDateMultipleValue.value;\n                    if (isDateTimeType) {\n                        // 如果是datetime特殊类型\n                        const dateListValue = [...computeDateListValue.value];\n                        const datetimeRest = [];\n                        dateListValue.forEach(item => {\n                            if (item) {\n                                if (datetimePanelValue) {\n                                    item.setHours(datetimePanelValue.getHours());\n                                    item.setMinutes(datetimePanelValue.getMinutes());\n                                    item.setSeconds(datetimePanelValue.getSeconds());\n                                }\n                                datetimeRest.push(item);\n                            }\n                        });\n                        handleChange(datetimeRest.map(date => XEUtils.toDateString(date, dateValueFormat)).join(','), { type: 'update' });\n                    }\n                    else {\n                        // 如果是日期类型\n                        handleChange(dateMultipleValue.join(','), { type: 'update' });\n                    }\n                }\n                else {\n                    dateChange(dateValue || reactData.currentDate);\n                }\n            }\n            hidePanel();\n        };\n        const dateMinuteEvent = (evnt, item) => {\n            const { datetimePanelValue } = reactData;\n            if (datetimePanelValue) {\n                datetimePanelValue.setMinutes(item.value);\n            }\n            dateTimeChangeEvent(evnt);\n        };\n        const dateSecondEvent = (evnt, item) => {\n            const { datetimePanelValue } = reactData;\n            if (datetimePanelValue) {\n                datetimePanelValue.setSeconds(item.value);\n            }\n            dateTimeChangeEvent(evnt);\n        };\n        const dateOffsetEvent = (evnt) => {\n            const { isActivated, datePanelValue, datePanelType } = reactData;\n            if (isActivated) {\n                evnt.preventDefault();\n                const isLeftArrow = globalEvents.hasKey(evnt, GLOBAL_EVENT_KEYS.ARROW_LEFT);\n                const isUpArrow = globalEvents.hasKey(evnt, GLOBAL_EVENT_KEYS.ARROW_UP);\n                const isRightArrow = globalEvents.hasKey(evnt, GLOBAL_EVENT_KEYS.ARROW_RIGHT);\n                const isDwArrow = globalEvents.hasKey(evnt, GLOBAL_EVENT_KEYS.ARROW_DOWN);\n                if (datePanelType === 'year') {\n                    let offsetYear = XEUtils.getWhatYear(datePanelValue || Date.now(), 0, 'first');\n                    if (isLeftArrow) {\n                        offsetYear = XEUtils.getWhatYear(offsetYear, -1);\n                    }\n                    else if (isUpArrow) {\n                        offsetYear = XEUtils.getWhatYear(offsetYear, -4);\n                    }\n                    else if (isRightArrow) {\n                        offsetYear = XEUtils.getWhatYear(offsetYear, 1);\n                    }\n                    else if (isDwArrow) {\n                        offsetYear = XEUtils.getWhatYear(offsetYear, 4);\n                    }\n                    dateMoveYear(offsetYear);\n                }\n                else if (datePanelType === 'quarter') {\n                    let offsetQuarter = XEUtils.getWhatQuarter(datePanelValue || Date.now(), 0, 'first');\n                    if (isLeftArrow) {\n                        offsetQuarter = XEUtils.getWhatQuarter(offsetQuarter, -1);\n                    }\n                    else if (isUpArrow) {\n                        offsetQuarter = XEUtils.getWhatQuarter(offsetQuarter, -2);\n                    }\n                    else if (isRightArrow) {\n                        offsetQuarter = XEUtils.getWhatQuarter(offsetQuarter, 1);\n                    }\n                    else if (isDwArrow) {\n                        offsetQuarter = XEUtils.getWhatQuarter(offsetQuarter, 2);\n                    }\n                    dateMoveQuarter(offsetQuarter);\n                }\n                else if (datePanelType === 'month') {\n                    let offsetMonth = XEUtils.getWhatMonth(datePanelValue || Date.now(), 0, 'first');\n                    if (isLeftArrow) {\n                        offsetMonth = XEUtils.getWhatMonth(offsetMonth, -1);\n                    }\n                    else if (isUpArrow) {\n                        offsetMonth = XEUtils.getWhatMonth(offsetMonth, -4);\n                    }\n                    else if (isRightArrow) {\n                        offsetMonth = XEUtils.getWhatMonth(offsetMonth, 1);\n                    }\n                    else if (isDwArrow) {\n                        offsetMonth = XEUtils.getWhatMonth(offsetMonth, 4);\n                    }\n                    dateMoveMonth(offsetMonth);\n                }\n                else if (datePanelType === 'week') {\n                    let offsetDay = datePanelValue || XEUtils.getWhatDay(Date.now(), 0, 'first');\n                    const firstDayOfWeek = computeFirstDayOfWeek.value;\n                    if (isUpArrow) {\n                        offsetDay = XEUtils.getWhatWeek(offsetDay, -1, firstDayOfWeek);\n                    }\n                    else if (isDwArrow) {\n                        offsetDay = XEUtils.getWhatWeek(offsetDay, 1, firstDayOfWeek);\n                    }\n                    dateMoveDay(offsetDay);\n                }\n                else {\n                    let offsetDay = datePanelValue || XEUtils.getWhatDay(Date.now(), 0, 'first');\n                    if (isLeftArrow) {\n                        offsetDay = XEUtils.getWhatDay(offsetDay, -1);\n                    }\n                    else if (isUpArrow) {\n                        offsetDay = XEUtils.getWhatWeek(offsetDay, -1, offsetDay.getDay());\n                    }\n                    else if (isRightArrow) {\n                        offsetDay = XEUtils.getWhatDay(offsetDay, 1);\n                    }\n                    else if (isDwArrow) {\n                        offsetDay = XEUtils.getWhatWeek(offsetDay, 1, offsetDay.getDay());\n                    }\n                    dateMoveDay(offsetDay);\n                }\n            }\n        };\n        const datePgOffsetEvent = (evnt) => {\n            const { isActivated } = reactData;\n            if (isActivated) {\n                const isPgUp = globalEvents.hasKey(evnt, GLOBAL_EVENT_KEYS.PAGE_UP);\n                evnt.preventDefault();\n                if (isPgUp) {\n                    datePrevEvent(evnt);\n                }\n                else {\n                    dateNextEvent(evnt);\n                }\n            }\n        };\n        const dateOpenPanel = () => {\n            const { type } = props;\n            const isDateTimeType = computeIsDateTimeType.value;\n            const dateValue = computeDateValue.value;\n            if (['year', 'quarter', 'month', 'week'].indexOf(type) > -1) {\n                reactData.datePanelType = type;\n            }\n            else {\n                reactData.datePanelType = 'day';\n            }\n            reactData.currentDate = XEUtils.getWhatDay(Date.now(), 0, 'first');\n            if (dateValue) {\n                dateMonthHandle(dateValue, 0);\n                dateParseValue(dateValue);\n            }\n            else {\n                dateNowHandle();\n            }\n            if (isDateTimeType) {\n                reactData.datetimePanelValue = reactData.datePanelValue || XEUtils.getWhatDay(Date.now(), 0, 'first');\n                nextTick(() => {\n                    const timeBodyElem = refInputTimeBody.value;\n                    XEUtils.arrayEach(timeBodyElem.querySelectorAll('li.is--selected'), (elem) => {\n                        updateTimePos(elem);\n                    });\n                });\n            }\n        };\n        // 日期\n        // 弹出面板\n        const updateZindex = () => {\n            if (reactData.panelIndex < getLastZIndex()) {\n                reactData.panelIndex = nextZIndex();\n            }\n        };\n        const updatePlacement = () => {\n            return nextTick().then(() => {\n                const { placement } = props;\n                const { panelIndex } = reactData;\n                const targetElem = refInputTarget.value;\n                const panelElem = refInputPanel.value;\n                const btnTransfer = computeBtnTransfer.value;\n                if (targetElem && panelElem) {\n                    const targetHeight = targetElem.offsetHeight;\n                    const targetWidth = targetElem.offsetWidth;\n                    const panelHeight = panelElem.offsetHeight;\n                    const panelWidth = panelElem.offsetWidth;\n                    const marginSize = 5;\n                    const panelStyle = {\n                        zIndex: panelIndex\n                    };\n                    const { boundingTop, boundingLeft, visibleHeight, visibleWidth } = getAbsolutePos(targetElem);\n                    let panelPlacement = 'bottom';\n                    if (btnTransfer) {\n                        let left = boundingLeft;\n                        let top = boundingTop + targetHeight;\n                        if (placement === 'top') {\n                            panelPlacement = 'top';\n                            top = boundingTop - panelHeight;\n                        }\n                        else if (!placement) {\n                            // 如果下面不够放，则向上\n                            if (top + panelHeight + marginSize > visibleHeight) {\n                                panelPlacement = 'top';\n                                top = boundingTop - panelHeight;\n                            }\n                            // 如果上面不够放，则向下（优先）\n                            if (top < marginSize) {\n                                panelPlacement = 'bottom';\n                                top = boundingTop + targetHeight;\n                            }\n                        }\n                        // 如果溢出右边\n                        if (left + panelWidth + marginSize > visibleWidth) {\n                            left -= left + panelWidth + marginSize - visibleWidth;\n                        }\n                        // 如果溢出左边\n                        if (left < marginSize) {\n                            left = marginSize;\n                        }\n                        Object.assign(panelStyle, {\n                            left: `${left}px`,\n                            top: `${top}px`,\n                            minWidth: `${targetWidth}px`\n                        });\n                    }\n                    else {\n                        if (placement === 'top') {\n                            panelPlacement = 'top';\n                            panelStyle.bottom = `${targetHeight}px`;\n                        }\n                        else if (!placement) {\n                            // 如果下面不够放，则向上\n                            panelStyle.top = `${targetHeight}px`;\n                            if (boundingTop + targetHeight + panelHeight > visibleHeight) {\n                                // 如果上面不够放，则向下（优先）\n                                if (boundingTop - targetHeight - panelHeight > marginSize) {\n                                    panelPlacement = 'top';\n                                    panelStyle.top = '';\n                                    panelStyle.bottom = `${targetHeight}px`;\n                                }\n                            }\n                        }\n                    }\n                    reactData.panelStyle = panelStyle;\n                    reactData.panelPlacement = panelPlacement;\n                    return nextTick();\n                }\n            });\n        };\n        const showPanel = () => {\n            const { visiblePanel } = reactData;\n            const isDisabled = computeIsDisabled.value;\n            const isDatePickerType = computeIsDatePickerType.value;\n            if (!isDisabled && !visiblePanel) {\n                if (!reactData.initialized) {\n                    reactData.initialized = true;\n                }\n                if (internalData.hpTimeout) {\n                    clearTimeout(internalData.hpTimeout);\n                    internalData.hpTimeout = undefined;\n                }\n                reactData.isActivated = true;\n                reactData.isAniVisible = true;\n                if (isDatePickerType) {\n                    dateOpenPanel();\n                }\n                setTimeout(() => {\n                    reactData.visiblePanel = true;\n                }, 10);\n                updateZindex();\n                return updatePlacement();\n            }\n            return nextTick();\n        };\n        const datePickerOpenEvent = (evnt) => {\n            const formReadonly = computeFormReadonly.value;\n            if (!formReadonly) {\n                evnt.preventDefault();\n                showPanel();\n            }\n        };\n        const clickEvent = (evnt) => {\n            triggerEvent(evnt);\n        };\n        const handleShortcutEvent = ({ option, $event }) => {\n            const shortcutOpts = computeShortcutOpts.value;\n            const { autoClose } = shortcutOpts;\n            const clickMethod = option.clickMethod || shortcutOpts.clickMethod;\n            const shortcutParams = {\n                $datePicker: $xeDatePicker,\n                option: option\n            };\n            if (clickMethod) {\n                clickMethod(shortcutParams);\n            }\n            if (autoClose) {\n                hidePanel();\n            }\n            dispatchEvent('shortcut-click', shortcutParams, $event);\n        };\n        // 全局事件\n        const handleGlobalMousedownEvent = (evnt) => {\n            const { visiblePanel, isActivated } = reactData;\n            const isDatePickerType = computeIsDatePickerType.value;\n            const el = refElem.value;\n            const panelWrapperElem = refPanelWrapper.value;\n            const isDisabled = computeIsDisabled.value;\n            if (!isDisabled && isActivated) {\n                reactData.isActivated = getEventTargetNode(evnt, el).flag || getEventTargetNode(evnt, panelWrapperElem).flag;\n                if (!reactData.isActivated) {\n                    // 如果是日期类型\n                    if (isDatePickerType) {\n                        if (visiblePanel) {\n                            hidePanel();\n                            afterCheckValue();\n                        }\n                    }\n                    else {\n                        afterCheckValue();\n                    }\n                }\n            }\n        };\n        const handleGlobalKeydownEvent = (evnt) => {\n            const { clearable } = props;\n            const { visiblePanel } = reactData;\n            const isDatePickerType = computeIsDatePickerType.value;\n            const isDisabled = computeIsDisabled.value;\n            if (!isDisabled) {\n                const isTab = globalEvents.hasKey(evnt, GLOBAL_EVENT_KEYS.TAB);\n                const isDel = globalEvents.hasKey(evnt, GLOBAL_EVENT_KEYS.DELETE);\n                const isEsc = globalEvents.hasKey(evnt, GLOBAL_EVENT_KEYS.ESCAPE);\n                const isEnter = globalEvents.hasKey(evnt, GLOBAL_EVENT_KEYS.ENTER);\n                const isLeftArrow = globalEvents.hasKey(evnt, GLOBAL_EVENT_KEYS.ARROW_LEFT);\n                const isUpArrow = globalEvents.hasKey(evnt, GLOBAL_EVENT_KEYS.ARROW_UP);\n                const isRightArrow = globalEvents.hasKey(evnt, GLOBAL_EVENT_KEYS.ARROW_RIGHT);\n                const isDwArrow = globalEvents.hasKey(evnt, GLOBAL_EVENT_KEYS.ARROW_DOWN);\n                const isPgUp = globalEvents.hasKey(evnt, GLOBAL_EVENT_KEYS.PAGE_UP);\n                const isPgDn = globalEvents.hasKey(evnt, GLOBAL_EVENT_KEYS.PAGE_DOWN);\n                const operArrow = isLeftArrow || isUpArrow || isRightArrow || isDwArrow;\n                let isActivated = reactData.isActivated;\n                if (isTab) {\n                    if (isActivated) {\n                        afterCheckValue();\n                    }\n                    isActivated = false;\n                    reactData.isActivated = isActivated;\n                }\n                else if (operArrow) {\n                    if (isDatePickerType) {\n                        if (isActivated) {\n                            if (visiblePanel) {\n                                dateOffsetEvent(evnt);\n                            }\n                            else if (isUpArrow || isDwArrow) {\n                                datePickerOpenEvent(evnt);\n                            }\n                        }\n                    }\n                }\n                else if (isEnter) {\n                    if (isDatePickerType) {\n                        if (visiblePanel) {\n                            if (reactData.datePanelValue) {\n                                dateSelectItem(reactData.datePanelValue);\n                            }\n                            else {\n                                hidePanel();\n                            }\n                        }\n                        else if (isActivated) {\n                            datePickerOpenEvent(evnt);\n                        }\n                    }\n                }\n                else if (isPgUp || isPgDn) {\n                    if (isDatePickerType) {\n                        if (isActivated) {\n                            datePgOffsetEvent(evnt);\n                        }\n                    }\n                }\n                if (isTab || isEsc) {\n                    if (visiblePanel) {\n                        hidePanel();\n                    }\n                }\n                else if (isDel && clearable) {\n                    if (isActivated) {\n                        clearValueEvent(evnt, null);\n                    }\n                }\n            }\n        };\n        const handleGlobalMousewheelEvent = (evnt) => {\n            const { visiblePanel } = reactData;\n            const isDisabled = computeIsDisabled.value;\n            if (!isDisabled) {\n                if (visiblePanel) {\n                    const panelWrapperElem = refPanelWrapper.value;\n                    if (getEventTargetNode(evnt, panelWrapperElem).flag) {\n                        updatePlacement();\n                    }\n                    else {\n                        hidePanel();\n                        afterCheckValue();\n                    }\n                }\n            }\n        };\n        const handleGlobalBlurEvent = () => {\n            const { isActivated, visiblePanel } = reactData;\n            if (visiblePanel) {\n                hidePanel();\n                afterCheckValue();\n            }\n            else if (isActivated) {\n                afterCheckValue();\n            }\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $datePicker: $xeDatePicker }, params));\n        };\n        datePickerMethods = {\n            dispatchEvent,\n            focus() {\n                const inputElem = refInputTarget.value;\n                reactData.isActivated = true;\n                inputElem.focus();\n                return nextTick();\n            },\n            blur() {\n                const inputElem = refInputTarget.value;\n                inputElem.blur();\n                reactData.isActivated = false;\n                return nextTick();\n            },\n            select() {\n                const inputElem = refInputTarget.value;\n                inputElem.select();\n                reactData.isActivated = false;\n                return nextTick();\n            },\n            showPanel,\n            hidePanel,\n            updatePlacement\n        };\n        Object.assign($xeDatePicker, datePickerMethods);\n        const renderDateLabel = (item, label) => {\n            const { festivalMethod } = props;\n            if (festivalMethod) {\n                const { datePanelType } = reactData;\n                const festivalRest = festivalMethod({ type: datePanelType, viewType: datePanelType, date: item.date, $datePicker: $xeDatePicker });\n                const festivalItem = festivalRest ? (XEUtils.isString(festivalRest) ? { label: festivalRest } : festivalRest) : {};\n                const extraItem = festivalItem.extra ? (XEUtils.isString(festivalItem.extra) ? { label: festivalItem.extra } : festivalItem.extra) : null;\n                const labels = [\n                    h('span', {\n                        class: ['vxe-date-picker--date-label', {\n                                'is-notice': festivalItem.notice\n                            }]\n                    }, extraItem && extraItem.label\n                        ? [\n                            h('span', `${label}`),\n                            h('span', {\n                                class: ['vxe-date-picker--date-label--extra', extraItem.important ? 'is-important' : '', extraItem.className],\n                                style: extraItem.style\n                            }, XEUtils.toValueString(extraItem.label))\n                        ]\n                        : `${label}`)\n                ];\n                const festivalLabel = festivalItem.label;\n                if (festivalLabel) {\n                    // 默认最多支持3个节日重叠\n                    const festivalLabels = XEUtils.toValueString(festivalLabel).split(',');\n                    labels.push(h('span', {\n                        class: ['vxe-date-picker--date-festival', festivalItem.important ? 'is-important' : '', festivalItem.className],\n                        style: festivalItem.style\n                    }, [\n                        festivalLabels.length > 1\n                            ? h('span', {\n                                class: ['vxe-date-picker--date-festival--overlap', `overlap--${festivalLabels.length}`]\n                            }, festivalLabels.map(label => h('span', label.substring(0, 3))))\n                            : h('span', {\n                                class: 'vxe-date-picker--date-festival--label'\n                            }, festivalLabels[0].substring(0, 3))\n                    ]));\n                }\n                return labels;\n            }\n            return label;\n        };\n        const renderDateDayTable = () => {\n            const { multiple } = props;\n            const { datePanelType, datePanelValue } = reactData;\n            const dateValue = computeDateValue.value;\n            const dateHeaders = computeDateHeaders.value;\n            const dayDatas = computeDayDatas.value;\n            const dateListValue = computeDateListValue.value;\n            const overCount = computeOverCount.value;\n            const matchFormat = 'yyyyMMdd';\n            return [\n                h('table', {\n                    class: `vxe-date-picker--date-${datePanelType}-view`,\n                    cellspacing: 0,\n                    cellpadding: 0,\n                    border: 0\n                }, [\n                    h('thead', [\n                        h('tr', dateHeaders.map((item) => {\n                            return h('th', item.label);\n                        }))\n                    ]),\n                    h('tbody', dayDatas.map((rows) => {\n                        return h('tr', rows.map((item) => {\n                            const isSelected = multiple ? dateListValue.some(val => XEUtils.isDateSame(val, item.date, matchFormat)) : XEUtils.isDateSame(dateValue, item.date, matchFormat);\n                            return h('td', {\n                                class: {\n                                    'is--prev': item.isPrev,\n                                    'is--current': item.isCurrent,\n                                    'is--now': item.isNow,\n                                    'is--next': item.isNext,\n                                    'is--disabled': isDateDisabled(item),\n                                    'is--selected': isSelected,\n                                    'is--over': overCount && !isSelected,\n                                    'is--hover': !overCount && XEUtils.isDateSame(datePanelValue, item.date, matchFormat)\n                                },\n                                onClick: () => dateSelectEvent(item),\n                                onMouseenter: () => dateMouseenterEvent(item)\n                            }, renderDateLabel(item, item.label));\n                        }));\n                    }))\n                ])\n            ];\n        };\n        const renderDateWeekTable = () => {\n            const { multiple } = props;\n            const { datePanelType, datePanelValue } = reactData;\n            const dateValue = computeDateValue.value;\n            const weekHeaders = computeWeekHeaders.value;\n            const weekDates = computeWeekDates.value;\n            const dateListValue = computeDateListValue.value;\n            const overCount = computeOverCount.value;\n            const matchFormat = 'yyyyMMdd';\n            return [\n                h('table', {\n                    class: `vxe-date-picker--date-${datePanelType}-view`,\n                    cellspacing: 0,\n                    cellpadding: 0,\n                    border: 0\n                }, [\n                    h('thead', [\n                        h('tr', weekHeaders.map((item) => {\n                            return h('th', item.label);\n                        }))\n                    ]),\n                    h('tbody', weekDates.map((rows) => {\n                        const isSelected = multiple ? rows.some((item) => dateListValue.some(val => XEUtils.isDateSame(val, item.date, matchFormat))) : rows.some((item) => XEUtils.isDateSame(dateValue, item.date, matchFormat));\n                        const isHover = rows.some((item) => XEUtils.isDateSame(datePanelValue, item.date, matchFormat));\n                        return h('tr', rows.map((item) => {\n                            return h('td', {\n                                class: {\n                                    'is--prev': item.isPrev,\n                                    'is--current': item.isCurrent,\n                                    'is--now': item.isNow,\n                                    'is--next': item.isNext,\n                                    'is--disabled': isDateDisabled(item),\n                                    'is--selected': isSelected,\n                                    'is--over': overCount && !isSelected,\n                                    'is--hover': !overCount && isHover\n                                },\n                                // event\n                                onClick: () => dateSelectEvent(item),\n                                onMouseenter: () => dateMouseenterEvent(item)\n                            }, renderDateLabel(item, item.label));\n                        }));\n                    }))\n                ])\n            ];\n        };\n        const renderDateMonthTable = () => {\n            const { multiple } = props;\n            const { datePanelType, datePanelValue } = reactData;\n            const dateValue = computeDateValue.value;\n            const monthDatas = computeMonthDatas.value;\n            const dateListValue = computeDateListValue.value;\n            const overCount = computeOverCount.value;\n            const matchFormat = 'yyyyMM';\n            return [\n                h('table', {\n                    class: `vxe-date-picker--date-${datePanelType}-view`,\n                    cellspacing: 0,\n                    cellpadding: 0,\n                    border: 0\n                }, [\n                    h('tbody', monthDatas.map((rows) => {\n                        return h('tr', rows.map((item) => {\n                            const isSelected = multiple ? dateListValue.some(val => XEUtils.isDateSame(val, item.date, matchFormat)) : XEUtils.isDateSame(dateValue, item.date, matchFormat);\n                            return h('td', {\n                                class: {\n                                    'is--prev': item.isPrev,\n                                    'is--current': item.isCurrent,\n                                    'is--now': item.isNow,\n                                    'is--next': item.isNext,\n                                    'is--disabled': isDateDisabled(item),\n                                    'is--selected': isSelected,\n                                    'is--over': overCount && !isSelected,\n                                    'is--hover': !overCount && XEUtils.isDateSame(datePanelValue, item.date, matchFormat)\n                                },\n                                onClick: () => dateSelectEvent(item),\n                                onMouseenter: () => dateMouseenterEvent(item)\n                            }, renderDateLabel(item, getI18n(`vxe.input.date.months.m${item.month}`)));\n                        }));\n                    }))\n                ])\n            ];\n        };\n        const renderDateQuarterTable = () => {\n            const { multiple } = props;\n            const { datePanelType, datePanelValue } = reactData;\n            const dateValue = computeDateValue.value;\n            const quarterDatas = computeQuarterDatas.value;\n            const dateListValue = computeDateListValue.value;\n            const overCount = computeOverCount.value;\n            const matchFormat = 'yyyyq';\n            return [\n                h('table', {\n                    class: `vxe-date-picker--date-${datePanelType}-view`,\n                    cellspacing: 0,\n                    cellpadding: 0,\n                    border: 0\n                }, [\n                    h('tbody', quarterDatas.map((rows) => {\n                        return h('tr', rows.map((item) => {\n                            const isSelected = multiple ? dateListValue.some(val => XEUtils.isDateSame(val, item.date, matchFormat)) : XEUtils.isDateSame(dateValue, item.date, matchFormat);\n                            return h('td', {\n                                class: {\n                                    'is--prev': item.isPrev,\n                                    'is--current': item.isCurrent,\n                                    'is--now': item.isNow,\n                                    'is--next': item.isNext,\n                                    'is--disabled': isDateDisabled(item),\n                                    'is--selected': isSelected,\n                                    'is--over': overCount && !isSelected,\n                                    'is--hover': !overCount && XEUtils.isDateSame(datePanelValue, item.date, matchFormat)\n                                },\n                                onClick: () => dateSelectEvent(item),\n                                onMouseenter: () => dateMouseenterEvent(item)\n                            }, renderDateLabel(item, getI18n(`vxe.input.date.quarters.q${item.quarter}`)));\n                        }));\n                    }))\n                ])\n            ];\n        };\n        const renderDateYearTable = () => {\n            const { multiple } = props;\n            const { datePanelType, datePanelValue } = reactData;\n            const dateValue = computeDateValue.value;\n            const yearDatas = computeYearDatas.value;\n            const dateListValue = computeDateListValue.value;\n            const overCount = computeOverCount.value;\n            const matchFormat = 'yyyy';\n            return [\n                h('table', {\n                    class: `vxe-date-picker--date-${datePanelType}-view`,\n                    cellspacing: 0,\n                    cellpadding: 0,\n                    border: 0\n                }, [\n                    h('tbody', yearDatas.map((rows) => {\n                        return h('tr', rows.map((item) => {\n                            const isSelected = multiple ? dateListValue.some(val => XEUtils.isDateSame(val, item.date, matchFormat)) : XEUtils.isDateSame(dateValue, item.date, matchFormat);\n                            return h('td', {\n                                class: {\n                                    'is--prev': item.isPrev,\n                                    'is--current': item.isCurrent,\n                                    'is--now': item.isNow,\n                                    'is--next': item.isNext,\n                                    'is--disabled': isDateDisabled(item),\n                                    'is--selected': isSelected,\n                                    'is--over': overCount && !isSelected,\n                                    'is--hover': !overCount && XEUtils.isDateSame(datePanelValue, item.date, matchFormat)\n                                },\n                                onClick: () => dateSelectEvent(item),\n                                onMouseenter: () => dateMouseenterEvent(item)\n                            }, renderDateLabel(item, item.year));\n                        }));\n                    }))\n                ])\n            ];\n        };\n        const renderDateTable = () => {\n            const { datePanelType } = reactData;\n            switch (datePanelType) {\n                case 'week':\n                    return renderDateWeekTable();\n                case 'month':\n                    return renderDateMonthTable();\n                case 'quarter':\n                    return renderDateQuarterTable();\n                case 'year':\n                    return renderDateYearTable();\n            }\n            return renderDateDayTable();\n        };\n        const renderDatePanel = () => {\n            const { multiple } = props;\n            const { datePanelType } = reactData;\n            const isDisabledPrevDateBtn = computeIsDisabledPrevDateBtn.value;\n            const isDisabledNextDateBtn = computeIsDisabledNextDateBtn.value;\n            const selectDatePanelObj = computeSelectDatePanelObj.value;\n            const supportMultiples = computeSupportMultiples.value;\n            return [\n                h('div', {\n                    class: 'vxe-date-picker--date-picker-header'\n                }, [\n                    h('div', {\n                        class: 'vxe-date-picker--date-picker-type-wrapper'\n                    }, [\n                        datePanelType === 'year'\n                            ? h('span', {\n                                class: 'vxe-date-picker--date-picker-label'\n                            }, selectDatePanelObj.y)\n                            : h('span', {\n                                class: 'vxe-date-picker--date-picker-btns'\n                            }, [\n                                h('span', {\n                                    class: 'vxe-date-picker--date-picker-btn',\n                                    onClick: dateToggleYearTypeEvent\n                                }, selectDatePanelObj.y),\n                                selectDatePanelObj.m\n                                    ? h('span', {\n                                        class: 'vxe-date-picker--date-picker-btn',\n                                        onClick: dateToggleMonthTypeEvent\n                                    }, selectDatePanelObj.m)\n                                    : renderEmptyElement($xeDatePicker)\n                            ])\n                    ]),\n                    h('div', {\n                        class: 'vxe-date-picker--date-picker-btn-wrapper'\n                    }, [\n                        h('span', {\n                            class: ['vxe-date-picker--date-picker-btn vxe-date-picker--date-picker-prev-btn', {\n                                    'is--disabled': isDisabledPrevDateBtn\n                                }],\n                            onClick: datePrevEvent\n                        }, [\n                            h('i', {\n                                class: 'vxe-icon-caret-left'\n                            })\n                        ]),\n                        h('span', {\n                            class: 'vxe-date-picker--date-picker-btn vxe-date-picker--date-picker-current-btn',\n                            onClick: dateTodayMonthEvent\n                        }, [\n                            h('i', {\n                                class: 'vxe-icon-dot'\n                            })\n                        ]),\n                        h('span', {\n                            class: ['vxe-date-picker--date-picker-btn vxe-date-picker--date-picker-next-btn', {\n                                    'is--disabled': isDisabledNextDateBtn\n                                }],\n                            onClick: dateNextEvent\n                        }, [\n                            h('i', {\n                                class: 'vxe-icon-caret-right'\n                            })\n                        ]),\n                        multiple && supportMultiples\n                            ? h('span', {\n                                class: 'vxe-date-picker--date-picker-btn vxe-date-picker--date-picker-confirm-btn'\n                            }, [\n                                h('button', {\n                                    class: 'vxe-date-picker--date-picker-confirm',\n                                    type: 'button',\n                                    onClick: dateConfirmEvent\n                                }, getI18n('vxe.button.confirm'))\n                            ])\n                            : null\n                    ])\n                ]),\n                h('div', {\n                    class: 'vxe-date-picker--date-picker-body'\n                }, renderDateTable())\n            ];\n        };\n        const renderTimePanel = () => {\n            const { datetimePanelValue } = reactData;\n            const dateTimeLabel = computeDateTimeLabel.value;\n            const hourList = computeHourList.value;\n            const hasTimeMinute = computeHasTimeMinute.value;\n            const minuteList = computeMinuteList.value;\n            const hasTimeSecond = computeHasTimeSecond.value;\n            const secondList = computeSecondList.value;\n            return [\n                h('div', {\n                    class: 'vxe-date-picker--time-picker-header'\n                }, [\n                    hasTimeMinute\n                        ? h('div', {\n                            class: 'vxe-date-picker--time-picker-title'\n                        }, dateTimeLabel)\n                        : createCommentVNode(),\n                    h('div', {\n                        class: 'vxe-date-picker--time-picker-btn'\n                    }, [\n                        h('button', {\n                            class: 'vxe-date-picker--time-picker-confirm',\n                            type: 'button',\n                            onClick: dateConfirmEvent\n                        }, getI18n('vxe.button.confirm'))\n                    ])\n                ]),\n                h('div', {\n                    ref: refInputTimeBody,\n                    class: 'vxe-date-picker--time-picker-body'\n                }, [\n                    h('ul', {\n                        class: 'vxe-date-picker--time-picker-hour-list'\n                    }, hourList.map((item, index) => {\n                        return h('li', {\n                            key: index,\n                            class: {\n                                'is--selected': datetimePanelValue && datetimePanelValue.getHours() === item.value\n                            },\n                            onClick: (evnt) => dateHourEvent(evnt, item)\n                        }, item.label);\n                    })),\n                    hasTimeMinute\n                        ? h('ul', {\n                            class: 'vxe-date-picker--time-picker-minute-list'\n                        }, minuteList.map((item, index) => {\n                            return h('li', {\n                                key: index,\n                                class: {\n                                    'is--selected': datetimePanelValue && datetimePanelValue.getMinutes() === item.value\n                                },\n                                onClick: (evnt) => dateMinuteEvent(evnt, item)\n                            }, item.label);\n                        }))\n                        : createCommentVNode(),\n                    hasTimeMinute && hasTimeSecond\n                        ? h('ul', {\n                            class: 'vxe-date-picker--time-picker-second-list'\n                        }, secondList.map((item, index) => {\n                            return h('li', {\n                                key: index,\n                                class: {\n                                    'is--selected': datetimePanelValue && datetimePanelValue.getSeconds() === item.value\n                                },\n                                onClick: (evnt) => dateSecondEvent(evnt, item)\n                            }, item.label);\n                        }))\n                        : createCommentVNode()\n                ])\n            ];\n        };\n        const renderShortcutBtn = (pos, isVertical) => {\n            const shortcutOpts = computeShortcutOpts.value;\n            const { options, position, align, mode } = shortcutOpts;\n            if (isEnableConf(shortcutOpts) && options && options.length && (position || 'left') === pos) {\n                return h('div', {\n                    class: `vxe-date-picker--panel-${pos}-wrapper`\n                }, [\n                    h(VxeButtonGroupComponent, {\n                        options,\n                        mode,\n                        align,\n                        vertical: isVertical,\n                        onClick: handleShortcutEvent\n                    })\n                ]);\n            }\n            return renderEmptyElement($xeDatePicker);\n        };\n        const renderPickerPanel = () => {\n            const { type } = props;\n            if (type === 'datetime') {\n                return h('div', {\n                    key: type,\n                    ref: refPanelWrapper,\n                    class: 'vxe-date-picker--panel-datetime-layout-wrapper'\n                }, [\n                    h('div', {\n                        class: 'vxe-date-picker--panel-datetime-left-wrapper'\n                    }, renderDatePanel()),\n                    h('div', {\n                        class: 'vxe-date-picker--panel-datetime-right-wrapper'\n                    }, renderTimePanel())\n                ]);\n            }\n            else if (type === 'time') {\n                return h('div', {\n                    key: type,\n                    ref: refPanelWrapper,\n                    class: 'vxe-date-picker--panel-wrapper'\n                }, renderTimePanel());\n            }\n            return h('div', {\n                key: type || 'default',\n                ref: refPanelWrapper,\n                class: 'vxe-date-picker--panel-wrapper'\n            }, renderDatePanel());\n        };\n        const renderPanel = () => {\n            const { type } = props;\n            const { initialized, isAniVisible, visiblePanel, panelPlacement, panelStyle } = reactData;\n            const vSize = computeSize.value;\n            const btnTransfer = computeBtnTransfer.value;\n            const shortcutOpts = computeShortcutOpts.value;\n            const { options, position } = shortcutOpts;\n            const headerSlot = slots.header;\n            const footerSlot = slots.footer;\n            const topSlot = slots.top;\n            const bottomSlot = slots.bottom;\n            const leftSlot = slots.left;\n            const rightSlot = slots.right;\n            const hasShortcutBtn = options && options.length;\n            return h(Teleport, {\n                to: 'body',\n                disabled: btnTransfer ? !initialized : true\n            }, [\n                h('div', {\n                    ref: refInputPanel,\n                    class: ['vxe-table--ignore-clear vxe-date-picker--panel', `type--${type}`, {\n                            [`size--${vSize}`]: vSize,\n                            'is--transfer': btnTransfer,\n                            'ani--leave': isAniVisible,\n                            'ani--enter': visiblePanel,\n                            'show--top': !!(topSlot || headerSlot || (hasShortcutBtn && (position === 'top' || position === 'header'))),\n                            'show--bottom': !!(bottomSlot || footerSlot || (hasShortcutBtn && (position === 'bottom' || position === 'footer'))),\n                            'show--left': !!(leftSlot || (hasShortcutBtn && position === 'left')),\n                            'show--right': !!(rightSlot || (hasShortcutBtn && position === 'right'))\n                        }],\n                    placement: panelPlacement,\n                    style: panelStyle\n                }, initialized && (visiblePanel || isAniVisible)\n                    ? [\n                        h('div', {\n                            class: 'vxe-date-picker--panel-layout-wrapper'\n                        }, [\n                            topSlot\n                                ? h('div', {\n                                    class: 'vxe-date-picker--panel-top-wrapper'\n                                }, topSlot({}))\n                                : renderShortcutBtn('top'),\n                            h('div', {\n                                class: 'vxe-date-picker--panel-body-layout-wrapper'\n                            }, [\n                                leftSlot\n                                    ? h('div', {\n                                        class: 'vxe-date-picker--panel-left-wrapper'\n                                    }, leftSlot({}))\n                                    : renderShortcutBtn('left', true),\n                                h('div', {\n                                    class: 'vxe-date-picker--panel-body-content-wrapper'\n                                }, [\n                                    headerSlot\n                                        ? h('div', {\n                                            class: 'vxe-date-picker--panel-header-wrapper'\n                                        }, headerSlot({}))\n                                        : renderShortcutBtn('header'),\n                                    h('div', {\n                                        class: 'vxe-date-picker--panel-body-wrapper'\n                                    }, [\n                                        renderPickerPanel()\n                                    ]),\n                                    footerSlot\n                                        ? h('div', {\n                                            class: 'vxe-date-picker--panel-footer-wrapper'\n                                        }, footerSlot({}))\n                                        : renderShortcutBtn('footer')\n                                ]),\n                                rightSlot\n                                    ? h('div', {\n                                        class: 'vxe-date-picker--panel-right-wrapper'\n                                    }, rightSlot({}))\n                                    : renderShortcutBtn('right', true)\n                            ]),\n                            bottomSlot\n                                ? h('div', {\n                                    class: 'vxe-date-picker--panel-bottom-wrapper'\n                                }, bottomSlot({}))\n                                : renderShortcutBtn('bottom')\n                        ])\n                    ]\n                    : [])\n            ]);\n        };\n        const renderPrefixIcon = () => {\n            const { prefixIcon } = props;\n            const prefixSlot = slots.prefix;\n            return prefixSlot || prefixIcon\n                ? h('div', {\n                    class: 'vxe-date-picker--prefix',\n                    onClick: clickPrefixEvent\n                }, [\n                    h('div', {\n                        class: 'vxe-date-picker--prefix-icon'\n                    }, prefixSlot\n                        ? getSlotVNs(prefixSlot({}))\n                        : [\n                            h('i', {\n                                class: prefixIcon\n                            })\n                        ])\n                ])\n                : null;\n        };\n        const renderSuffixIcon = () => {\n            const { suffixIcon } = props;\n            const { inputValue } = reactData;\n            const suffixSlot = slots.suffix;\n            const isDisabled = computeIsDisabled.value;\n            const isClearable = computeIsClearable.value;\n            return h('div', {\n                class: ['vxe-date-picker--suffix', {\n                        'is--clear': isClearable && !isDisabled && !(inputValue === '' || XEUtils.eqNull(inputValue))\n                    }]\n            }, [\n                isClearable\n                    ? h('div', {\n                        class: 'vxe-date-picker--clear-icon',\n                        onClick: clearValueEvent\n                    }, [\n                        h('i', {\n                            class: getIcon().INPUT_CLEAR\n                        })\n                    ])\n                    : createCommentVNode(),\n                renderExtraSuffixIcon(),\n                suffixSlot || suffixIcon\n                    ? h('div', {\n                        class: 'vxe-date-picker--suffix-icon',\n                        onClick: clickSuffixEvent\n                    }, suffixSlot\n                        ? getSlotVNs(suffixSlot({}))\n                        : [\n                            h('i', {\n                                class: suffixIcon\n                            })\n                        ])\n                    : createCommentVNode()\n            ]);\n        };\n        const renderExtraSuffixIcon = () => {\n            return h('div', {\n                class: 'vxe-date-picker--control-icon',\n                onClick: datePickerOpenEvent\n            }, [\n                h('i', {\n                    class: ['vxe-date-picker--date-picker-icon', getIcon().DATE_PICKER_DATE]\n                })\n            ]);\n        };\n        const renderVN = () => {\n            const { className, type, align, name, autocomplete, autoComplete } = props;\n            const { inputValue, visiblePanel, isActivated } = reactData;\n            const vSize = computeSize.value;\n            const isDisabled = computeIsDisabled.value;\n            const formReadonly = computeFormReadonly.value;\n            if (formReadonly) {\n                return h('div', {\n                    ref: refElem,\n                    class: ['vxe-date-picker--readonly', `type--${type}`, className]\n                }, inputValue);\n            }\n            const inputReadonly = computeInputReadonly.value;\n            const inputType = computeDatePickerType.value;\n            const inpPlaceholder = computeInpPlaceholder.value;\n            const isClearable = computeIsClearable.value;\n            const prefix = renderPrefixIcon();\n            const suffix = renderSuffixIcon();\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-date-picker', `type--${type}`, className, {\n                        [`size--${vSize}`]: vSize,\n                        [`is--${align}`]: align,\n                        'is--prefix': !!prefix,\n                        'is--suffix': !!suffix,\n                        'is--visible': visiblePanel,\n                        'is--disabled': isDisabled,\n                        'is--active': isActivated,\n                        'show--clear': isClearable && !isDisabled && !(inputValue === '' || XEUtils.eqNull(inputValue))\n                    }],\n                spellcheck: false\n            }, [\n                prefix || createCommentVNode(),\n                h('div', {\n                    class: 'vxe-date-picker--wrapper'\n                }, [\n                    h('input', {\n                        ref: refInputTarget,\n                        class: 'vxe-date-picker--inner',\n                        value: inputValue,\n                        name,\n                        type: inputType,\n                        placeholder: inpPlaceholder,\n                        readonly: inputReadonly,\n                        disabled: isDisabled,\n                        autocomplete: autoComplete || autocomplete,\n                        onKeydown: keydownEvent,\n                        onKeyup: keyupEvent,\n                        onClick: clickEvent,\n                        onInput: inputEvent,\n                        onChange: changeEvent,\n                        onFocus: focusEvent,\n                        onBlur: blurEvent\n                    })\n                ]),\n                suffix || createCommentVNode(),\n                // 下拉面板\n                renderPanel()\n            ]);\n        };\n        watch(() => props.modelValue, (val) => {\n            updateModelValue(val);\n            changeValue();\n        });\n        watch(() => props.type, () => {\n            // 切换类型是重置内置变量\n            Object.assign(reactData, {\n                inputValue: '',\n                datetimePanelValue: null,\n                datePanelValue: null,\n                datePanelLabel: '',\n                datePanelType: 'day',\n                selectMonth: null,\n                currentDate: null\n            });\n            initValue();\n        });\n        watch(computeDateLabelFormat, () => {\n            const isDatePickerType = computeIsDatePickerType.value;\n            if (isDatePickerType) {\n                dateParseValue(reactData.datePanelValue);\n                reactData.inputValue = props.multiple ? computeDateMultipleLabel.value : reactData.datePanelLabel;\n            }\n        });\n        nextTick(() => {\n            globalEvents.on($xeDatePicker, 'mousewheel', handleGlobalMousewheelEvent);\n            globalEvents.on($xeDatePicker, 'mousedown', handleGlobalMousedownEvent);\n            globalEvents.on($xeDatePicker, 'keydown', handleGlobalKeydownEvent);\n            globalEvents.on($xeDatePicker, 'blur', handleGlobalBlurEvent);\n        });\n        onUnmounted(() => {\n            globalEvents.off($xeDatePicker, 'mousewheel');\n            globalEvents.off($xeDatePicker, 'mousedown');\n            globalEvents.off($xeDatePicker, 'keydown');\n            globalEvents.off($xeDatePicker, 'blur');\n        });\n        initValue();\n        $xeDatePicker.renderVN = renderVN;\n        return $xeDatePicker;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeDatePickerComponent from './src/date-picker';\nimport { dynamicApp } from '../dynamics';\nexport const VxeDatePicker = Object.assign({}, VxeDatePickerComponent, {\n    install(app) {\n        app.component(VxeDatePickerComponent.name, VxeDatePickerComponent);\n        app.component('VxeDateInput', VxeDatePickerComponent);\n    }\n});\ndynamicApp.use(VxeDatePicker);\nVxeUI.component(VxeDatePickerComponent);\nexport const DatePicker = VxeDatePicker;\nexport default VxeDatePicker;\n", "import { VxeUI } from '@vxe-ui/core';\nimport XEUtils from 'xe-utils';\nimport VxeDrawerComponent, { allActiveDrawers } from './src/drawer';\nimport { dynamicApp, dynamicStore, checkDynamic } from '../dynamics';\nfunction handleDrawer(options) {\n    // 使用动态组件渲染动态弹框\n    checkDynamic();\n    return new Promise(resolve => {\n        if (options && options.id && allActiveDrawers.some(comp => comp.props.id === options.id)) {\n            resolve('exist');\n        }\n        else {\n            const _onHide = options.onHide;\n            const drawerOpts = Object.assign(options, {\n                key: XEUtils.uniqueId(),\n                modelValue: true,\n                onHide(params) {\n                    const drawerList = dynamicStore.drawers;\n                    if (_onHide) {\n                        _onHide(params);\n                    }\n                    dynamicStore.drawers = drawerList.filter(item => item.key !== drawerOpts.key);\n                    resolve(params.type);\n                }\n            });\n            dynamicStore.drawers.push(drawerOpts);\n        }\n    });\n}\nfunction getDrawer(id) {\n    return XEUtils.find(allActiveDrawers, $drawer => $drawer.props.id === id);\n}\n/**\n * 全局关闭动态的活动窗口（只能用于关闭动态的创建的活动窗口）\n * 如果传 id 则关闭指定的窗口\n * 如果不传则关闭所有窗口\n */\nfunction closeDrawer(id) {\n    const drawers = id ? [getDrawer(id)] : allActiveDrawers;\n    const restPromises = [];\n    drawers.forEach($drawer => {\n        if ($drawer) {\n            restPromises.push($drawer.close());\n        }\n    });\n    return Promise.all(restPromises);\n}\nfunction openDrawer(options) {\n    return handleDrawer(Object.assign({}, options));\n}\nexport const DrawerController = {\n    get: getDrawer,\n    close: closeDrawer,\n    open: openDrawer\n};\nexport const VxeDrawer = Object.assign(VxeDrawerComponent, {\n    install: function (app) {\n        app.component(VxeDrawerComponent.name, VxeDrawerComponent);\n    }\n});\nVxeUI.drawer = DrawerController;\ndynamicApp.use(VxeDrawer);\nVxeUI.component(VxeDrawerComponent);\nexport const Drawer = VxeDrawer;\nexport default VxeDrawer;\n", "import { defineComponent, h, Teleport, ref, inject, reactive, nextTick, provide, watch, onMounted, onUnmounted, computed } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { useSize, getIcon, getConfig, getI18n, globalEvents, GLOBAL_EVENT_KEYS, createEvent, renderEmptyElement } from '../../ui';\nimport { getLastZIndex, nextZIndex, getFuncText } from '../../ui/src/utils';\nimport { getDomNode, toCssUnit } from '../../ui/src/dom';\nimport { getSlotVNs } from '../../ui/src/vn';\nimport VxeButtonComponent from '../../button/src/button';\nimport VxeLoadingComponent from '../../loading/index';\nexport const allActiveDrawers = [];\nexport default defineComponent({\n    name: 'VxeDrawer',\n    props: {\n        modelValue: Boolean,\n        id: String,\n        title: String,\n        loading: {\n            type: Boolean,\n            default: null\n        },\n        className: String,\n        position: {\n            type: [String, Object],\n            default: () => getConfig().drawer.position\n        },\n        lockView: {\n            type: Boolean,\n            default: () => getConfig().drawer.lockView\n        },\n        lockScroll: Boolean,\n        mask: {\n            type: Boolean,\n            default: () => getConfig().drawer.mask\n        },\n        maskClosable: {\n            type: Boolean,\n            default: () => getConfig().drawer.maskClosable\n        },\n        escClosable: {\n            type: Boolean,\n            default: () => getConfig().drawer.escClosable\n        },\n        cancelClosable: {\n            type: Boolean,\n            default: () => getConfig().drawer.cancelClosable\n        },\n        confirmClosable: {\n            type: Boolean,\n            default: () => getConfig().drawer.confirmClosable\n        },\n        showHeader: {\n            type: Boolean,\n            default: () => getConfig().drawer.showHeader\n        },\n        showFooter: {\n            type: Boolean,\n            default: () => getConfig().drawer.showFooter\n        },\n        showClose: {\n            type: Boolean,\n            default: () => getConfig().drawer.showClose\n        },\n        content: [Number, String],\n        showCancelButton: {\n            type: Boolean,\n            default: null\n        },\n        cancelButtonText: {\n            type: String,\n            default: () => getConfig().drawer.cancelButtonText\n        },\n        showConfirmButton: {\n            type: Boolean,\n            default: () => getConfig().drawer.showConfirmButton\n        },\n        confirmButtonText: {\n            type: String,\n            default: () => getConfig().drawer.confirmButtonText\n        },\n        destroyOnClose: {\n            type: Boolean,\n            default: () => getConfig().drawer.destroyOnClose\n        },\n        showTitleOverflow: {\n            type: Boolean,\n            default: () => getConfig().drawer.showTitleOverflow\n        },\n        width: [Number, String],\n        height: [Number, String],\n        resize: {\n            type: Boolean,\n            default: () => getConfig().drawer.resize\n        },\n        zIndex: Number,\n        transfer: {\n            type: Boolean,\n            default: () => getConfig().drawer.transfer\n        },\n        padding: {\n            type: Boolean,\n            default: () => getConfig().drawer.padding\n        },\n        size: {\n            type: String,\n            default: () => getConfig().drawer.size || getConfig().size\n        },\n        beforeHideMethod: {\n            type: Function,\n            default: () => getConfig().drawer.beforeHideMethod\n        },\n        slots: Object\n    },\n    emits: [\n        'update:modelValue',\n        'show',\n        'hide',\n        'before-hide',\n        'close',\n        'confirm',\n        'cancel',\n        'resize'\n    ],\n    setup(props, context) {\n        const { slots, emit } = context;\n        const xID = XEUtils.uniqueId();\n        const $xeModal = inject('$xeModal', null);\n        const $xeParentDrawer = inject('$xeDrawer', null);\n        const $xeTable = inject('$xeTable', null);\n        const $xeForm = inject('$xeForm', null);\n        const { computeSize } = useSize(props);\n        const refElem = ref();\n        const refDrawerBox = ref();\n        const refConfirmBtn = ref();\n        const refCancelBtn = ref();\n        const reactData = reactive({\n            initialized: false,\n            visible: false,\n            contentVisible: false,\n            drawerZIndex: 0,\n            resizeFlag: 1\n        });\n        const refMaps = {\n            refElem\n        };\n        const computeBtnTransfer = computed(() => {\n            const { transfer } = props;\n            if (transfer === null) {\n                const globalTransfer = getConfig().modal.transfer;\n                if (XEUtils.isBoolean(globalTransfer)) {\n                    return globalTransfer;\n                }\n                if ($xeTable || $xeModal || $xeParentDrawer || $xeForm) {\n                    return true;\n                }\n            }\n            return transfer;\n        });\n        const computeDragType = computed(() => {\n            switch (props.position) {\n                case 'top':\n                    return 'sb';\n                case 'bottom':\n                    return 'st';\n                case 'left':\n                    return 'wr';\n            }\n            return 'wl';\n        });\n        const computeMaps = {};\n        const $xeDrawer = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const getBox = () => {\n            const boxElem = refDrawerBox.value;\n            return boxElem;\n        };\n        const recalculate = () => {\n            const { width, height } = props;\n            const boxElem = getBox();\n            if (boxElem) {\n                boxElem.style.width = toCssUnit(width);\n                boxElem.style.height = toCssUnit(height);\n            }\n            return nextTick();\n        };\n        const updateZindex = () => {\n            const { zIndex } = props;\n            const { drawerZIndex } = reactData;\n            if (zIndex) {\n                reactData.drawerZIndex = zIndex;\n            }\n            else if (drawerZIndex < getLastZIndex()) {\n                reactData.drawerZIndex = nextZIndex();\n            }\n        };\n        const closeDrawer = (type) => {\n            const { beforeHideMethod } = props;\n            const { visible } = reactData;\n            const params = { type };\n            if (visible) {\n                Promise.resolve(beforeHideMethod ? beforeHideMethod(params) : null).then((rest) => {\n                    if (!XEUtils.isError(rest)) {\n                        reactData.contentVisible = false;\n                        XEUtils.remove(allActiveDrawers, item => item === $xeDrawer);\n                        dispatchEvent('before-hide', params, null);\n                        setTimeout(() => {\n                            reactData.visible = false;\n                            emit('update:modelValue', false);\n                            dispatchEvent('hide', params, null);\n                        }, 200);\n                    }\n                }).catch(e => e);\n            }\n            return nextTick();\n        };\n        const closeEvent = (evnt) => {\n            const type = 'close';\n            dispatchEvent(type, { type }, evnt);\n            closeDrawer(type);\n        };\n        const confirmEvent = (evnt) => {\n            const { confirmClosable } = props;\n            const type = 'confirm';\n            dispatchEvent(type, { type }, evnt);\n            if (confirmClosable) {\n                closeDrawer(type);\n            }\n        };\n        const cancelEvent = (evnt) => {\n            const { cancelClosable } = props;\n            const type = 'cancel';\n            dispatchEvent(type, { type }, evnt);\n            if (cancelClosable) {\n                closeDrawer(type);\n            }\n        };\n        const openDrawer = () => {\n            const { showFooter } = props;\n            const { initialized, visible } = reactData;\n            if (!initialized) {\n                reactData.initialized = true;\n            }\n            if (!visible) {\n                reactData.visible = true;\n                reactData.contentVisible = false;\n                updateZindex();\n                allActiveDrawers.push($xeDrawer);\n                setTimeout(() => {\n                    recalculate();\n                    reactData.contentVisible = true;\n                    nextTick(() => {\n                        if (showFooter) {\n                            const confirmBtn = refConfirmBtn.value;\n                            const cancelBtn = refCancelBtn.value;\n                            const operBtn = confirmBtn || cancelBtn;\n                            if (operBtn) {\n                                operBtn.focus();\n                            }\n                        }\n                        const type = '';\n                        const params = { type };\n                        emit('update:modelValue', true);\n                        dispatchEvent('show', params, null);\n                    });\n                }, 10);\n            }\n            return nextTick();\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $drawer: $xeDrawer }, params));\n        };\n        const drawerMethods = {\n            dispatchEvent,\n            open: openDrawer,\n            close() {\n                return closeDrawer('close');\n            },\n            getBox\n        };\n        const selfClickEvent = (evnt) => {\n            const el = refElem.value;\n            if (props.maskClosable && evnt.target === el) {\n                const type = 'mask';\n                closeDrawer(type);\n            }\n        };\n        const handleGlobalKeydownEvent = (evnt) => {\n            const isEsc = globalEvents.hasKey(evnt, GLOBAL_EVENT_KEYS.ESCAPE);\n            if (isEsc) {\n                const lastDrawer = XEUtils.max(allActiveDrawers, (item) => item.reactData.drawerZIndex);\n                // 多个时，只关掉最上层的窗口\n                if (lastDrawer) {\n                    setTimeout(() => {\n                        if (lastDrawer === $xeDrawer && lastDrawer.props.escClosable) {\n                            const type = 'exit';\n                            dispatchEvent('close', { type }, evnt);\n                            closeDrawer(type);\n                        }\n                    }, 10);\n                }\n            }\n        };\n        const boxMousedownEvent = () => {\n            const { drawerZIndex } = reactData;\n            if (allActiveDrawers.some(comp => comp.reactData.visible && comp.reactData.drawerZIndex > drawerZIndex)) {\n                updateZindex();\n            }\n        };\n        const dragEvent = (evnt) => {\n            evnt.preventDefault();\n            const { visibleHeight, visibleWidth } = getDomNode();\n            const marginSize = 0;\n            const targetElem = evnt.target;\n            const type = targetElem.getAttribute('type');\n            const minWidth = 0;\n            const minHeight = 0;\n            const maxWidth = visibleWidth;\n            const maxHeight = visibleHeight;\n            const boxElem = getBox();\n            const clientWidth = boxElem.clientWidth;\n            const clientHeight = boxElem.clientHeight;\n            const disX = evnt.clientX;\n            const disY = evnt.clientY;\n            const offsetTop = boxElem.offsetTop;\n            const offsetLeft = boxElem.offsetLeft;\n            const params = { type: 'resize' };\n            document.onmousemove = evnt => {\n                evnt.preventDefault();\n                let dragLeft;\n                let dragTop;\n                let width;\n                let height;\n                switch (type) {\n                    case 'wl':\n                        dragLeft = disX - evnt.clientX;\n                        width = dragLeft + clientWidth;\n                        if (offsetLeft - dragLeft > marginSize) {\n                            if (width > minWidth) {\n                                boxElem.style.width = `${width < maxWidth ? width : maxWidth}px`;\n                            }\n                        }\n                        break;\n                    case 'st':\n                        dragTop = disY - evnt.clientY;\n                        height = clientHeight + dragTop;\n                        if (offsetTop - dragTop > marginSize) {\n                            if (height > minHeight) {\n                                boxElem.style.height = `${height < maxHeight ? height : maxHeight}px`;\n                            }\n                        }\n                        break;\n                    case 'wr':\n                        dragLeft = evnt.clientX - disX;\n                        width = dragLeft + clientWidth;\n                        if (offsetLeft + width + marginSize < visibleWidth) {\n                            if (width > minWidth) {\n                                boxElem.style.width = `${width < maxWidth ? width : maxWidth}px`;\n                            }\n                        }\n                        break;\n                    case 'sb':\n                        dragTop = evnt.clientY - disY;\n                        height = dragTop + clientHeight;\n                        if (offsetTop + height + marginSize < visibleHeight) {\n                            if (height > minHeight) {\n                                boxElem.style.height = `${height < maxHeight ? height : maxHeight}px`;\n                            }\n                        }\n                        break;\n                }\n                boxElem.className = boxElem.className.replace(/\\s?is--drag/, '') + ' is--drag';\n                dispatchEvent('resize', params, evnt);\n                reactData.resizeFlag++;\n            };\n            document.onmouseup = () => {\n                document.onmousemove = null;\n                document.onmouseup = null;\n                reactData.resizeFlag++;\n                setTimeout(() => {\n                    boxElem.className = boxElem.className.replace(/\\s?is--drag/, '');\n                }, 50);\n            };\n        };\n        const formDesignPrivateMethods = {};\n        Object.assign($xeDrawer, drawerMethods, formDesignPrivateMethods);\n        const renderTitles = () => {\n            const { slots: propSlots = {}, showClose, title } = props;\n            const titleSlot = slots.title || propSlots.title;\n            const cornerSlot = slots.corner || propSlots.corner;\n            return [\n                h('div', {\n                    class: 'vxe-drawer--header-title'\n                }, titleSlot ? getSlotVNs(titleSlot({ $drawer: $xeDrawer })) : (title ? getFuncText(title) : getI18n('vxe.alert.title'))),\n                h('div', {\n                    class: 'vxe-drawer--header-right'\n                }, [\n                    cornerSlot\n                        ? h('div', {\n                            class: 'vxe-drawer--corner-wrapper'\n                        }, getSlotVNs(cornerSlot({ $drawer: $xeDrawer })))\n                        : renderEmptyElement($xeDrawer),\n                    showClose\n                        ? h('div', {\n                            class: ['vxe-drawer--close-btn', 'trigger--btn'],\n                            title: getI18n('vxe.drawer.close'),\n                            onClick: closeEvent\n                        }, [\n                            h('i', {\n                                class: getIcon().DRAWER_CLOSE\n                            })\n                        ])\n                        : renderEmptyElement($xeDrawer)\n                ])\n            ];\n        };\n        const renderHeader = () => {\n            const { slots: propSlots = {}, showTitleOverflow } = props;\n            const headerSlot = slots.header || propSlots.header;\n            if (props.showHeader) {\n                return h('div', {\n                    class: ['vxe-drawer--header', {\n                            'is--ellipsis': showTitleOverflow\n                        }]\n                }, headerSlot ? getSlotVNs(headerSlot({ $drawer: $xeDrawer })) : renderTitles());\n            }\n            return renderEmptyElement($xeDrawer);\n        };\n        const renderBody = () => {\n            const { slots: propSlots = {}, content } = props;\n            const defaultSlot = slots.default || propSlots.default;\n            const leftSlot = slots.left || propSlots.left;\n            const rightSlot = slots.right || propSlots.right;\n            return h('div', {\n                class: 'vxe-drawer--body'\n            }, [\n                leftSlot\n                    ? h('div', {\n                        class: 'vxe-drawer--body-left'\n                    }, getSlotVNs(leftSlot({ $drawer: $xeDrawer })))\n                    : renderEmptyElement($xeDrawer),\n                h('div', {\n                    class: 'vxe-drawer--body-default'\n                }, [\n                    h('div', {\n                        class: 'vxe-drawer--content'\n                    }, defaultSlot ? getSlotVNs(defaultSlot({ $drawer: $xeDrawer })) : getFuncText(content))\n                ]),\n                rightSlot\n                    ? h('div', {\n                        class: 'vxe-drawer--body-right'\n                    }, getSlotVNs(rightSlot({ $drawer: $xeDrawer })))\n                    : renderEmptyElement($xeDrawer),\n                h(VxeLoadingComponent, {\n                    class: 'vxe-drawer--loading',\n                    modelValue: props.loading\n                })\n            ]);\n        };\n        const renderDefaultFooter = () => {\n            const { slots: propSlots = {}, showCancelButton, showConfirmButton, loading } = props;\n            const lfSlot = slots.leftfoot || propSlots.leftfoot;\n            const rfSlot = slots.rightfoot || propSlots.rightfoot;\n            const btnVNs = [];\n            if (showCancelButton) {\n                btnVNs.push(h(VxeButtonComponent, {\n                    key: 1,\n                    ref: refCancelBtn,\n                    content: props.cancelButtonText || getI18n('vxe.button.cancel'),\n                    onClick: cancelEvent\n                }));\n            }\n            if (showConfirmButton) {\n                btnVNs.push(h(VxeButtonComponent, {\n                    key: 2,\n                    ref: refConfirmBtn,\n                    loading: loading,\n                    status: 'primary',\n                    content: props.confirmButtonText || getI18n('vxe.button.confirm'),\n                    onClick: confirmEvent\n                }));\n            }\n            return h('div', {\n                class: 'vxe-drawer--footer-wrapper'\n            }, [\n                h('div', {\n                    class: 'vxe-drawer--footer-left'\n                }, lfSlot ? getSlotVNs(lfSlot({ $drawer: $xeDrawer })) : []),\n                h('div', {\n                    class: 'vxe-drawer--footer-right'\n                }, rfSlot ? getSlotVNs(rfSlot({ $drawer: $xeDrawer })) : btnVNs)\n            ]);\n        };\n        const renderFooter = () => {\n            const { slots: propSlots = {} } = props;\n            const footerSlot = slots.footer || propSlots.footer;\n            if (props.showFooter) {\n                return h('div', {\n                    class: 'vxe-drawer--footer'\n                }, footerSlot ? getSlotVNs(footerSlot({ $drawer: $xeDrawer })) : [renderDefaultFooter()]);\n            }\n            return renderEmptyElement($xeDrawer);\n        };\n        const renderVN = () => {\n            const { slots: propSlots = {}, className, position, loading, lockScroll, padding, lockView, mask, resize, destroyOnClose } = props;\n            const { initialized, contentVisible, visible } = reactData;\n            const asideSlot = slots.aside || propSlots.aside;\n            const vSize = computeSize.value;\n            const dragType = computeDragType.value;\n            const btnTransfer = computeBtnTransfer.value;\n            return h(Teleport, {\n                to: 'body',\n                disabled: btnTransfer ? !initialized : true\n            }, [\n                h('div', {\n                    ref: refElem,\n                    class: ['vxe-drawer--wrapper', `pos--${position}`, className || '', {\n                            [`size--${vSize}`]: vSize,\n                            'is--padding': padding,\n                            'lock--scroll': lockScroll,\n                            'lock--view': lockView,\n                            'is--resize': resize,\n                            'is--mask': mask,\n                            'is--visible': contentVisible,\n                            'is--active': visible,\n                            'is--loading': loading\n                        }],\n                    style: {\n                        zIndex: reactData.drawerZIndex\n                    },\n                    onClick: selfClickEvent\n                }, [\n                    h('div', {\n                        ref: refDrawerBox,\n                        class: 'vxe-drawer--box',\n                        onMousedown: boxMousedownEvent\n                    }, [\n                        asideSlot\n                            ? h('div', {\n                                class: 'vxe-drawer--aside'\n                            }, getSlotVNs(asideSlot({ $drawer: $xeDrawer })))\n                            : renderEmptyElement($xeDrawer),\n                        h('div', {\n                            class: 'vxe-drawer--container'\n                        }, !reactData.initialized || (destroyOnClose && !reactData.visible)\n                            ? []\n                            : [\n                                renderHeader(),\n                                renderBody(),\n                                renderFooter(),\n                                resize\n                                    ? h('span', {\n                                        class: 'vxe-drawer--resize'\n                                    }, [\n                                        h('span', {\n                                            class: `${dragType}-resize`,\n                                            type: dragType,\n                                            onMousedown: dragEvent\n                                        })\n                                    ])\n                                    : renderEmptyElement($xeDrawer)\n                            ])\n                    ])\n                ])\n            ]);\n        };\n        watch(() => props.width, recalculate);\n        watch(() => props.height, recalculate);\n        watch(() => props.modelValue, (value) => {\n            if (value) {\n                openDrawer();\n            }\n            else {\n                closeDrawer('model');\n            }\n        });\n        onMounted(() => {\n            nextTick(() => {\n                if (props.modelValue) {\n                    openDrawer();\n                }\n                recalculate();\n            });\n            if (props.escClosable) {\n                globalEvents.on($xeDrawer, 'keydown', handleGlobalKeydownEvent);\n            }\n        });\n        onUnmounted(() => {\n            globalEvents.off($xeDrawer, 'keydown');\n        });\n        provide('$xeDrawer', $xeDrawer);\n        $xeDrawer.renderVN = renderVN;\n        return $xeDrawer;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { defineComponent, ref, h, reactive } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getI18n, getIcon, createEvent } from '../../ui';\nexport default defineComponent({\n    name: 'VxeEmpty',\n    props: {\n        imageUrl: String,\n        imageStyle: Object,\n        icon: String,\n        status: String,\n        content: [String, Number]\n    },\n    emits: [],\n    setup(props, context) {\n        const { emit } = context;\n        const xID = XEUtils.uniqueId();\n        const refElem = ref();\n        const reactData = reactive({});\n        const refMaps = {\n            refElem\n        };\n        const computeMaps = {};\n        const $xeEmpty = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $empty: $xeEmpty }, params));\n        };\n        const collapsePaneMethods = {\n            dispatchEvent\n        };\n        const collapsePanePrivateMethods = {};\n        Object.assign($xeEmpty, collapsePaneMethods, collapsePanePrivateMethods);\n        const renderVN = () => {\n            const { imageUrl, imageStyle, icon, status, content } = props;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-empty', {\n                        [`theme--${status}`]: status\n                    }]\n            }, [\n                h('div', {\n                    class: 'vxe-empty--inner'\n                }, [\n                    imageUrl\n                        ? h('div', {\n                            class: 'vxe-empty--img-wrapper'\n                        }, [\n                            h('img', {\n                                src: imageUrl,\n                                style: imageStyle\n                            })\n                        ])\n                        : h('div', {\n                            class: 'vxe-empty--icon-wrapper'\n                        }, [\n                            h('i', {\n                                class: icon || getIcon().EMPTY_DEFAULT\n                            })\n                        ]),\n                    h('div', {\n                        class: 'vxe-empty--content-wrapper'\n                    }, `${content || getI18n('vxe.empty.defText')}`)\n                ])\n            ]);\n        };\n        $xeEmpty.renderVN = renderVN;\n        return $xeEmpty;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeEmptyComponent from './src/empty';\nimport { dynamicApp } from '../dynamics';\nexport const VxeEmpty = Object.assign({}, VxeEmptyComponent, {\n    install(app) {\n        app.component(VxeEmptyComponent.name, VxeEmptyComponent);\n    }\n});\ndynamicApp.use(VxeEmpty);\nVxeUI.component(VxeEmptyComponent);\nexport const Empty = VxeEmpty;\nexport default VxeEmpty;\n", "import { defineComponent, h, ref, provide, computed, inject, reactive, watch, nextTick, onMounted } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getConfig, validators, renderer, createEvent, useSize } from '../../ui';\nimport { getFuncText, isEnableConf, eqEmptyValue } from '../../ui/src/utils';\nimport { scrollToView } from '../../ui/src/dom';\nimport { createItem, handleFieldOrItem, isHiddenItem, isActiveItem } from './util';\nimport VxeTooltipComponent from '../../tooltip/src/tooltip';\nimport VxeFormConfigItem from './form-config-item';\nimport VxeLoadingComponent from '../../loading/src/loading';\nimport { getSlotVNs } from '../../ui/src/vn';\nimport { warnLog, errLog } from '../../ui/src/log';\nclass Rule {\n    constructor(rule) {\n        Object.assign(this, {\n            $options: rule,\n            required: rule.required,\n            min: rule.min,\n            max: rule.min,\n            type: rule.type,\n            pattern: rule.pattern,\n            validator: rule.validator,\n            trigger: rule.trigger,\n            maxWidth: rule.maxWidth\n        });\n    }\n    get content() {\n        return getFuncText(this.$options.content || this.$options.message);\n    }\n    get message() {\n        return this.content;\n    }\n}\nconst validErrorRuleValue = (rule, val) => {\n    const { type, min, max, pattern } = rule;\n    const isNumType = type === 'number';\n    const numVal = isNumType ? XEUtils.toNumber(val) : XEUtils.getSize(val);\n    // 判断数值\n    if (isNumType && isNaN(val)) {\n        return true;\n    }\n    // 如果存在 min，判断最小值\n    if (!XEUtils.eqNull(min) && numVal < XEUtils.toNumber(min)) {\n        return true;\n    }\n    // 如果存在 max，判断最大值\n    if (!XEUtils.eqNull(max) && numVal > XEUtils.toNumber(max)) {\n        return true;\n    }\n    // 如果存在 pattern，正则校验\n    if (pattern && !(XEUtils.isRegExp(pattern) ? pattern : new RegExp(pattern)).test(val)) {\n        return true;\n    }\n    return false;\n};\nexport default defineComponent({\n    name: 'VxeForm',\n    props: {\n        collapseStatus: {\n            type: Boolean,\n            default: true\n        },\n        loading: Boolean,\n        data: Object,\n        size: {\n            type: String,\n            default: () => getConfig().form.size || getConfig().size\n        },\n        span: {\n            type: [String, Number],\n            default: () => getConfig().form.span\n        },\n        align: {\n            type: String,\n            default: () => getConfig().form.align\n        },\n        verticalAlign: {\n            type: String,\n            default: () => getConfig().form.verticalAlign\n        },\n        border: {\n            type: Boolean,\n            default: () => getConfig().form.border\n        },\n        titleBackground: {\n            type: Boolean,\n            default: () => getConfig().form.titleBackground\n        },\n        titleBold: {\n            type: Boolean,\n            default: () => getConfig().form.titleBold\n        },\n        titleAlign: {\n            type: String,\n            default: () => getConfig().form.titleAlign\n        },\n        titleWidth: {\n            type: [String, Number],\n            default: () => getConfig().form.titleWidth\n        },\n        titleColon: {\n            type: Boolean,\n            default: () => getConfig().form.titleColon\n        },\n        titleAsterisk: {\n            type: Boolean,\n            default: () => getConfig().form.titleAsterisk\n        },\n        titleOverflow: {\n            type: [Boolean, String],\n            default: () => getConfig().form.titleOverflow\n        },\n        vertical: {\n            type: Boolean,\n            default: () => getConfig().form.vertical\n        },\n        padding: {\n            type: Boolean,\n            default: () => getConfig().form.padding\n        },\n        className: [String, Function],\n        readonly: Boolean,\n        disabled: Boolean,\n        items: Array,\n        rules: Object,\n        preventSubmit: {\n            type: Boolean,\n            default: () => getConfig().form.preventSubmit\n        },\n        validConfig: Object,\n        tooltipConfig: Object,\n        collapseConfig: Object,\n        customLayout: {\n            type: Boolean,\n            default: () => getConfig().form.customLayout\n        }\n    },\n    emits: [\n        'update:collapseStatus',\n        'collapse',\n        'toggle-collapse',\n        'submit',\n        'submit-invalid',\n        'reset'\n    ],\n    setup(props, context) {\n        const { slots, emit } = context;\n        const $xeGrid = inject('$xeGrid', null);\n        const xID = XEUtils.uniqueId();\n        const { computeSize } = useSize(props);\n        const reactData = reactive({\n            collapseAll: props.collapseStatus,\n            staticItems: [],\n            formItems: []\n        });\n        const internalData = reactive({\n            meTimeout: undefined,\n            stTimeout: undefined,\n            tooltipStore: {\n                item: null,\n                visible: false\n            }\n        });\n        const refElem = ref();\n        const refTooltip = ref();\n        let formMethods = {};\n        const computeValidOpts = computed(() => {\n            return Object.assign({}, getConfig().form.validConfig, props.validConfig);\n        });\n        const computeTooltipOpts = computed(() => {\n            return Object.assign({}, getConfig().tooltip, getConfig().form.tooltipConfig, props.tooltipConfig);\n        });\n        const computeCollapseOpts = computed(() => {\n            return Object.assign({}, getConfig().form.collapseConfig, props.collapseConfig);\n        });\n        const refMaps = {\n            refElem\n        };\n        const computeMaps = {\n            computeSize,\n            computeValidOpts,\n            computeTooltipOpts,\n            computeCollapseOpts\n        };\n        const $xeForm = {\n            xID,\n            props,\n            context,\n            reactData,\n            xeGrid: $xeGrid,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const callSlot = (slotFunc, params) => {\n            if (slotFunc) {\n                if (XEUtils.isString(slotFunc)) {\n                    slotFunc = slots[slotFunc] || null;\n                }\n                if (XEUtils.isFunction(slotFunc)) {\n                    return getSlotVNs(slotFunc(params));\n                }\n            }\n            return [];\n        };\n        const loadItem = (list) => {\n            if (list.length) {\n                list.forEach((item) => {\n                    if (item.slots) {\n                        XEUtils.each(item.slots, (func) => {\n                            if (!XEUtils.isFunction(func)) {\n                                if (!slots[func]) {\n                                    errLog('vxe.error.notSlot', [func]);\n                                }\n                            }\n                        });\n                    }\n                });\n            }\n            reactData.staticItems = XEUtils.mapTree(list, item => createItem($xeForm, item), { children: 'children' });\n            return nextTick();\n        };\n        const getItems = () => {\n            const itemList = [];\n            XEUtils.eachTree(reactData.formItems, item => {\n                itemList.push(item);\n            }, { children: 'children' });\n            return itemList;\n        };\n        const getItemByField = (field) => {\n            const rest = XEUtils.findTree(reactData.formItems, item => item.field === field, { children: 'children' });\n            return rest ? rest.item : null;\n        };\n        const getCollapseStatus = () => {\n            return reactData.collapseAll;\n        };\n        const toggleCollapse = () => {\n            const status = !getCollapseStatus();\n            reactData.collapseAll = status;\n            emit('update:collapseStatus', status);\n            return nextTick();\n        };\n        const toggleCollapseEvent = (evnt) => {\n            toggleCollapse();\n            const status = getCollapseStatus();\n            formMethods.dispatchEvent('toggle-collapse', { status, collapse: status, data: props.data }, evnt);\n            formMethods.dispatchEvent('collapse', { status, collapse: status, data: props.data }, evnt);\n            nextTick(() => {\n                if ($xeGrid) {\n                    $xeGrid.recalculate();\n                }\n            });\n        };\n        const clearValidate = (fieldOrItem) => {\n            if (fieldOrItem) {\n                let fields = fieldOrItem;\n                if (!XEUtils.isArray(fieldOrItem)) {\n                    fields = [fieldOrItem];\n                }\n                fields.forEach((field) => {\n                    if (field) {\n                        const item = handleFieldOrItem($xeForm, field);\n                        if (item) {\n                            item.showError = false;\n                        }\n                    }\n                });\n            }\n            else {\n                getItems().forEach((item) => {\n                    item.showError = false;\n                });\n            }\n            return nextTick();\n        };\n        const getResetValue = (item, data) => {\n            const { field, resetValue } = item;\n            const itemValue = XEUtils.get(data, field);\n            if (XEUtils.isFunction(resetValue)) {\n                return resetValue({ field, item, data, $form: $xeForm, $grid: $xeGrid });\n            }\n            else if (resetValue === null) {\n                // 默认\n                if (XEUtils.isArray(itemValue)) {\n                    return [];\n                }\n            }\n            return resetValue;\n        };\n        const reset = () => {\n            const { data } = props;\n            const itemList = getItems();\n            if (data) {\n                itemList.forEach((item) => {\n                    const { field, itemRender } = item;\n                    if (isEnableConf(itemRender)) {\n                        const compConf = renderer.get(itemRender.name);\n                        const fiResetMethod = compConf ? (compConf.formItemResetMethod || compConf.itemResetMethod) : null;\n                        if (compConf && fiResetMethod) {\n                            fiResetMethod({ data, field, property: field, item, $form: $xeForm, $grid: $xeGrid });\n                        }\n                        else if (field) {\n                            XEUtils.set(data, field, getResetValue(item, data));\n                        }\n                    }\n                });\n            }\n            return clearValidate();\n        };\n        const resetEvent = (evnt) => {\n            evnt.preventDefault();\n            reset();\n            formMethods.dispatchEvent('reset', { data: props.data }, evnt);\n        };\n        const handleFocus = (fields) => {\n            const el = refElem.value;\n            if (el) {\n                for (let i = 0; i < fields.length; i++) {\n                    const field = fields[i];\n                    const item = getItemByField(field);\n                    if (item && isEnableConf(item.itemRender)) {\n                        const { itemRender } = item;\n                        const compConf = renderer.get(itemRender.name);\n                        // 定位到第一个\n                        if (!i) {\n                            scrollToView(el.querySelector(`.${item.id}`));\n                        }\n                        let inputElem = null;\n                        const autoFocus = itemRender.autoFocus || itemRender.autofocus || (compConf ? compConf.formItemAutoFocus : null);\n                        // 如果指定了聚焦 class\n                        if (XEUtils.isFunction(autoFocus)) {\n                            inputElem = autoFocus({ $form: $xeForm, $grid: $xeGrid, item, data: props.data, field });\n                        }\n                        else {\n                            if (autoFocus === true) {\n                                // 自动匹配模式，会自动匹配第一个可输入元素\n                                inputElem = el.querySelector(`.${item.id} input,textarea`);\n                            }\n                            else if (autoFocus) {\n                                inputElem = el.querySelector(`.${item.id} ${autoFocus}`);\n                            }\n                        }\n                        if (inputElem) {\n                            inputElem.focus();\n                            break;\n                        }\n                    }\n                }\n            }\n        };\n        /**\n         * 校验数据\n         * 按表格行、列顺序依次校验（同步或异步）\n         * 校验规则根据索引顺序依次校验，如果是异步则会等待校验完成才会继续校验下一列\n         * 如果校验失败则，触发回调或者 Promise<(ErrMap 校验不通过列的信息)>\n         * 如果是传回调方式这返回一个 (ErrMap 校验不通过列的信息)\n         *\n         * rule 配置：\n         *  required=Boolean 是否必填\n         *  min=Number 最小长度\n         *  max=Number 最大长度\n         *  validator=Function({ itemValue, rule, rules, data, property }) 自定义校验，接收一个 Promise\n         *  trigger=change 触发方式\n         */\n        const validItemRules = (validType, fields, val) => {\n            const { data, rules: formRules } = props;\n            const errorMaps = {};\n            if (!XEUtils.isArray(fields)) {\n                fields = [fields];\n            }\n            return Promise.all(fields.map((property) => {\n                const errorRules = [];\n                const syncVailds = [];\n                if (property && formRules) {\n                    const rules = XEUtils.get(formRules, property);\n                    if (rules) {\n                        const itemValue = XEUtils.isUndefined(val) ? XEUtils.get(data, property) : val;\n                        rules.forEach((rule) => {\n                            const { type, trigger, required, validator } = rule;\n                            if (validType === 'all' || !trigger || validType === trigger) {\n                                if (validator) {\n                                    const validParams = {\n                                        itemValue,\n                                        rule,\n                                        rules,\n                                        data,\n                                        field: property,\n                                        property,\n                                        $form: $xeForm\n                                    };\n                                    let customValid;\n                                    if (XEUtils.isString(validator)) {\n                                        const gvItem = validators.get(validator);\n                                        if (gvItem) {\n                                            const validatorMethod = gvItem.formItemValidatorMethod || gvItem.itemValidatorMethod;\n                                            if (validatorMethod) {\n                                                customValid = validatorMethod(validParams);\n                                            }\n                                            else {\n                                                if (process.env.NODE_ENV === 'development') {\n                                                    warnLog('vxe.error.notValidators', [validator]);\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (process.env.NODE_ENV === 'development') {\n                                                errLog('vxe.error.notValidators', [validator]);\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        customValid = validator(validParams);\n                                    }\n                                    if (customValid) {\n                                        if (XEUtils.isError(customValid)) {\n                                            errorRules.push(new Rule({ type: 'custom', trigger, content: customValid.message, rule: new Rule(rule) }));\n                                        }\n                                        else if (customValid.catch) {\n                                            // 如果为异步校验（注：异步校验是并发无序的）\n                                            syncVailds.push(customValid.catch((e) => {\n                                                errorRules.push(new Rule({ type: 'custom', trigger, content: e ? e.message : (rule.content || rule.message), rule: new Rule(rule) }));\n                                            }));\n                                        }\n                                    }\n                                }\n                                else {\n                                    const isArrType = type === 'array';\n                                    const isArrVal = XEUtils.isArray(itemValue);\n                                    let hasEmpty = true;\n                                    if (isArrType || isArrVal) {\n                                        hasEmpty = !isArrVal || !itemValue.length;\n                                    }\n                                    else if (XEUtils.isString(itemValue)) {\n                                        hasEmpty = eqEmptyValue(itemValue.trim());\n                                    }\n                                    else {\n                                        hasEmpty = eqEmptyValue(itemValue);\n                                    }\n                                    if (required ? (hasEmpty || validErrorRuleValue(rule, itemValue)) : (!hasEmpty && validErrorRuleValue(rule, itemValue))) {\n                                        errorRules.push(new Rule(rule));\n                                    }\n                                }\n                            }\n                        });\n                    }\n                }\n                return Promise.all(syncVailds).then(() => {\n                    if (errorRules.length) {\n                        errorMaps[property] = errorRules.map(rule => {\n                            return {\n                                $form: $xeForm,\n                                rule,\n                                data,\n                                field: property,\n                                property\n                            };\n                        });\n                    }\n                });\n            })).then(() => {\n                if (!XEUtils.isEmpty(errorMaps)) {\n                    return Promise.reject(errorMaps);\n                }\n            });\n        };\n        const beginValidate = (itemList, type, callback) => {\n            const { data, rules: formRules } = props;\n            const validOpts = computeValidOpts.value;\n            const validRest = {};\n            const validFields = [];\n            const itemValids = [];\n            clearTimeout(internalData.meTimeout);\n            if (data && formRules) {\n                itemList.forEach((item) => {\n                    const { field } = item;\n                    if (field && !isHiddenItem($xeForm, item) && isActiveItem($xeForm, item)) {\n                        itemValids.push(validItemRules(type || 'all', field).then(() => {\n                            item.errRule = null;\n                        }).catch((errorMaps) => {\n                            const rest = errorMaps[field];\n                            if (!validRest[field]) {\n                                validRest[field] = [];\n                            }\n                            validRest[field].push(rest);\n                            validFields.push(field);\n                            item.errRule = rest[0].rule;\n                            return Promise.reject(rest);\n                        }));\n                    }\n                });\n                return Promise.all(itemValids).then(() => {\n                    if (callback) {\n                        callback();\n                    }\n                }).catch(() => {\n                    return new Promise((resolve) => {\n                        internalData.meTimeout = setTimeout(() => {\n                            itemList.forEach((item) => {\n                                if (item.errRule) {\n                                    item.showError = true;\n                                }\n                            });\n                        }, 20);\n                        if (validOpts.autoPos !== false) {\n                            nextTick(() => {\n                                handleFocus(validFields);\n                            });\n                        }\n                        if (callback) {\n                            callback(validRest);\n                            resolve();\n                        }\n                        else {\n                            resolve(validRest);\n                        }\n                    });\n                });\n            }\n            if (callback) {\n                callback();\n            }\n            return Promise.resolve();\n        };\n        const validate = (callback) => {\n            const { readonly } = props;\n            clearValidate();\n            if (readonly) {\n                return nextTick();\n            }\n            return beginValidate(getItems(), '', callback);\n        };\n        const validateField = (fieldOrItem, callback) => {\n            const { readonly } = props;\n            if (readonly) {\n                return nextTick();\n            }\n            let fields = [];\n            if (fieldOrItem) {\n                if (XEUtils.isArray(fieldOrItem)) {\n                    fields = fieldOrItem;\n                }\n                else {\n                    fields = [fieldOrItem];\n                }\n            }\n            return beginValidate(fields.map(field => handleFieldOrItem($xeForm, field)), '', callback);\n        };\n        const submitEvent = (evnt) => {\n            const { readonly } = props;\n            evnt.preventDefault();\n            if (!props.preventSubmit) {\n                clearValidate();\n                if (readonly) {\n                    formMethods.dispatchEvent('submit', { data: props.data }, evnt);\n                    return;\n                }\n                beginValidate(getItems()).then((errMap) => {\n                    if (errMap) {\n                        formMethods.dispatchEvent('submit-invalid', { data: props.data, errMap }, evnt);\n                    }\n                    else {\n                        formMethods.dispatchEvent('submit', { data: props.data }, evnt);\n                    }\n                });\n            }\n        };\n        const closeTooltip = () => {\n            const { tooltipStore } = internalData;\n            const $tooltip = refTooltip.value;\n            if (tooltipStore.visible) {\n                Object.assign(tooltipStore, {\n                    item: null,\n                    visible: false\n                });\n                if ($tooltip) {\n                    $tooltip.close();\n                }\n            }\n            return nextTick();\n        };\n        const triggerTitleTipEvent = (evnt, params) => {\n            const { item } = params;\n            const { tooltipStore } = internalData;\n            const $tooltip = refTooltip.value;\n            const overflowElem = evnt.currentTarget.children[0];\n            const content = (overflowElem.textContent || '').trim();\n            const isCellOverflow = overflowElem.scrollWidth > overflowElem.clientWidth;\n            clearTimeout(internalData.stTimeout);\n            if (tooltipStore.item !== item) {\n                closeTooltip();\n            }\n            if (content && isCellOverflow) {\n                Object.assign(tooltipStore, {\n                    item,\n                    visible: true\n                });\n                if ($tooltip) {\n                    $tooltip.open(overflowElem, content);\n                }\n            }\n        };\n        const handleTitleTipLeaveEvent = () => {\n            const tooltipOpts = computeTooltipOpts.value;\n            let $tooltip = refTooltip.value;\n            if ($tooltip) {\n                $tooltip.setActived(false);\n            }\n            if (tooltipOpts.enterable) {\n                internalData.stTimeout = setTimeout(() => {\n                    $tooltip = refTooltip.value;\n                    if ($tooltip && !$tooltip.isActived()) {\n                        closeTooltip();\n                    }\n                }, tooltipOpts.leaveDelay);\n            }\n            else {\n                closeTooltip();\n            }\n        };\n        const triggerItemEvent = (evnt, field, itemValue) => {\n            if (field) {\n                return validItemRules(evnt ? (['blur'].includes(evnt.type) ? 'blur' : 'change') : 'all', field, itemValue)\n                    .then(() => {\n                    clearValidate(field);\n                })\n                    .catch((errorMaps) => {\n                    const rest = errorMaps[field];\n                    const item = getItemByField(field);\n                    if (rest && item) {\n                        item.showError = true;\n                        item.errRule = rest[0].rule;\n                    }\n                });\n            }\n            return nextTick();\n        };\n        /**\n         * 更新项状态\n         * 如果组件值 v-model 发生 change 时，调用改函数用于更新某一项编辑状态\n         * 如果单元格配置了校验规则，则会进行校验\n         */\n        const updateStatus = (scope, itemValue) => {\n            const { field } = scope;\n            return triggerItemEvent(new Event('change'), field, itemValue);\n        };\n        formMethods = {\n            dispatchEvent(type, params, evnt) {\n                emit(type, createEvent(evnt, { $form: $xeForm, $grid: $xeGrid }, params));\n            },\n            reset,\n            validate,\n            validateField,\n            clearValidate,\n            updateStatus,\n            toggleCollapse,\n            getItems,\n            getItemByField,\n            closeTooltip\n        };\n        const formPrivateMethods = {\n            callSlot,\n            triggerItemEvent,\n            toggleCollapseEvent,\n            triggerTitleTipEvent,\n            handleTitleTipLeaveEvent\n        };\n        Object.assign($xeForm, formMethods, formPrivateMethods);\n        const renderVN = () => {\n            const { loading, border, className, data, customLayout } = props;\n            const { formItems } = reactData;\n            // const formItems: any[] = []\n            const vSize = computeSize.value;\n            const tooltipOpts = computeTooltipOpts.value;\n            const defaultSlot = slots.default;\n            return h('form', {\n                ref: refElem,\n                class: ['vxe-form', className ? (XEUtils.isFunction(className) ? className({ items: formItems, data, $form: $xeForm }) : className) : '', {\n                        [`size--${vSize}`]: vSize,\n                        'is--border': border,\n                        'custom--layout': customLayout,\n                        'is--loading': loading\n                    }],\n                onSubmit: submitEvent,\n                onReset: resetEvent\n            }, [\n                h('div', {\n                    class: 'vxe-form--wrapper vxe-form--item-row'\n                }, customLayout\n                    ? (defaultSlot ? defaultSlot({}) : [])\n                    : formItems.map((item, index) => {\n                        return h(VxeFormConfigItem, {\n                            key: index,\n                            itemConfig: item\n                        });\n                    })),\n                h('div', {\n                    class: 'vxe-form-slots',\n                    ref: 'hideItem'\n                }, customLayout ? [] : (defaultSlot ? defaultSlot({}) : [])),\n                /**\n                 * 加载中\n                 */\n                h(VxeLoadingComponent, {\n                    class: 'vxe-form--loading',\n                    modelValue: loading\n                }),\n                /**\n                 * 工具提示\n                 */\n                h(VxeTooltipComponent, Object.assign({ ref: refTooltip }, tooltipOpts))\n            ]);\n        };\n        const staticItemFlag = ref(0);\n        watch(() => reactData.staticItems.length, () => {\n            staticItemFlag.value++;\n        });\n        watch(() => reactData.staticItems, () => {\n            staticItemFlag.value++;\n        });\n        watch(staticItemFlag, () => {\n            reactData.formItems = reactData.staticItems;\n        });\n        const itemFlag = ref(0);\n        watch(() => props.items ? props.items.length : -1, () => {\n            itemFlag.value++;\n        });\n        watch(() => props.items, () => {\n            itemFlag.value++;\n        });\n        watch(itemFlag, () => {\n            loadItem(props.items || []);\n        });\n        watch(() => props.collapseStatus, (value) => {\n            reactData.collapseAll = !!value;\n        });\n        watch(() => props.readonly, () => {\n            clearValidate();\n        });\n        watch(() => props.disabled, () => {\n            clearValidate();\n        });\n        onMounted(() => {\n            nextTick(() => {\n                if (props.customLayout && props.items) {\n                    errLog('vxe.error.errConflicts', ['custom-layout', 'items']);\n                }\n            });\n        });\n        if (props.items) {\n            loadItem(props.items);\n        }\n        provide('xeFormItemInfo', null);\n        provide('$xeForm', $xeForm);\n        provide('$xeFormGroup', null);\n        provide('$xeFormItem', null);\n        $xeForm.renderVN = renderVN;\n        return $xeForm;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { watch } from 'vue';\nimport { renderer } from '../../ui';\nimport XEUtils from 'xe-utils';\nimport { ItemInfo } from './itemInfo';\nimport { isEnableConf } from '../../ui/src/utils';\nexport function isFormItem(item) {\n    return item instanceof ItemInfo;\n}\nexport function createItem($xeForm, _vm) {\n    return isFormItem(_vm) ? _vm : new ItemInfo($xeForm, _vm);\n}\nexport function handleFieldOrItem($xeForm, fieldOrItem) {\n    if (fieldOrItem) {\n        return XEUtils.isString(fieldOrItem) ? $xeForm.getItemByField(fieldOrItem) : fieldOrItem;\n    }\n    return null;\n}\nexport function isHiddenItem($xeForm, formItem) {\n    const { reactData } = $xeForm;\n    const { collapseAll } = reactData;\n    const { folding, visible } = formItem;\n    return visible === false || (folding && collapseAll);\n}\nexport function isActiveItem($xeForm, formItem) {\n    const $xeGrid = $xeForm.xeGrid;\n    let { visibleMethod, itemRender, visible, field } = formItem;\n    if (visible === false) {\n        return visible;\n    }\n    const compConf = isEnableConf(itemRender) ? renderer.get(itemRender.name) : null;\n    const fiVisibleMethod = compConf ? (compConf.formItemVisibleMethod || compConf.itemVisibleMethod) : null;\n    if (!visibleMethod && fiVisibleMethod) {\n        visibleMethod = fiVisibleMethod;\n    }\n    if (!visibleMethod) {\n        return true;\n    }\n    const formProps = $xeForm.props;\n    const { data } = formProps;\n    return visibleMethod({ data, field, property: field, item: formItem, $form: $xeForm, $grid: $xeGrid });\n}\nexport function watchItem(props, formItem) {\n    Object.keys(props).forEach(name => {\n        watch(() => props[name], (value) => {\n            formItem.update(name, value);\n        });\n    });\n}\nexport function assembleItem($xeForm, el, formItem, formGroup) {\n    const { reactData } = $xeForm;\n    const formProps = $xeForm.props;\n    const { customLayout } = formProps;\n    const { staticItems } = reactData;\n    if (customLayout) {\n        if (!staticItems.some(item => item.id === formItem.id)) {\n            staticItems.push(formItem);\n        }\n    }\n    else {\n        if (el) {\n            const parentElem = el.parentNode;\n            const parentItem = formGroup ? formGroup.formItem : null;\n            const parentItems = parentItem ? parentItem.children : staticItems;\n            if (parentElem) {\n                parentItems.splice(XEUtils.arrayIndexOf(parentElem.children, el), 0, formItem);\n                reactData.staticItems = staticItems.slice(0);\n            }\n        }\n    }\n}\nexport function destroyItem($xeForm, formItem) {\n    const { reactData } = $xeForm;\n    const { staticItems } = reactData;\n    const index = XEUtils.findIndexOf(staticItems, item => item.id === formItem.id);\n    if (index > -1) {\n        staticItems.splice(index, 1);\n    }\n    reactData.staticItems = staticItems.slice(0);\n}\n", "import XEUtils from 'xe-utils';\nexport class ItemInfo {\n    constructor($xeForm, item) {\n        Object.assign(this, {\n            id: XEUtils.uniqueId('item_'),\n            title: item.title,\n            field: item.field,\n            span: item.span,\n            align: item.align,\n            verticalAlign: item.verticalAlign,\n            titleBackground: item.titleBackground,\n            titleBold: item.titleBold,\n            titleAlign: item.titleAlign,\n            titleWidth: item.titleWidth,\n            titleColon: item.titleColon,\n            vertical: item.vertical,\n            padding: item.padding,\n            titleAsterisk: item.titleAsterisk,\n            titlePrefix: item.titlePrefix,\n            titleSuffix: item.titleSuffix,\n            titleOverflow: item.titleOverflow,\n            showTitle: item.showTitle,\n            resetValue: item.resetValue,\n            visibleMethod: item.visibleMethod,\n            visible: item.visible,\n            showContent: item.showContent,\n            folding: item.folding,\n            collapseNode: item.collapseNode,\n            className: item.className,\n            contentClassName: item.contentClassName,\n            contentStyle: item.contentStyle,\n            titleClassName: item.titleClassName,\n            titleStyle: item.titleStyle,\n            itemRender: item.itemRender,\n            rules: item.rules,\n            // 渲染属性\n            showError: false,\n            errRule: null,\n            slots: item.slots,\n            children: []\n        });\n    }\n    update(name, value) {\n        this[name] = value;\n    }\n}\n", "import { createCommentVNode, h } from 'vue';\nimport { getIcon, getI18n, renderer } from '../../ui';\nimport { eqEmptyValue, getFuncText, isEnableConf } from '../../ui/src/utils';\nimport { toCssUnit } from '../../ui/src/dom';\nimport { getSlotVNs } from '../../ui/src/vn';\nimport { isActiveItem } from './util';\nimport VxeTooltipComponent from '../../tooltip/src/tooltip';\nimport VxeIconComponent from '../../icon/src/icon';\nimport XEUtils from 'xe-utils';\nfunction renderPrefixIcon(titlePrefix) {\n    return h('span', {\n        class: 'vxe-form--item-title-prefix'\n    }, [\n        h(VxeIconComponent, {\n            class: titlePrefix.icon || getIcon().FORM_PREFIX,\n            status: titlePrefix.iconStatus\n        })\n    ]);\n}\nfunction renderSuffixIcon(titleSuffix) {\n    return h('span', {\n        class: 'vxe-form--item-title-suffix'\n    }, [\n        h(VxeIconComponent, {\n            class: titleSuffix.icon || getIcon().FORM_SUFFIX,\n            status: titleSuffix.iconStatus\n        })\n    ]);\n}\nexport const getItemClass = ($xeForm, item, isGroup) => {\n    const formProps = $xeForm.props;\n    const formReactData = $xeForm.reactData;\n    const $xeGrid = $xeForm.xeGrid;\n    const { data, rules, readonly, disabled, span: allSpan, titleBackground: allTitleBackground, titleBold: allTitleBold, titleColon: allTitleColon, titleAsterisk: allTitleAsterisk, vertical: allVertical, padding: allPadding } = formProps;\n    const { collapseAll } = formReactData;\n    const { folding, field, itemRender, showError, className, vertical, padding, children, showContent } = item;\n    const compConf = isEnableConf(itemRender) ? renderer.get(itemRender.name) : null;\n    const itemClassName = compConf ? (compConf.formItemClassName || compConf.itemClassName) : '';\n    const span = item.span || allSpan;\n    const itemPadding = XEUtils.eqNull(padding) ? allPadding : padding;\n    const itemVertical = XEUtils.eqNull(vertical) ? allVertical : vertical;\n    const titleBackground = XEUtils.eqNull(item.titleBackground) ? allTitleBackground : item.titleBackground;\n    const titleBold = XEUtils.eqNull(item.titleBold) ? allTitleBold : item.titleBold;\n    const titleColon = XEUtils.eqNull(item.titleColon) ? allTitleColon : item.titleColon;\n    const titleAsterisk = XEUtils.eqNull(item.titleAsterisk) ? allTitleAsterisk : item.titleAsterisk;\n    const params = { data, disabled, readonly, field, property: field, item, $form: $xeForm, $grid: $xeGrid };\n    const hasGroup = children && children.length > 0;\n    let isRequired = false;\n    let isValid = false;\n    if (!readonly && rules) {\n        const itemRules = rules[field];\n        if (itemRules && itemRules.length) {\n            isValid = true;\n            isRequired = itemRules.some((rule) => rule.required);\n        }\n    }\n    return [\n        isGroup || hasGroup ? 'vxe-form--group' : '',\n        'vxe-form--item',\n        item.id,\n        span ? `vxe-form--item-col_${span} is--span` : '',\n        className ? (XEUtils.isFunction(className) ? className(params) : className) : '',\n        itemClassName ? (XEUtils.isFunction(itemClassName) ? itemClassName(params) : itemClassName) : '',\n        {\n            'is--colon': titleColon,\n            'is--tbg': titleBackground,\n            'is--bold': titleBold,\n            'is--padding': itemPadding,\n            'is--vertical': itemVertical,\n            'is--asterisk': titleAsterisk,\n            'hide--content': showContent === false,\n            'is--valid': isValid,\n            'is--required': isRequired,\n            'is--hidden': folding && collapseAll,\n            'is--active': isActiveItem($xeForm, item),\n            'is--error': showError\n        }\n    ];\n};\nexport const getItemContentClass = ($xeForm, item, isGroup) => {\n    const formProps = $xeForm.props;\n    const $xeGrid = $xeForm.xeGrid;\n    const { data, readonly, disabled, align: allAlign, verticalAlign: allVerticalAlign } = formProps;\n    const { field, itemRender, contentClassName, children } = item;\n    const compConf = isEnableConf(itemRender) ? renderer.get(itemRender.name) : null;\n    const itemContentClassName = compConf ? (compConf.formItemContentClassName || compConf.itemContentClassName) : '';\n    const align = XEUtils.eqNull(item.align) ? allAlign : item.align;\n    const verticalAlign = XEUtils.eqNull(item.verticalAlign) ? allVerticalAlign : item.verticalAlign;\n    const params = { data, disabled, readonly, field, property: field, item, $form: $xeForm, $grid: $xeGrid };\n    const hasGroup = children && children.length > 0;\n    return [\n        isGroup || hasGroup ? 'vxe-form--group-content vxe-form--item-row' : '',\n        'vxe-form--item-content',\n        align ? `align--${align}` : '',\n        verticalAlign ? `vertical-align--${verticalAlign}` : '',\n        itemContentClassName ? (XEUtils.isFunction(itemContentClassName) ? itemContentClassName(params) : itemContentClassName) : '',\n        contentClassName ? (XEUtils.isFunction(contentClassName) ? contentClassName(params) : contentClassName) : ''\n    ];\n};\nexport function renderTitle($xeForm, item, isGroup) {\n    const formProps = $xeForm.props;\n    const $xeGrid = $xeForm.xeGrid;\n    const { data, readonly, disabled, titleAlign: allTitleAlign, titleWidth: allTitleWidth, titleOverflow: allTitleOverflow, vertical: allVertical } = formProps;\n    const { slots, title, field, itemRender, titleOverflow, vertical, showTitle, titleClassName, titleStyle, titlePrefix, titleSuffix, children, showContent } = item;\n    const { computeTooltipOpts } = $xeForm.getComputeMaps();\n    const tooltipOpts = computeTooltipOpts.value;\n    const compConf = isEnableConf(itemRender) ? renderer.get(itemRender.name) : null;\n    const itemTitleClassName = compConf ? (compConf.formItemTitleClassName || compConf.itemTitleClassName) : '';\n    const itemTitleStyle = compConf ? (compConf.formItemTitleStyle || compConf.itemTitleStyle) : null;\n    const itemVertical = XEUtils.eqNull(vertical) ? allVertical : vertical;\n    const titleAlign = XEUtils.eqNull(item.titleAlign) ? allTitleAlign : item.titleAlign;\n    const titleWidth = itemVertical ? null : (XEUtils.eqNull(item.titleWidth) ? allTitleWidth : item.titleWidth);\n    const itemOverflow = XEUtils.eqNull(titleOverflow) ? allTitleOverflow : titleOverflow;\n    const ovEllipsis = itemOverflow === 'ellipsis';\n    const ovTitle = itemOverflow === 'title';\n    const ovTooltip = itemOverflow === true || itemOverflow === 'tooltip';\n    const hasEllipsis = ovTitle || ovTooltip || ovEllipsis;\n    const params = { data, disabled, readonly, field, property: field, item, $form: $xeForm, $grid: $xeGrid };\n    const titleSlot = slots ? slots.title : null;\n    const extraSlot = slots ? slots.extra : null;\n    const isTitle = (showTitle !== false) && (title || titleSlot);\n    const hasGroup = children && children.length > 0;\n    const titVNs = [];\n    if (titlePrefix) {\n        titVNs.push((titlePrefix.content || titlePrefix.message)\n            ? h(VxeTooltipComponent, Object.assign(Object.assign(Object.assign({}, tooltipOpts), titlePrefix), { content: getFuncText(titlePrefix.content || titlePrefix.message) }), {\n                default: () => renderPrefixIcon(titlePrefix)\n            })\n            : renderPrefixIcon(titlePrefix));\n    }\n    const rftTitle = compConf ? (compConf.renderFormItemTitle || compConf.renderItemTitle) : null;\n    titVNs.push(h('span', {\n        class: 'vxe-form--item-title-label'\n    }, titleSlot ? $xeForm.callSlot(titleSlot, params) : (rftTitle ? getSlotVNs(rftTitle(itemRender, params)) : getFuncText(item.title))));\n    const fixVNs = [];\n    if (titleSuffix) {\n        fixVNs.push((titleSuffix.content || titleSuffix.message)\n            ? h(VxeTooltipComponent, Object.assign(Object.assign(Object.assign({}, tooltipOpts), titleSuffix), { content: getFuncText(titleSuffix.content || titleSuffix.message) }), {\n                default: () => renderSuffixIcon(titleSuffix)\n            })\n            : renderSuffixIcon(titleSuffix));\n    }\n    const ons = ovTooltip\n        ? {\n            onMouseenter(evnt) {\n                $xeForm.triggerTitleTipEvent(evnt, params);\n            },\n            onMouseleave: $xeForm.handleTitleTipLeaveEvent\n        }\n        : {};\n    return isTitle\n        ? h('div', Object.assign({ class: [\n                isGroup || hasGroup ? 'vxe-form--group-title' : '',\n                'vxe-form--item-title',\n                titleAlign ? `align--${titleAlign}` : '',\n                hasEllipsis ? 'is--ellipsis' : '',\n                itemTitleClassName ? (XEUtils.isFunction(itemTitleClassName) ? itemTitleClassName(params) : itemTitleClassName) : '',\n                titleClassName ? (XEUtils.isFunction(titleClassName) ? titleClassName(params) : titleClassName) : ''\n            ], style: Object.assign({}, XEUtils.isFunction(itemTitleStyle) ? itemTitleStyle(params) : itemTitleStyle, XEUtils.isFunction(titleStyle) ? titleStyle(params) : titleStyle, titleWidth && showContent !== false\n                ? {\n                    width: toCssUnit(titleWidth)\n                }\n                : null), title: ovTitle ? getFuncText(title) : null }, ons), [\n            h('div', {\n                class: 'vxe-form--item-title-content'\n            }, titVNs),\n            h('div', {\n                class: 'vxe-form--item-title-postfix'\n            }, fixVNs),\n            extraSlot\n                ? h('div', {\n                    class: 'vxe-form--item-title-extra'\n                }, $xeForm.callSlot(extraSlot, params))\n                : createCommentVNode()\n        ])\n        : createCommentVNode();\n}\nexport const renderItemContent = ($xeForm, item) => {\n    const formProps = $xeForm.props;\n    const formReactData = $xeForm.reactData;\n    const $xeGrid = $xeForm.xeGrid;\n    const { computeCollapseOpts, computeValidOpts } = $xeForm.getComputeMaps();\n    const { data, readonly, disabled } = formProps;\n    const { collapseAll } = formReactData;\n    const { slots, field, itemRender, collapseNode, errRule } = item;\n    const defaultSlot = slots ? slots.default : null;\n    const validSlot = slots ? slots.valid : null;\n    const collapseOpts = computeCollapseOpts.value;\n    const validOpts = computeValidOpts.value;\n    const compConf = isEnableConf(itemRender) ? renderer.get(itemRender.name) : null;\n    const params = { data, disabled, readonly, field, property: field, item, $form: $xeForm, $grid: $xeGrid };\n    let contentVNs = [];\n    const rftContent = compConf ? (compConf.renderFormItemContent || compConf.renderItemContent) : null;\n    if (defaultSlot) {\n        contentVNs = $xeForm.callSlot(defaultSlot, params);\n    }\n    else if (rftContent) {\n        contentVNs = getSlotVNs(rftContent(itemRender, params));\n    }\n    else if (field) {\n        const itemValue = XEUtils.get(data, field);\n        contentVNs = [eqEmptyValue(itemValue) ? '' : `${itemValue}`];\n    }\n    if (collapseNode) {\n        contentVNs.push(h('div', {\n            class: 'vxe-form--item-trigger-node',\n            onClick: $xeForm.toggleCollapseEvent\n        }, [\n            h('span', {\n                class: 'vxe-form--item-trigger-text'\n            }, collapseAll ? (collapseOpts.unfoldButtonText || getI18n('vxe.form.unfolding')) : (collapseOpts.foldButtonText || getI18n('vxe.form.folding'))),\n            h('i', {\n                class: ['vxe-form--item-trigger-icon', collapseAll ? (collapseOpts.foldIcon || getIcon().FORM_FOLDING) : (collapseOpts.unfoldIcon || getIcon().FORM_UNFOLDING)]\n            })\n        ]));\n    }\n    if (errRule && validOpts.showMessage) {\n        const validParams = Object.assign(Object.assign({}, params), { rule: errRule });\n        contentVNs.push(h('div', {\n            class: 'vxe-form-item--valid-error-tip',\n            style: errRule.maxWidth\n                ? {\n                    width: toCssUnit(errRule.maxWidth)\n                }\n                : null\n        }, [\n            h('div', {\n                class: `vxe-form-item--valid-error-wrapper vxe-form-item--valid-error-theme-${validOpts.theme || 'normal'}`\n            }, [\n                validSlot\n                    ? $xeForm.callSlot(validSlot, validParams)\n                    : [\n                        h('span', {\n                            class: 'vxe-form--item--valid-error-msg'\n                        }, errRule.content || errRule.message)\n                    ]\n            ])\n        ]));\n    }\n    return h('div', {\n        class: 'vxe-form--item-inner'\n    }, contentVNs);\n};\n", "import { defineComponent, h, inject, provide, createCommentVNode } from 'vue';\nimport { renderer } from '../../ui';\nimport { isEnableConf } from '../../ui/src/utils';\nimport { renderTitle, getItemClass, getItemContentClass, renderItemContent } from './render';\nimport XEUtils from 'xe-utils';\nconst VxeFormConfigItem = defineComponent({\n    name: 'VxeFormConfigItem',\n    props: {\n        itemConfig: Object\n    },\n    setup(props) {\n        const $xeForm = inject('$xeForm', {});\n        const xeformiteminfo = { itemConfig: props.itemConfig };\n        provide('xeFormItemInfo', xeformiteminfo);\n        const renderItem = ($xeForm, item) => {\n            const formProps = $xeForm.props;\n            const $xeGrid = $xeForm.xeGrid;\n            const { data, readonly, disabled } = formProps;\n            const { visible, field, itemRender, contentStyle, children, showContent } = item;\n            const compConf = isEnableConf(itemRender) ? renderer.get(itemRender.name) : null;\n            const itemStyle = compConf ? (compConf.formItemStyle || compConf.itemStyle) : null;\n            const itemContentStyle = compConf ? (compConf.formItemContentStyle || compConf.itemContentStyle) : null;\n            const params = { data, disabled, readonly, field, property: field, item, $form: $xeForm, $grid: $xeGrid };\n            const hasGroup = children && children.length > 0;\n            if (visible === false) {\n                return createCommentVNode();\n            }\n            return h('div', {\n                key: item.id,\n                class: getItemClass($xeForm, item),\n                style: XEUtils.isFunction(itemStyle) ? itemStyle(params) : itemStyle\n            }, [\n                renderTitle($xeForm, item),\n                showContent === false\n                    ? createCommentVNode()\n                    : h('div', {\n                        class: getItemContentClass($xeForm, item),\n                        style: Object.assign({}, XEUtils.isFunction(itemContentStyle) ? itemContentStyle(params) : itemContentStyle, XEUtils.isFunction(contentStyle) ? contentStyle(params) : contentStyle)\n                    }, hasGroup\n                        ? children.map((childItem) => renderItem($xeForm, childItem))\n                        : [\n                            renderItemContent($xeForm, item)\n                        ])\n            ]);\n        };\n        const renderVN = () => {\n            return renderItem($xeForm, props.itemConfig);\n        };\n        const $xeFormconfigitem = {\n            renderVN\n        };\n        provide('$xeFormGroup', null);\n        return $xeFormconfigitem;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\nexport default VxeFormConfigItem;\n", "import { h, resolveComponent } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { renderer, getComponent } from '../../ui';\nimport { getOnName, getModelEvent, getChangeEvent } from '../../ui/src/vn';\nimport { errLog } from '../../ui/src/log';\nconst componentDefaultModelProp = 'modelValue';\n/**\n * 已废弃\n * @deprecated\n */\nfunction getOldComponentName(name) {\n    return `vxe-${name.replace('$', '')}`;\n}\nfunction getDefaultComponent({ name }) {\n    return getComponent(name) || resolveComponent(name);\n}\n/**\n * 已废弃\n * @deprecated\n */\nfunction getOldComponent({ name }) {\n    return resolveComponent(getOldComponentName(name));\n}\nfunction getNativeAttrs(renderOpts) {\n    let { name, attrs } = renderOpts;\n    if (name === 'input') {\n        attrs = Object.assign({ type: 'text' }, attrs);\n    }\n    return attrs;\n}\nfunction getComponentFormItemProps(renderOpts, params, value, defaultProps) {\n    return XEUtils.assign({}, defaultProps, renderOpts.props, { [componentDefaultModelProp]: value });\n}\n/**\n * 原生事件处理\n * @param renderOpts\n * @param params\n * @param modelFunc\n * @param changeFunc\n */\nfunction getNativeElementOns(renderOpts, params, modelFunc, changeFunc) {\n    const { events } = renderOpts;\n    const modelEvent = getModelEvent(renderOpts.name);\n    const changeEvent = getChangeEvent(renderOpts.name);\n    const isSameEvent = changeEvent === modelEvent;\n    const ons = {};\n    if (events) {\n        XEUtils.objectEach(events, (func, key) => {\n            ons[getOnName(key)] = function (...args) {\n                func(params, ...args);\n            };\n        });\n    }\n    if (modelFunc) {\n        ons[getOnName(modelEvent)] = function (targetEvnt) {\n            modelFunc(targetEvnt);\n            if (isSameEvent && changeFunc) {\n                changeFunc(targetEvnt);\n            }\n            if (events && events[modelEvent]) {\n                events[modelEvent](params, targetEvnt);\n            }\n        };\n    }\n    if (!isSameEvent && changeFunc) {\n        ons[getOnName(changeEvent)] = function (...args) {\n            changeFunc(...args);\n            if (events && events[changeEvent]) {\n                events[changeEvent](params, ...args);\n            }\n        };\n    }\n    return ons;\n}\n/**\n * 组件事件处理\n * @param renderOpts\n * @param params\n * @param modelFunc\n * @param changeFunc\n */\nfunction getComponentOns(renderOpts, params, modelFunc, changeFunc) {\n    const { events } = renderOpts;\n    const modelEvent = getModelEvent(renderOpts.name);\n    const changeEvent = getChangeEvent(renderOpts.name);\n    const ons = {};\n    XEUtils.objectEach(events, (func, key) => {\n        ons[getOnName(key)] = function (...args) {\n            if (process.env.NODE_ENV === 'development') {\n                if (!XEUtils.isFunction(func)) {\n                    errLog('vxe.error.errFunc', [func]);\n                }\n            }\n            func(params, ...args);\n        };\n    });\n    if (modelFunc) {\n        ons[getOnName(modelEvent)] = function (targetEvnt) {\n            modelFunc(targetEvnt);\n            if (events && events[modelEvent]) {\n                events[modelEvent](params, targetEvnt);\n            }\n        };\n    }\n    if (changeFunc) {\n        ons[getOnName(changeEvent)] = function (...args) {\n            changeFunc(...args);\n            if (events && events[changeEvent]) {\n                events[changeEvent](params, ...args);\n            }\n        };\n    }\n    return ons;\n}\nfunction getItemOns(renderOpts, params) {\n    const { $form, data, field } = params;\n    return getComponentOns(renderOpts, params, (value) => {\n        // 处理 model 值双向绑定\n        XEUtils.set(data, field, value);\n    }, () => {\n        // 处理 change 事件相关逻辑\n        $form.updateStatus(params);\n    });\n}\nfunction getNativeItemOns(renderOpts, params) {\n    const { $form, data, field } = params;\n    return getNativeElementOns(renderOpts, params, (evnt) => {\n        // 处理 model 值双向绑定\n        const itemValue = evnt.target.value;\n        XEUtils.set(data, field, itemValue);\n    }, () => {\n        // 处理 change 事件相关逻辑\n        $form.updateStatus(params);\n    });\n}\nfunction renderNativeOptgroup(renderOpts, params, renderOptionsMethods) {\n    const { optionGroups, optionGroupProps = {} } = renderOpts;\n    const groupOptions = optionGroupProps.options || 'options';\n    const groupLabel = optionGroupProps.label || 'label';\n    return optionGroups.map((group, gIndex) => {\n        return h('optgroup', {\n            key: gIndex,\n            label: group[groupLabel]\n        }, renderOptionsMethods(group[groupOptions], renderOpts, params));\n    });\n}\n/**\n * 渲染表单-项\n * 用于渲染原生的标签\n */\nfunction nativeItemRender(renderOpts, params) {\n    const { data, field } = params;\n    const { name } = renderOpts;\n    const attrs = getNativeAttrs(renderOpts);\n    const itemValue = XEUtils.get(data, field);\n    return [\n        h(name, Object.assign(Object.assign(Object.assign({ class: `vxe-default-${name}` }, attrs), { value: attrs && name === 'input' && (attrs.type === 'submit' || attrs.type === 'reset') ? null : itemValue }), getNativeItemOns(renderOpts, params)))\n    ];\n}\nfunction defaultItemRender(renderOpts, params) {\n    const { data, field } = params;\n    const itemValue = XEUtils.get(data, field);\n    return [\n        h(getDefaultComponent(renderOpts), Object.assign(Object.assign({}, getComponentFormItemProps(renderOpts, params, itemValue)), getItemOns(renderOpts, params)))\n    ];\n}\n/**\n * 已废弃\n * @deprecated\n */\nfunction oldItemRender(renderOpts, params) {\n    const { data, field } = params;\n    const itemValue = XEUtils.get(data, field);\n    return [\n        h(getOldComponent(renderOpts), Object.assign(Object.assign({}, getComponentFormItemProps(renderOpts, params, itemValue)), getItemOns(renderOpts, params)))\n    ];\n}\n/**\n * 已废弃\n * @deprecated\n */\nfunction oldButtonItemRender(renderOpts, params) {\n    return [\n        h(resolveComponent('vxe-button'), Object.assign(Object.assign({}, getComponentFormItemProps(renderOpts, params, null)), getComponentOns(renderOpts, params)))\n    ];\n}\n/**\n * 已废弃\n * @deprecated\n */\nfunction oldButtonsItemRender(renderOpts, params) {\n    return renderOpts.children.map((childRenderOpts) => oldButtonItemRender(childRenderOpts, params)[0]);\n}\n/**\n * 渲染原生的 select 标签\n */\nfunction renderNativeFormOptions(options, renderOpts, params) {\n    const { data, field } = params;\n    const { optionProps = {} } = renderOpts;\n    const labelProp = optionProps.label || 'label';\n    const valueProp = optionProps.value || 'value';\n    const disabledProp = optionProps.disabled || 'disabled';\n    const cellValue = XEUtils.get(data, field);\n    return options.map((item, oIndex) => {\n        return h('option', {\n            key: oIndex,\n            value: item[valueProp],\n            disabled: item[disabledProp],\n            /* eslint-disable eqeqeq */\n            selected: item[valueProp] == cellValue\n        }, item[labelProp]);\n    });\n}\n/**\n * 渲染表单-项\n */\nfunction defaultFormItemRender(renderOpts, params) {\n    const { data, field } = params;\n    const itemValue = XEUtils.get(data, field);\n    return [\n        h(getDefaultComponent(renderOpts), Object.assign(Object.assign({}, getComponentFormItemProps(renderOpts, params, itemValue)), getItemOns(renderOpts, params)))\n    ];\n}\nfunction formItemRadioAndCheckboxRender(renderOpts, params) {\n    const { options, optionProps } = renderOpts;\n    const { data, field } = params;\n    const itemValue = XEUtils.get(data, field);\n    return [\n        h(getDefaultComponent(renderOpts), Object.assign(Object.assign({ options,\n            optionProps }, getComponentFormItemProps(renderOpts, params, itemValue)), getItemOns(renderOpts, params)))\n    ];\n}\n/**\n * 已废弃\n * @deprecated\n */\nfunction oldFormItemRadioAndCheckboxRender(renderOpts, params) {\n    const { name, options, optionProps = {} } = renderOpts;\n    const { data, field } = params;\n    const labelProp = optionProps.label || 'label';\n    const valueProp = optionProps.value || 'value';\n    const disabledProp = optionProps.disabled || 'disabled';\n    const itemValue = XEUtils.get(data, field);\n    const compName = getOldComponentName(name);\n    // 如果是分组\n    if (options) {\n        return [\n            h(resolveComponent(`${compName}-group`), Object.assign(Object.assign({}, getComponentFormItemProps(renderOpts, params, itemValue)), getItemOns(renderOpts, params)), {\n                default: () => {\n                    return options.map((item, index) => {\n                        return h(resolveComponent(compName), {\n                            key: index,\n                            label: item[valueProp],\n                            content: item[labelProp],\n                            disabled: item[disabledProp]\n                        });\n                    });\n                }\n            })\n        ];\n    }\n    return [\n        h(resolveComponent(compName), Object.assign(Object.assign({}, getComponentFormItemProps(renderOpts, params, itemValue)), getItemOns(renderOpts, params)))\n    ];\n}\n/**\n * 表单 - 渲染器\n */\nrenderer.mixin({\n    input: {\n        formItemAutoFocus: 'input',\n        renderFormItemContent: nativeItemRender\n    },\n    textarea: {\n        formItemAutoFocus: 'textarea',\n        renderFormItemContent: nativeItemRender\n    },\n    select: {\n        formItemAutoFocus: 'input',\n        renderFormItemContent(renderOpts, params) {\n            return [\n                h('select', Object.assign(Object.assign({ class: 'vxe-default-select' }, getNativeAttrs(renderOpts)), getNativeItemOns(renderOpts, params)), renderOpts.optionGroups ? renderNativeOptgroup(renderOpts, params, renderNativeFormOptions) : renderNativeFormOptions(renderOpts.options, renderOpts, params))\n            ];\n        }\n    },\n    VxeInput: {\n        formItemAutoFocus: 'input',\n        renderFormItemContent: defaultItemRender\n    },\n    VxeNumberInput: {\n        formItemAutoFocus: 'input',\n        renderFormItemContent: defaultItemRender\n    },\n    VxePasswordInput: {\n        formItemAutoFocus: 'input',\n        renderFormItemContent: defaultItemRender\n    },\n    VxeTextarea: {\n        formItemAutoFocus: 'textarea',\n        renderFormItemContent: defaultItemRender\n    },\n    VxeDatePicker: {\n        formItemAutoFocus: 'input',\n        renderFormItemContent: defaultItemRender\n    },\n    VxeButton: {\n        renderFormItemContent: defaultFormItemRender\n    },\n    VxeButtonGroup: {\n        renderFormItemContent(renderOpts, params) {\n            const { options } = renderOpts;\n            const { data, field } = params;\n            const itemValue = XEUtils.get(data, field);\n            return [\n                h(getDefaultComponent(renderOpts), Object.assign(Object.assign({ options }, getComponentFormItemProps(renderOpts, params, itemValue)), getItemOns(renderOpts, params)))\n            ];\n        }\n    },\n    VxeSelect: {\n        formItemAutoFocus: 'input',\n        renderFormItemContent(renderOpts, params) {\n            const { data, field } = params;\n            const { options, optionProps, optionGroups, optionGroupProps } = renderOpts;\n            const itemValue = XEUtils.get(data, field);\n            return [\n                h(getDefaultComponent(renderOpts), Object.assign(Object.assign({}, getComponentFormItemProps(renderOpts, params, itemValue, { options, optionProps, optionGroups, optionGroupProps })), getItemOns(renderOpts, params)))\n            ];\n        }\n    },\n    VxeTreeSelect: {\n        formItemAutoFocus: 'input',\n        renderFormItemContent(renderOpts, params) {\n            const { data, field } = params;\n            const { options, optionProps } = renderOpts;\n            const itemValue = XEUtils.get(data, field);\n            return [\n                h(getDefaultComponent(renderOpts), Object.assign(Object.assign({}, getComponentFormItemProps(renderOpts, params, itemValue, { options, optionProps })), getItemOns(renderOpts, params)))\n            ];\n        }\n    },\n    VxeTableSelect: {\n        formItemAutoFocus: 'input',\n        renderFormItemContent(renderOpts, params) {\n            const { data, field } = params;\n            const { options, optionProps } = renderOpts;\n            const itemValue = XEUtils.get(data, field);\n            return [\n                h(getDefaultComponent(renderOpts), Object.assign(Object.assign({}, getComponentFormItemProps(renderOpts, params, itemValue, { options, optionProps })), getItemOns(renderOpts, params)))\n            ];\n        }\n    },\n    VxeColorPicker: {\n        formItemAutoFocus: 'input',\n        renderFormItemContent(renderOpts, params) {\n            const { data, field } = params;\n            const { options } = renderOpts;\n            const itemValue = XEUtils.get(data, field);\n            return [\n                h(getDefaultComponent(renderOpts), Object.assign(Object.assign({}, getComponentFormItemProps(renderOpts, params, itemValue, { colors: options })), getItemOns(renderOpts, params)))\n            ];\n        }\n    },\n    VxeIconPicker: {\n        formItemAutoFocus: 'input',\n        renderFormItemContent(renderOpts, params) {\n            const { data, field } = params;\n            const { options } = renderOpts;\n            const itemValue = XEUtils.get(data, field);\n            return [\n                h(getDefaultComponent(renderOpts), Object.assign(Object.assign({}, getComponentFormItemProps(renderOpts, params, itemValue, { icons: options })), getItemOns(renderOpts, params)))\n            ];\n        }\n    },\n    VxeRadio: {\n        renderFormItemContent: defaultFormItemRender\n    },\n    VxeRadioGroup: {\n        renderFormItemContent: formItemRadioAndCheckboxRender\n    },\n    VxeCheckbox: {\n        renderFormItemContent: defaultFormItemRender\n    },\n    VxeCheckboxGroup: {\n        renderFormItemContent: formItemRadioAndCheckboxRender\n    },\n    VxeSwitch: {\n        renderFormItemContent: defaultItemRender\n    },\n    VxeRate: {\n        renderFormItemContent: defaultItemRender\n    },\n    VxeSlider: {\n        renderFormItemContent: defaultItemRender\n    },\n    VxeImage: {\n        renderFormItemContent(renderOpts, params) {\n            const { data, field } = params;\n            const { props } = renderOpts;\n            const itemValue = XEUtils.get(data, field);\n            return [\n                h(getDefaultComponent(renderOpts), Object.assign(Object.assign(Object.assign({}, props), { src: itemValue }), getItemOns(renderOpts, params)))\n            ];\n        }\n    },\n    VxeImageGroup: {\n        renderFormItemContent(renderOpts, params) {\n            const { data, field } = params;\n            const { props } = renderOpts;\n            const itemValue = XEUtils.get(data, field);\n            return [\n                h(getDefaultComponent(renderOpts), Object.assign(Object.assign(Object.assign({}, props), { urlList: itemValue }), getItemOns(renderOpts, params)))\n            ];\n        }\n    },\n    VxeUpload: {\n        renderFormItemContent: defaultItemRender\n    },\n    // 以下已废弃\n    $input: {\n        formItemAutoFocus: 'input',\n        renderFormItemContent: oldItemRender\n    },\n    $textarea: {\n        formItemAutoFocus: 'textarea',\n        renderFormItemContent: oldItemRender\n    },\n    $button: {\n        renderFormItemContent: oldButtonItemRender\n    },\n    $buttons: {\n        renderFormItemContent: oldButtonsItemRender\n    },\n    $select: {\n        formItemAutoFocus: 'input',\n        renderFormItemContent(renderOpts, params) {\n            const { data, field } = params;\n            const { options, optionProps, optionGroups, optionGroupProps } = renderOpts;\n            const itemValue = XEUtils.get(data, field);\n            return [\n                h(getOldComponent(renderOpts), Object.assign(Object.assign({}, getComponentFormItemProps(renderOpts, params, itemValue, { options, optionProps, optionGroups, optionGroupProps })), getItemOns(renderOpts, params)))\n            ];\n        }\n    },\n    $radio: {\n        renderFormItemContent: oldFormItemRadioAndCheckboxRender\n    },\n    $checkbox: {\n        renderFormItemContent: oldFormItemRadioAndCheckboxRender\n    },\n    $switch: {\n        renderFormItemContent: oldItemRender\n    }\n    // 以上已废弃\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeFormComponent from './src/form';\nimport { dynamicApp } from '../dynamics';\nimport './render';\nexport const VxeForm = Object.assign(VxeFormComponent, {\n    install(app) {\n        app.component(VxeFormComponent.name, VxeFormComponent);\n    }\n});\ndynamicApp.use(VxeForm);\nVxeUI.component(VxeFormComponent);\nexport const Form = VxeForm;\nexport default VxeForm;\n", "import XEUtils from 'xe-utils';\nimport { getWidgetConfig } from './widget-info';\nlet maxWidgetId = 100000;\nexport function getNewWidgetId(widgetObjList) {\n    XEUtils.eachTree(widgetObjList, item => {\n        if (item) {\n            maxWidgetId = Math.max(maxWidgetId, item.id);\n        }\n    }, { children: 'children' });\n    return ++maxWidgetId;\n}\n/**\n * 判断是否布局控件\n */\nexport const hasFormDesignLayoutType = (widget) => {\n    if (widget) {\n        const widgetConf = getWidgetConfig(widget.name);\n        return widgetConf.group === 'layout';\n    }\n    return false;\n};\n", "import { ref } from 'vue';\nimport { renderer } from '@vxe-ui/core';\nimport { getNewWidgetId } from './util';\nimport { errLog } from '../../ui/src/log';\nimport XEUtils from 'xe-utils';\n// 控件原始配置信息，带响应\nconst refWidgetReactConfigMaps = ref({});\nexport const getWidgetConfig = (name) => {\n    const widgetReactConfigMaps = refWidgetReactConfigMaps.value;\n    return widgetReactConfigMaps[name] || {};\n};\nexport function getWidgetConfigTitle(name, $xeFormDesign) {\n    const widgetConf = getWidgetConfig(name);\n    if (widgetConf) {\n        const configTitle = widgetConf.title;\n        const params = { name, $formDesign: $xeFormDesign };\n        return XEUtils.toValueString(XEUtils.isFunction(configTitle) ? configTitle(params) : configTitle);\n    }\n    return name;\n}\nexport function getWidgetConfigCustomGroup(name, $xeFormDesign) {\n    const widgetConf = getWidgetConfig(name);\n    if (widgetConf) {\n        const configCustomGroup = widgetConf.customGroup;\n        const params = { name, $formDesign: $xeFormDesign };\n        return XEUtils.toValueString(XEUtils.isFunction(configCustomGroup) ? configCustomGroup(params) : configCustomGroup);\n    }\n    return name;\n}\nconst validWidgetUniqueField = (field, widgetObjList) => {\n    return !XEUtils.findTree(widgetObjList, item => item.field === field, { children: 'children' });\n};\nexport class FormDesignWidgetInfo {\n    constructor($xeFormDesign, name, widgetObjList) {\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"field\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: ''\n        });\n        Object.defineProperty(this, \"title\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: ''\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: ''\n        });\n        Object.defineProperty(this, \"required\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"hidden\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"children\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"model\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {\n                update: false,\n                value: ''\n            }\n        });\n        let customField = '';\n        if (name) {\n            const compConf = renderer.get(name) || {};\n            if (compConf) {\n                const widgetReactConfigMaps = refWidgetReactConfigMaps.value;\n                const createWidgetFormConfig = compConf.createFormDesignWidgetConfig;\n                if (createWidgetFormConfig) {\n                    const params = { name, $formDesign: $xeFormDesign };\n                    const widgetConfig = createWidgetFormConfig(params) || {};\n                    const titleConf = widgetConfig.title;\n                    const fieldConf = widgetConfig.field;\n                    this.title = XEUtils.toValueString(XEUtils.isFunction(titleConf) ? titleConf(params) : titleConf);\n                    this.options = widgetConfig.options || {};\n                    this.children = widgetConfig.children || [];\n                    if (fieldConf) {\n                        if (XEUtils.isFunction(fieldConf)) {\n                            customField = fieldConf({ name, $formDesign: $xeFormDesign });\n                        }\n                        else {\n                            customField = fieldConf;\n                        }\n                    }\n                    if (!widgetReactConfigMaps[name]) {\n                        widgetReactConfigMaps[name] = Object.assign({}, widgetConfig);\n                        refWidgetReactConfigMaps.value = Object.assign({}, widgetReactConfigMaps);\n                    }\n                }\n            }\n        }\n        const widgetId = getNewWidgetId(widgetObjList);\n        if (customField) {\n            // 如果使用了自定义字段，验证字段名是否唯一\n            if (!validWidgetUniqueField(customField, widgetObjList)) {\n                errLog('vxe.error.uniField', [customField]);\n            }\n        }\n        this.id = widgetId;\n        this.field = customField || `${name}${widgetId}`;\n        this.name = name;\n    }\n}\nexport function configToWidget(conf) {\n    const widget = new FormDesignWidgetInfo(null, conf.name, []);\n    widget.id = conf.id;\n    widget.title = conf.title || '';\n    widget.field = conf.field || '';\n    widget.required = conf.required || false;\n    widget.hidden = conf.hidden || false;\n    widget.options = Object.assign({}, widget.options, conf.options);\n    widget.children = conf.children ? conf.children.map(item => configToWidget(item)) : [];\n    return widget;\n}\n", "import { defineComponent, ref, h, reactive, provide, watch, nextTick, createCommentVNode } from 'vue';\nimport { VxeUI, getConfig, getIcon, getI18n, renderer, useSize, createEvent, renderEmptyElement } from '../../ui';\nimport { toCssUnit } from '../../ui/src/dom';\nimport { FormDesignWidgetInfo, getWidgetConfig, getWidgetConfigCustomGroup, configToWidget } from './widget-info';\nimport XEUtils from 'xe-utils';\nimport VxeButtonComponent from '../../button/src/button';\nimport LayoutWidgetComponent from './layout-widget';\nimport LayoutPreviewComponent from './layout-preview';\nimport LayoutSettingComponent from './layout-setting';\nimport LayoutStyleComponent from './layout-style';\nimport { getDefaultSettingFormData } from './default-setting-data';\nexport default defineComponent({\n    name: 'VxeFormDesign',\n    props: {\n        size: {\n            type: String,\n            default: () => getConfig().formDesign.size || getConfig().size\n        },\n        config: Object,\n        height: {\n            type: [String, Number],\n            default: () => getConfig().formDesign.height\n        },\n        widgets: {\n            type: Array,\n            default: () => XEUtils.clone(getConfig().formDesign.widgets) || []\n        },\n        showHeader: {\n            type: Boolean,\n            default: () => getConfig().formDesign.showHeader\n        },\n        showPc: {\n            type: Boolean,\n            default: () => getConfig().formDesign.showPc\n        },\n        showMobile: {\n            type: Boolean,\n            default: () => getConfig().formDesign.showMobile\n        },\n        formRender: Object\n    },\n    emits: [\n        'click-widget',\n        'add-widget',\n        'copy-widget',\n        'remove-widget',\n        'drag-widget'\n    ],\n    setup(props, context) {\n        const { emit, slots } = context;\n        const xID = XEUtils.uniqueId();\n        const refElem = ref();\n        const refLayoutStyle = ref();\n        const { computeSize } = useSize(props);\n        const reactData = reactive({\n            formData: {},\n            widgetConfigs: [],\n            widgetObjList: [],\n            dragWidget: null,\n            sortWidget: null,\n            activeWidget: null\n        });\n        const internalData = reactive({});\n        const refMaps = {\n            refElem\n        };\n        const computeMaps = {\n            computeSize\n        };\n        const $xeFormDesign = {\n            xID,\n            props,\n            context,\n            reactData,\n            internalData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const createWidget = (name) => {\n            return new FormDesignWidgetInfo($xeFormDesign, name, reactData.widgetObjList);\n        };\n        const createEmptyWidget = () => {\n            return new FormDesignWidgetInfo($xeFormDesign, '', reactData.widgetObjList);\n        };\n        const loadConfig = (config) => {\n            if (config) {\n                const { formConfig, widgetData } = config;\n                if (formConfig) {\n                    loadFormConfig(formConfig);\n                }\n                if (widgetData) {\n                    loadWidgetData(widgetData);\n                }\n            }\n            const { activeWidget, widgetObjList } = reactData;\n            if (activeWidget) {\n                const rest = XEUtils.findTree(widgetObjList, item => item.id === activeWidget.id, { children: 'children' });\n                if (rest) {\n                    reactData.activeWidget = rest.item;\n                }\n                else {\n                    reactData.activeWidget = widgetObjList[0] || null;\n                }\n            }\n            else {\n                reactData.activeWidget = widgetObjList[0] || null;\n            }\n            return nextTick();\n        };\n        const reloadConfig = (config) => {\n            clearConfig();\n            return loadConfig(config);\n        };\n        const getFormConfig = () => {\n            return XEUtils.clone(reactData.formData, true);\n        };\n        const loadFormConfig = (data) => {\n            reactData.formData = Object.assign({}, createSettingForm(), data);\n            return nextTick();\n        };\n        const getWidgetById = (id) => {\n            const { widgetObjList } = reactData;\n            if (id) {\n                const widgetId = XEUtils.toNumber(id);\n                const rest = XEUtils.findTree(widgetObjList, item => item && item.id === widgetId, { children: 'children' });\n                if (rest) {\n                    return rest.item;\n                }\n            }\n            return null;\n        };\n        const getWidgetData = () => {\n            const objList = XEUtils.clone(reactData.widgetObjList, true);\n            XEUtils.eachTree(objList, item => {\n                item.model.value = null;\n            }, { children: 'children' });\n            return objList;\n        };\n        const loadWidgetData = (widgetData) => {\n            reactData.widgetObjList = (widgetData || []).map(item => configToWidget(item));\n            return nextTick();\n        };\n        const openStyleSetting = () => {\n            const $layoutStyle = refLayoutStyle.value;\n            if ($layoutStyle) {\n                $layoutStyle.openStylePreview();\n            }\n            return nextTick();\n        };\n        const clearConfig = () => {\n            reactData.widgetObjList = [];\n            initSettingForm();\n            return nextTick();\n        };\n        const formDesignMethods = {\n            dispatchEvent(type, params, evnt) {\n                emit(type, createEvent(evnt, { $xeFormDesign }, params));\n            },\n            createWidget,\n            createEmptyWidget,\n            getConfig() {\n                return {\n                    formConfig: getFormConfig(),\n                    widgetData: getWidgetData()\n                };\n            },\n            clearConfig,\n            loadConfig,\n            reloadConfig,\n            getFormConfig,\n            loadFormConfig,\n            getWidgetById,\n            getFormData() {\n                const { widgetObjList } = reactData;\n                const formData = {};\n                XEUtils.eachTree(widgetObjList, widget => {\n                    formData[widget.field] = null;\n                }, { children: 'children' });\n                return formData;\n            },\n            getWidgetData,\n            loadWidgetData,\n            refreshPreviewView() {\n                const $layoutStyle = refLayoutStyle.value;\n                if ($layoutStyle) {\n                    $layoutStyle.updatePreviewView();\n                }\n                return nextTick();\n            },\n            openStyleSetting\n        };\n        const updateWidgetConfigs = () => {\n            const { widgets } = props;\n            const widgetConfs = [];\n            const baseWidgets = [];\n            const layoutWidgets = [];\n            const advancedWidgets = [];\n            const customGroups = [];\n            renderer.forEach((item, name) => {\n                const { createFormDesignWidgetConfig } = item;\n                if (createFormDesignWidgetConfig) {\n                    const widthItem = createWidget(name);\n                    const widgetConf = getWidgetConfig(name);\n                    const widgetCustomGroup = getWidgetConfigCustomGroup(name, $xeFormDesign);\n                    // 如果自定义组\n                    if (widgetCustomGroup) {\n                        const cusGroup = customGroups.find(item => item.title === widgetCustomGroup);\n                        if (cusGroup) {\n                            cusGroup.children.push(widthItem);\n                        }\n                        else {\n                            customGroups.push({\n                                title: widgetCustomGroup,\n                                children: [widthItem]\n                            });\n                        }\n                    }\n                    else {\n                        switch (widgetConf.group) {\n                            case 'layout':\n                                layoutWidgets.push(widthItem);\n                                break;\n                            case 'advanced':\n                                advancedWidgets.push(widthItem);\n                                break;\n                            default:\n                                // 已废弃 title\n                                if (!['title'].includes(widthItem.name)) {\n                                    baseWidgets.push(widthItem);\n                                }\n                                break;\n                        }\n                    }\n                }\n            });\n            if (baseWidgets.length) {\n                widgetConfs.push({\n                    group: 'base',\n                    children: baseWidgets\n                });\n            }\n            if (layoutWidgets.length) {\n                widgetConfs.push({\n                    group: 'layout',\n                    children: layoutWidgets\n                });\n            }\n            if (advancedWidgets.length) {\n                widgetConfs.push({\n                    group: 'advanced',\n                    children: advancedWidgets\n                });\n            }\n            if (customGroups.length) {\n                widgetConfs.push(...customGroups);\n            }\n            if (widgets && widgets.length) {\n                reactData.widgetConfigs = props.widgets.map(config => {\n                    return {\n                        title: config.customGroup,\n                        group: config.group,\n                        children: config.children\n                            ? config.children.map(name => {\n                                const widthItem = createWidget(name);\n                                return widthItem;\n                            })\n                            : []\n                    };\n                });\n            }\n            else {\n                reactData.widgetConfigs = widgetConfs;\n            }\n        };\n        const validWidgetUnique = (widgetName) => {\n            const { widgetObjList } = reactData;\n            const widgetConf = getWidgetConfig(widgetName);\n            if (widgetConf.unique) {\n                const existWidgetList = [];\n                XEUtils.eachTree(widgetObjList, obj => {\n                    if (obj.name === widgetName) {\n                        existWidgetList.push(obj);\n                    }\n                }, { children: 'children' });\n                const status = existWidgetList.length < 1;\n                if (!status) {\n                    if (VxeUI.modal) {\n                        VxeUI.modal.message({\n                            content: getI18n('vxe.formDesign.error.wdFormUni'),\n                            status: 'error',\n                            id: 'wdFormUni'\n                        });\n                    }\n                }\n                return status;\n            }\n            return true;\n        };\n        const formDesignPrivateMethods = {\n            validWidgetUnique,\n            handleClickWidget(evnt, item) {\n                if (item && item.name) {\n                    evnt.stopPropagation();\n                    reactData.activeWidget = item;\n                    formDesignMethods.dispatchEvent('click-widget', { widget: item }, evnt);\n                }\n            },\n            handleCopyWidget(evnt, widget) {\n                const { widgetObjList } = reactData;\n                const rest = XEUtils.findTree(widgetObjList, obj => obj.id === widget.id, { children: 'children' });\n                if (rest) {\n                    evnt.stopPropagation();\n                    if (validWidgetUnique(widget.name)) {\n                        const { path } = rest;\n                        const rootIndex = Number(path[0]);\n                        const newWidget = createWidget(widget.name);\n                        // 标题副本\n                        if (newWidget.title) {\n                            newWidget.title = getI18n('vxe.formDesign.widget.copyTitle', [`${widget.title}`.replace(getI18n('vxe.formDesign.widget.copyTitle', ['']), '')]);\n                        }\n                        if (rootIndex >= widgetObjList.length - 1) {\n                            widgetObjList.push(newWidget);\n                        }\n                        else {\n                            widgetObjList.splice(rootIndex + 1, 0, newWidget);\n                        }\n                        reactData.activeWidget = newWidget;\n                        reactData.widgetObjList = [...widgetObjList];\n                        formDesignMethods.dispatchEvent('copy-widget', { widget, newWidget }, evnt);\n                    }\n                }\n            },\n            handleRemoveWidget(evnt, widget) {\n                const { widgetObjList } = reactData;\n                const rest = XEUtils.findTree(widgetObjList, obj => obj.id === widget.id, { children: 'children' });\n                if (rest) {\n                    const { index, parent, items } = rest;\n                    evnt.stopPropagation();\n                    if (index >= items.length - 1) {\n                        reactData.activeWidget = items[index - 1];\n                    }\n                    else {\n                        reactData.activeWidget = items[index + 1] || null;\n                    }\n                    // 如果是行控件，使用空的控件占位\n                    if (parent && parent.name === 'row') {\n                        items[index] = createEmptyWidget();\n                    }\n                    else {\n                        items.splice(index, 1);\n                    }\n                    reactData.widgetObjList = [...widgetObjList];\n                    formDesignMethods.dispatchEvent('remove-widget', { widget }, evnt);\n                }\n            }\n        };\n        const createSettingForm = () => {\n            const { formRender, showPc, showMobile } = props;\n            let conf = getDefaultSettingFormData({\n                pcVisible: showPc,\n                mobileVisible: showMobile\n            });\n            // 如果为自定义渲染\n            if (formRender) {\n                const compConf = renderer.get(formRender.name);\n                const createFormConfig = compConf ? compConf.createFormDesignSettingFormConfig : null;\n                conf = (createFormConfig ? createFormConfig({}) : {}) || {};\n            }\n            return conf;\n        };\n        const initSettingForm = () => {\n            reactData.formData = createSettingForm();\n        };\n        const openStylePreviewEvent = () => {\n            openStyleSetting();\n        };\n        Object.assign($xeFormDesign, formDesignMethods, formDesignPrivateMethods);\n        const renderLayoutHeader = () => {\n            const extraSlot = slots.extra;\n            return h('div', {\n                class: 'vxe-form-design--header-wrapper'\n            }, [\n                h('div', {\n                    class: 'vxe-form-design--header-left'\n                }),\n                h('div', {\n                    class: 'vxe-form-design--header-middle'\n                }),\n                h('div', {\n                    class: 'vxe-form-design--header-right'\n                }, [\n                    extraSlot\n                        ? h('div', {\n                            class: 'vxe-form-design--header-extra'\n                        }, extraSlot({}))\n                        : renderEmptyElement($xeFormDesign),\n                    h('div', {\n                        class: 'vxe-form-design--header-setting'\n                    }, [\n                        h(VxeButtonComponent, {\n                            mode: 'text',\n                            status: 'primary',\n                            icon: getIcon().FORM_DESIGN_STYLE_SETTING,\n                            content: getI18n('vxe.formDesign.styleSetting.btn'),\n                            onClick: openStylePreviewEvent\n                        })\n                    ])\n                ])\n            ]);\n        };\n        const renderVN = () => {\n            const { height, showHeader } = props;\n            const vSize = computeSize.value;\n            const headerSlot = slots.header;\n            const footerSlot = slots.footer;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-form-design', {\n                        [`size--${vSize}`]: vSize\n                    }],\n                style: height\n                    ? {\n                        height: toCssUnit(height)\n                    }\n                    : null\n            }, [\n                showHeader || headerSlot\n                    ? h('div', {\n                        class: 'vxe-form-design--header'\n                    }, headerSlot ? headerSlot({}) : renderLayoutHeader())\n                    : createCommentVNode(),\n                h('div', {\n                    class: 'vxe-form-design--body'\n                }, [\n                    h(LayoutWidgetComponent),\n                    h(LayoutPreviewComponent),\n                    h(LayoutSettingComponent),\n                    h(LayoutStyleComponent, {\n                        ref: refLayoutStyle\n                    })\n                ]),\n                footerSlot\n                    ? h('div', {\n                        class: 'vxe-form-design--footer'\n                    }, footerSlot ? footerSlot({}) : [])\n                    : createCommentVNode()\n            ]);\n        };\n        $xeFormDesign.renderVN = renderVN;\n        watch(() => props.widgets, () => {\n            updateWidgetConfigs();\n        });\n        watch(() => props.widgets, () => {\n            updateWidgetConfigs();\n        });\n        watch(() => props.config, (value) => {\n            loadConfig(value || {});\n        });\n        initSettingForm();\n        updateWidgetConfigs();\n        if (props.config) {\n            loadConfig(props.config);\n        }\n        provide('$xeFormDesign', $xeFormDesign);\n        return $xeFormDesign;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { defineComponent, h, inject } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getIcon, getI18n, renderer } from '@vxe-ui/core';\nimport { getSlotVNs } from '../../ui/src/vn';\nimport { getWidgetConfig, getWidgetConfigTitle } from './widget-info';\nexport default defineComponent({\n    props: {},\n    emits: [],\n    setup() {\n        const $xeFormDesign = inject('$xeFormDesign', null);\n        if (!$xeFormDesign) {\n            return () => [];\n        }\n        const { reactData: formDesignReactData } = $xeFormDesign;\n        const dragstartEvent = (evnt) => {\n            const divEl = evnt.currentTarget;\n            const dataTransfer = evnt.dataTransfer;\n            const widgetName = divEl.getAttribute('data-widget-name') || '';\n            if ($xeFormDesign.validWidgetUnique(widgetName)) {\n                const dragWidget = $xeFormDesign.createWidget(widgetName);\n                if (dataTransfer) {\n                    dataTransfer.setData('text/plain', widgetName);\n                }\n                formDesignReactData.sortWidget = null;\n                formDesignReactData.dragWidget = dragWidget;\n            }\n            else {\n                evnt.preventDefault();\n            }\n        };\n        const dragendEvent = (evnt) => {\n            evnt.preventDefault();\n            if (formDesignReactData.dragWidget) {\n                const newWidget = formDesignReactData.dragWidget;\n                formDesignReactData.activeWidget = newWidget;\n                $xeFormDesign.dispatchEvent('add-widget', { newWidget }, evnt);\n            }\n            formDesignReactData.dragWidget = null;\n            formDesignReactData.sortWidget = null;\n        };\n        const cancelDragoverItem = (evnt, group) => {\n            const { widgetObjList, dragWidget } = formDesignReactData;\n            if (dragWidget) {\n                if (group.children.some(widget => widget.name === dragWidget.name)) {\n                    const rest = XEUtils.findTree(widgetObjList, item => item && item.id === dragWidget.id, { children: 'children' });\n                    if (rest) {\n                        rest.items.splice(rest.index, 1);\n                    }\n                }\n            }\n        };\n        const addNewWidget = (evnt, widgetName) => {\n            if ($xeFormDesign.validWidgetUnique(widgetName)) {\n                const { widgetObjList } = formDesignReactData;\n                const dragWidget = $xeFormDesign.createWidget(widgetName);\n                widgetObjList.push(dragWidget);\n                formDesignReactData.activeWidget = dragWidget;\n                formDesignReactData.sortWidget = null;\n                formDesignReactData.dragWidget = null;\n                $xeFormDesign.dispatchEvent('add-widget', { newWidget: dragWidget }, evnt);\n            }\n        };\n        const renderWidgetList = (group) => {\n            const widgetVNs = [];\n            if (group.children) {\n                group.children.forEach((widget, index) => {\n                    const { name } = widget;\n                    const configTitle = getWidgetConfigTitle(name, $xeFormDesign);\n                    const compConf = renderer.get(name) || {};\n                    const widgetConf = getWidgetConfig(name);\n                    const renderWidgetItem = compConf.renderFormDesignWidgetItem;\n                    widgetVNs.push(h('div', {\n                        key: index,\n                        class: 'vxe-form-design--widget-item'\n                    }, h('div', {\n                        class: 'vxe-form-design--widget-box',\n                        'data-widget-name': name,\n                        title: configTitle,\n                        draggable: true,\n                        onDragstart: dragstartEvent,\n                        onDragend: dragendEvent\n                    }, renderWidgetItem\n                        ? getSlotVNs(renderWidgetItem({}, { $formDesign: $xeFormDesign }))\n                        : [\n                            h('i', {\n                                class: ['vxe-form-design--widget-item-icon', widgetConf ? (widgetConf.icon || '') : '']\n                            }),\n                            h('span', {\n                                class: 'vxe-form-design--widget-item-name'\n                            }, configTitle),\n                            h('span', {\n                                class: 'vxe-form-design--widget-item-add',\n                                onClick(evnt) {\n                                    addNewWidget(evnt, name);\n                                }\n                            }, [\n                                h('i', {\n                                    class: getIcon().FORM_DESIGN_WIDGET_ADD\n                                })\n                            ])\n                        ])));\n                });\n            }\n            return widgetVNs;\n        };\n        const renderWidgetGroups = () => {\n            const { widgetConfigs } = formDesignReactData;\n            return widgetConfigs.map((config, gIndex) => {\n                const { title, group } = config;\n                return h('div', {\n                    key: gIndex,\n                    class: 'vxe-form-design--widget-group'\n                }, [\n                    h('div', {\n                        class: 'vxe-form-design--widget-title'\n                    }, group ? getI18n(`vxe.formDesign.widget.group.${group}`) : `${title || ''}`),\n                    h('div', {\n                        class: 'vxe-form-design--widget-list',\n                        onDragover(evnt) {\n                            cancelDragoverItem(evnt, config);\n                        }\n                    }, renderWidgetList(config))\n                ]);\n            });\n        };\n        return () => {\n            return h('div', {\n                class: 'vxe-form-design--widget'\n            }, renderWidgetGroups());\n        };\n    }\n});\n", "import { h, defineComponent, inject, createCommentVNode } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getIcon } from '@vxe-ui/core';\nimport VxeButtonComponent from '../../button/src/button';\nexport const ViewItemComponent = defineComponent({\n    name: 'FormDesignLayoutViewItem',\n    props: {\n        item: {\n            type: Object,\n            default: () => ({})\n        },\n        itemIndex: {\n            type: Number,\n            default: 0\n        },\n        items: {\n            type: Array,\n            default: () => []\n        }\n    },\n    emits: [],\n    setup(props, { slots }) {\n        const $xeFormDesign = inject('$xeFormDesign', null);\n        if (!$xeFormDesign) {\n            return () => [];\n        }\n        const { reactData: formDesignReactData } = $xeFormDesign;\n        const sortDragstartEvent = (evnt) => {\n            const { widgetObjList } = formDesignReactData;\n            const divEl = evnt.currentTarget;\n            const widgetId = Number(divEl.getAttribute('data-widget-id'));\n            const currRest = XEUtils.findTree(widgetObjList, item => item && item.id === widgetId, { children: 'children' });\n            if (currRest) {\n                formDesignReactData.dragWidget = null;\n                formDesignReactData.sortWidget = currRest.item;\n            }\n        };\n        const sortDragendEvent = () => {\n            formDesignReactData.activeWidget = formDesignReactData.sortWidget;\n            formDesignReactData.sortWidget = null;\n        };\n        const sortDragenterEvent = (evnt) => {\n            const { widgetObjList, sortWidget } = formDesignReactData;\n            const formDesignInternalData = $xeFormDesign.internalData;\n            const { lastDragTime } = formDesignInternalData;\n            if (lastDragTime && lastDragTime > Date.now() - 300) {\n                evnt.preventDefault();\n                return;\n            }\n            if (sortWidget) {\n                const divEl = evnt.currentTarget;\n                evnt.preventDefault();\n                const widgetId = Number(divEl.getAttribute('data-widget-id'));\n                if (widgetId !== sortWidget.id) {\n                    const targetRest = XEUtils.findTree(widgetObjList, item => item && item.id === widgetId, { children: 'children' });\n                    if (targetRest) {\n                        const currRest = XEUtils.findTree(widgetObjList, item => item && item.id === sortWidget.id, { children: 'children' });\n                        if (currRest) {\n                            // 控件换位置\n                            if (currRest.parent && currRest.parent.name === 'row') {\n                                // 如是是从 row 移出\n                                currRest.items[currRest.index] = $xeFormDesign.createEmptyWidget();\n                            }\n                            else {\n                                currRest.items.splice(currRest.index, 1);\n                            }\n                            targetRest.items.splice(targetRest.index, 0, currRest.item);\n                            formDesignInternalData.lastDragTime = Date.now();\n                            $xeFormDesign.dispatchEvent('drag-widget', { widget: currRest.item }, evnt);\n                        }\n                    }\n                }\n            }\n        };\n        // const dragoverItemEvent = (evnt: DragEvent) => {\n        //   // const { sortWidget, dragWidget } = formDesignReactData\n        //   // if (sortWidget || dragWidget) {\n        //   //   evnt.preventDefault()\n        //   // }\n        // }\n        const handleClickEvent = (evnt, item) => {\n            $xeFormDesign.handleClickWidget(evnt, item);\n        };\n        return () => {\n            const { dragWidget, activeWidget, sortWidget } = formDesignReactData;\n            const { item } = props;\n            const { name } = item;\n            const isActive = activeWidget && activeWidget.id === item.id;\n            const defaultSlot = slots.default;\n            return h('div', {\n                key: item.id,\n                'data-widget-id': item.id,\n                draggable: true,\n                class: ['vxe-form-design--preview-item', `widget-${XEUtils.kebabCase(name)}`, {\n                        'is--active': isActive,\n                        'is--sort': sortWidget && sortWidget.id === item.id,\n                        'is--drag': dragWidget && dragWidget.id === item.id\n                    }],\n                onDragstart: sortDragstartEvent,\n                onDragend: sortDragendEvent,\n                onDragenter: sortDragenterEvent,\n                // onDragover: dragoverItemEvent,\n                onClick(evnt) {\n                    handleClickEvent(evnt, item);\n                }\n            }, [\n                h('div', {\n                    class: 'vxe-form-design--preview-item-view vxe-form--item-row'\n                }, defaultSlot ? defaultSlot({}) : []),\n                isActive\n                    ? h('div', {\n                        class: 'vxe-form-design--preview-item-operate'\n                    }, [\n                        h(VxeButtonComponent, {\n                            icon: getIcon().FORM_DESIGN_WIDGET_COPY,\n                            status: 'primary',\n                            size: 'mini',\n                            circle: true,\n                            onClick(params) {\n                                $xeFormDesign.handleCopyWidget(params.$event, item);\n                            }\n                        }),\n                        h(VxeButtonComponent, {\n                            icon: getIcon().FORM_DESIGN_WIDGET_DELETE,\n                            status: 'danger',\n                            size: 'mini',\n                            circle: true,\n                            onClick(params) {\n                                $xeFormDesign.handleRemoveWidget(params.$event, item);\n                            }\n                        })\n                    ])\n                    : createCommentVNode()\n            ]);\n        };\n    }\n});\n", "import { defineComponent, h, inject, TransitionGroup } from 'vue';\nimport { renderer } from '@vxe-ui/core';\nimport { getSlotVNs } from '../../ui/src/vn';\nimport { ViewItemComponent } from './layout-view-item';\nimport { hasFormDesignLayoutType } from '../src/util';\nimport VxeFormComponent from '../../form/src/form';\nimport XEUtils from 'xe-utils';\nexport default defineComponent({\n    name: 'FormDesignLayoutPreview',\n    props: {},\n    emits: [],\n    setup() {\n        const $xeFormDesign = inject('$xeFormDesign', null);\n        if (!$xeFormDesign) {\n            return () => [];\n        }\n        const { reactData: formDesignReactData } = $xeFormDesign;\n        const dragenterEvent = (evnt) => {\n            const { widgetObjList, dragWidget } = formDesignReactData;\n            if (dragWidget) {\n                evnt.preventDefault();\n                const rest = XEUtils.findTree(widgetObjList, item => item && item.id === dragWidget.id, { children: 'children' });\n                if (!rest) {\n                    formDesignReactData.sortWidget = dragWidget;\n                    widgetObjList.push(dragWidget);\n                    $xeFormDesign.dispatchEvent('drag-widget', { widget: dragWidget }, evnt);\n                }\n            }\n        };\n        const dragoverEvent = (evnt) => {\n            evnt.preventDefault();\n        };\n        let lastDragTime = Date.now();\n        const handleDragenterTopPlaceEvent = (evnt) => {\n            const { widgetObjList, sortWidget } = formDesignReactData;\n            evnt.stopPropagation();\n            if (lastDragTime > Date.now() - 300) {\n                evnt.preventDefault();\n                return;\n            }\n            if (sortWidget) {\n                if (hasFormDesignLayoutType(sortWidget)) {\n                    return;\n                }\n                // const targetRest = XEUtils.findTree(widgetObjList, item => item && item.id === widgetId, { children: 'children' })\n                const currRest = XEUtils.findTree(widgetObjList, item => item.id === sortWidget.id, { children: 'children' });\n                if (currRest) {\n                    const { item, index, items, parent } = currRest;\n                    if (parent && parent.name === 'row') {\n                        // 如是是从 row 移出\n                        currRest.items[currRest.index] = $xeFormDesign.createEmptyWidget();\n                    }\n                    else {\n                        items.splice(index, 1);\n                    }\n                    widgetObjList.unshift(item);\n                    lastDragTime = Date.now();\n                    $xeFormDesign.dispatchEvent('drag-widget', { widget: item }, evnt);\n                }\n            }\n        };\n        const handleDragenterBottomPlaceEvent = (evnt) => {\n            const { widgetObjList, sortWidget } = formDesignReactData;\n            evnt.stopPropagation();\n            if (lastDragTime > Date.now() - 300) {\n                evnt.preventDefault();\n                return;\n            }\n            if (sortWidget) {\n                if (hasFormDesignLayoutType(sortWidget)) {\n                    return;\n                }\n                // const targetRest = XEUtils.findTree(widgetObjList, item => item && item.id === widgetId, { children: 'children' })\n                const currRest = XEUtils.findTree(widgetObjList, item => item.id === sortWidget.id, { children: 'children' });\n                if (currRest) {\n                    const { item, index, items, parent } = currRest;\n                    if (parent && parent.name === 'row') {\n                        // 如是是从 row 移出\n                        currRest.items[currRest.index] = $xeFormDesign.createEmptyWidget();\n                    }\n                    else {\n                        items.splice(index, 1);\n                    }\n                    widgetObjList.push(item);\n                    lastDragTime = Date.now();\n                    $xeFormDesign.dispatchEvent('drag-widget', { widget: item }, evnt);\n                }\n            }\n        };\n        return () => {\n            const { widgetObjList } = formDesignReactData;\n            return h('div', {\n                class: 'vxe-form-design--preview',\n                onDragenter: dragenterEvent,\n                onDragover: dragoverEvent\n            }, [\n                h('div', {\n                    class: 'vxe-form-design--preview-wrapper'\n                }, [\n                    h('div', {\n                        class: 'vxe-form-design--preview-place-widget',\n                        onDragenter: handleDragenterTopPlaceEvent\n                    }),\n                    h(VxeFormComponent, {\n                        customLayout: true,\n                        span: 24,\n                        vertical: true\n                    }, {\n                        default() {\n                            return h(TransitionGroup, {\n                                class: 'vxe-form-design--preview-list',\n                                tag: 'div',\n                                name: 'vxe-form-design--preview-list'\n                            }, {\n                                default: () => {\n                                    return widgetObjList.map((widget, widgetIndex) => {\n                                        return h(ViewItemComponent, {\n                                            key: widget.id,\n                                            item: widget,\n                                            itemIndex: widgetIndex,\n                                            items: widgetObjList\n                                        }, {\n                                            default() {\n                                                const { name } = widget;\n                                                const compConf = renderer.get(name) || {};\n                                                const renderWidgetDesignView = compConf.renderFormDesignWidgetEdit || compConf.renderFormDesignWidgetView;\n                                                const renderOpts = widget;\n                                                const isEditMode = true;\n                                                const params = { widget, readonly: false, disabled: false, isEditMode, isViewMode: !isEditMode, $formDesign: $xeFormDesign, $formView: null };\n                                                return renderWidgetDesignView ? getSlotVNs(renderWidgetDesignView(renderOpts, params)) : [];\n                                            }\n                                        });\n                                    });\n                                }\n                            });\n                        }\n                    }),\n                    h('div', {\n                        class: 'vxe-form-design--preview-place-widget',\n                        onDragenter: handleDragenterBottomPlaceEvent\n                    })\n                ])\n            ]);\n        };\n    }\n});\n", "import { defineComponent, ref, h, reactive, inject, provide, computed, onUnmounted, createCommentVNode, watch, nextTick, onMounted } from 'vue';\nimport { createEvent, getConfig, getIcon, globalEvents, permission, renderEmptyElement } from '../../ui';\nimport { getSlotVNs } from '../../ui/src/vn';\nimport { toCssUnit } from '../../ui/src/dom';\nimport { isEnableConf } from '../../ui/src/utils';\nimport { warnLog, errLog } from '../../ui/src/log';\nimport XEUtils from 'xe-utils';\nexport default defineComponent({\n    name: 'VxeTabs',\n    props: {\n        modelValue: [String, Number, Boolean],\n        options: Array,\n        height: [String, Number],\n        destroyOnClose: Boolean,\n        titleWidth: [String, Number],\n        titleAlign: [String, Number],\n        type: String,\n        showClose: Boolean,\n        padding: {\n            type: Boolean,\n            default: () => getConfig().tabs.padding\n        },\n        trigger: String,\n        beforeChangeMethod: Function,\n        closeConfig: Object,\n        refreshConfig: Object,\n        // 已废弃\n        beforeCloseMethod: Function\n    },\n    emits: [\n        'update:modelValue',\n        'change',\n        'tab-change',\n        'tab-change-fail',\n        'tab-close',\n        'tab-close-fail',\n        'tab-click',\n        'tab-load'\n    ],\n    setup(props, context) {\n        const { slots, emit } = context;\n        const xID = XEUtils.uniqueId();\n        const $xeParentTabs = inject('$xeTabs', null);\n        const refElem = ref();\n        const refHeadWrapperElem = ref();\n        const reactData = reactive({\n            staticTabs: [],\n            activeName: null,\n            initNames: [],\n            lintLeft: 0,\n            lintWidth: 0,\n            isTabOver: false,\n            resizeFlag: 1,\n            cacheTabMaps: {}\n        });\n        const internalData = {\n            slTimeout: undefined\n        };\n        const refMaps = {\n            refElem\n        };\n        const computeCloseOpts = computed(() => {\n            return Object.assign({}, getConfig().tabs.closeConfig, props.closeConfig);\n        });\n        const computeRefreshOpts = computed(() => {\n            return Object.assign({}, getConfig().tabs.refreshConfig, props.refreshConfig);\n        });\n        const computeTabOptions = computed(() => {\n            const { options } = props;\n            return (options || []).filter((item) => handleFilterTab(item));\n        });\n        const computeTabStaticOptions = computed(() => {\n            const { staticTabs } = reactData;\n            return staticTabs.filter((item) => handleFilterTab(item));\n        });\n        const computeMaps = {};\n        const $xeTabs = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const handleFilterTab = (item) => {\n            const { permissionCode } = item;\n            if (permissionCode) {\n                if (!permission.checkVisible(permissionCode)) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        const callSlot = (slotFunc, params) => {\n            if (slotFunc) {\n                if (XEUtils.isString(slotFunc)) {\n                    slotFunc = slots[slotFunc] || null;\n                }\n                if (XEUtils.isFunction(slotFunc)) {\n                    return getSlotVNs(slotFunc(params));\n                }\n            }\n            return [];\n        };\n        const updateTabStyle = () => {\n            nextTick(() => {\n                const { type } = props;\n                const { activeName } = reactData;\n                const tabOptions = computeTabOptions.value;\n                const tabStaticOptions = computeTabStaticOptions.value;\n                const headerWrapperEl = refHeadWrapperElem.value;\n                let lintWidth = 0;\n                let lintLeft = 0;\n                let isOver = false;\n                if (headerWrapperEl) {\n                    const index = XEUtils.findIndexOf(tabStaticOptions.length ? tabStaticOptions : tabOptions, item => item.name === activeName);\n                    const { children, scrollWidth, clientWidth } = headerWrapperEl;\n                    isOver = scrollWidth !== clientWidth;\n                    if (index > -1) {\n                        const tabEl = children[index];\n                        const tabWidth = tabEl.clientWidth;\n                        if (type) {\n                            if (type === 'card') {\n                                lintWidth = tabWidth + 2;\n                                lintLeft = tabEl.offsetLeft;\n                            }\n                            else if (type === 'border-card') {\n                                lintWidth = tabWidth + 2;\n                                lintLeft = tabEl.offsetLeft - 1;\n                            }\n                        }\n                        else {\n                            lintWidth = Math.max(4, Math.floor(tabWidth * 0.6));\n                            lintLeft = tabEl.offsetLeft + Math.floor((tabWidth - lintWidth) / 2);\n                        }\n                    }\n                }\n                reactData.lintLeft = lintLeft;\n                reactData.lintWidth = lintWidth;\n                reactData.isTabOver = isOver;\n            });\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $tabs: $xeTabs }, params));\n        };\n        const addInitName = (name, evnt) => {\n            const { initNames } = reactData;\n            if (name && !initNames.includes(name)) {\n                dispatchEvent('tab-load', { name }, evnt);\n                initNames.push(name);\n                return true;\n            }\n            return false;\n        };\n        const initDefaultName = (list) => {\n            let activeName = null;\n            const nameMaps = {};\n            if (list && list.length) {\n                let validVal = false;\n                activeName = props.modelValue;\n                list.forEach((item) => {\n                    const { name, preload } = item || {};\n                    if (name) {\n                        nameMaps[`${name}`] = {\n                            loading: false\n                        };\n                        if (activeName === name) {\n                            validVal = true;\n                        }\n                        if (preload) {\n                            addInitName(name, null);\n                        }\n                    }\n                });\n                if (!validVal) {\n                    activeName = list[0].name;\n                    addInitName(activeName, null);\n                    emit('update:modelValue', activeName);\n                }\n            }\n            reactData.activeName = activeName;\n            reactData.cacheTabMaps = nameMaps;\n        };\n        const clickEvent = (evnt, item) => {\n            const { trigger } = props;\n            const beforeMethod = props.beforeChangeMethod || getConfig().tabs.beforeChangeMethod;\n            const { activeName } = reactData;\n            const { name } = item;\n            const value = name;\n            dispatchEvent('tab-click', { name }, evnt);\n            if (trigger === 'manual') {\n                return;\n            }\n            if (name !== activeName) {\n                Promise.resolve(!beforeMethod || beforeMethod({ $tabs: $xeTabs, name, oldName: activeName, newName: name, option: item })).then((status) => {\n                    if (status) {\n                        reactData.activeName = name;\n                        emit('update:modelValue', value);\n                        addInitName(name, evnt);\n                        dispatchEvent('change', { value, name, oldName: activeName, newName: name, option: item }, evnt);\n                        dispatchEvent('tab-change', { value, name, oldName: activeName, newName: name, option: item }, evnt);\n                    }\n                    else {\n                        dispatchEvent('tab-change-fail', { value, name, oldName: activeName, newName: name, option: item }, evnt);\n                    }\n                }).catch(() => {\n                    dispatchEvent('tab-change-fail', { value, name, oldName: activeName, newName: name, option: item }, evnt);\n                });\n            }\n        };\n        const handleRefreshTabEvent = (evnt, item) => {\n            evnt.stopPropagation();\n            const { activeName, cacheTabMaps } = reactData;\n            const { name } = item;\n            const refreshOpts = computeRefreshOpts.value;\n            const { queryMethod } = refreshOpts;\n            const cacheItem = name ? cacheTabMaps[`${name}`] : null;\n            if (cacheItem) {\n                if (queryMethod) {\n                    cacheItem.loading = true;\n                    Promise.resolve(queryMethod({ $tabs: $xeTabs, value: activeName, name, option: item })).finally(() => {\n                        cacheItem.loading = false;\n                    });\n                }\n                else {\n                    errLog('vxe.error.notFunc', ['refresh-config.queryMethod']);\n                }\n            }\n        };\n        const handleCloseTabEvent = (evnt, item, index, list) => {\n            evnt.stopPropagation();\n            const { activeName } = reactData;\n            const closeOpts = computeCloseOpts.value;\n            const beforeMethod = closeOpts.beforeMethod || props.beforeCloseMethod || getConfig().tabs.beforeCloseMethod;\n            const { name } = item;\n            const value = activeName;\n            let nextName = value;\n            if (activeName === name) {\n                const nextItem = index < list.length - 1 ? list[index + 1] : list[index - 1];\n                nextName = nextItem ? nextItem.name : null;\n            }\n            Promise.resolve(!beforeMethod || beforeMethod({ $tabs: $xeTabs, value, name, nextName, option: item })).then(status => {\n                if (status) {\n                    dispatchEvent('tab-close', { value, name, nextName }, evnt);\n                }\n                else {\n                    dispatchEvent('tab-close-fail', { value, name, nextName }, evnt);\n                }\n            }).catch(() => {\n                dispatchEvent('tab-close-fail', { value, name, nextName }, evnt);\n            });\n        };\n        const startScrollAnimation = (offsetPos, offsetSize) => {\n            const { slTimeout } = internalData;\n            let offsetLeft = offsetSize;\n            let scrollCount = 6;\n            let delayNum = 35;\n            if (slTimeout) {\n                clearTimeout(slTimeout);\n                internalData.slTimeout = undefined;\n            }\n            const scrollAnimate = () => {\n                const headerWrapperEl = refHeadWrapperElem.value;\n                if (scrollCount > 0) {\n                    scrollCount--;\n                    if (headerWrapperEl) {\n                        const { clientWidth, scrollWidth, scrollLeft } = headerWrapperEl;\n                        offsetLeft = Math.floor(offsetLeft / 2);\n                        if (offsetPos > 0) {\n                            if (clientWidth + scrollLeft < scrollWidth) {\n                                headerWrapperEl.scrollLeft += offsetLeft;\n                                delayNum -= 4;\n                                internalData.slTimeout = setTimeout(scrollAnimate, delayNum);\n                            }\n                        }\n                        else {\n                            if (scrollLeft > 0) {\n                                headerWrapperEl.scrollLeft -= offsetLeft;\n                                delayNum -= 4;\n                                internalData.slTimeout = setTimeout(scrollAnimate, delayNum);\n                            }\n                        }\n                        updateTabStyle();\n                    }\n                }\n            };\n            scrollAnimate();\n        };\n        const handleScrollToLeft = (offsetPos) => {\n            const headerWrapperEl = refHeadWrapperElem.value;\n            if (headerWrapperEl) {\n                const offsetSize = Math.floor(headerWrapperEl.clientWidth * 0.75);\n                startScrollAnimation(offsetPos, offsetSize);\n            }\n        };\n        const scrollLeftEvent = () => {\n            handleScrollToLeft(-1);\n        };\n        const scrollRightEvent = () => {\n            handleScrollToLeft(1);\n        };\n        const scrollToTab = (name) => {\n            const tabOptions = computeTabOptions.value;\n            const tabStaticOptions = computeTabStaticOptions.value;\n            return nextTick().then(() => {\n                const headerWrapperEl = refHeadWrapperElem.value;\n                if (headerWrapperEl) {\n                    const index = XEUtils.findIndexOf(tabStaticOptions.length ? tabStaticOptions : tabOptions, item => item.name === name);\n                    if (index > -1) {\n                        const { scrollLeft, clientWidth, children } = headerWrapperEl;\n                        const tabEl = children[index];\n                        if (tabEl) {\n                            const tabOffsetLeft = tabEl.offsetLeft;\n                            const tabClientWidth = tabEl.clientWidth;\n                            // 如果右侧被挡\n                            const overSize = (tabOffsetLeft + tabClientWidth) - (scrollLeft + clientWidth);\n                            if (overSize > 0) {\n                                headerWrapperEl.scrollLeft += overSize;\n                            }\n                            // 如果左侧被挡，优先\n                            if (tabOffsetLeft < scrollLeft) {\n                                headerWrapperEl.scrollLeft = tabOffsetLeft;\n                            }\n                        }\n                    }\n                    updateTabStyle();\n                }\n            });\n        };\n        const handlePrevNext = (isNext) => {\n            const { activeName } = reactData;\n            const tabOptions = computeTabOptions.value;\n            const tabStaticOptions = computeTabStaticOptions.value;\n            const list = tabStaticOptions.length ? tabStaticOptions : tabOptions;\n            const index = XEUtils.findIndexOf(list, item => item.name === activeName);\n            if (index > -1) {\n                let item = null;\n                if (isNext) {\n                    if (index < list.length - 1) {\n                        item = list[index + 1];\n                    }\n                }\n                else {\n                    if (index > 0) {\n                        item = list[index - 1];\n                    }\n                }\n                if (item) {\n                    const name = item.name;\n                    const value = name;\n                    reactData.activeName = name;\n                    emit('update:modelValue', value);\n                    addInitName(name, null);\n                }\n            }\n            return nextTick();\n        };\n        const tabsMethods = {\n            dispatchEvent,\n            scrollToTab,\n            prev() {\n                return handlePrevNext(false);\n            },\n            next() {\n                return handlePrevNext(true);\n            },\n            prevTab() {\n                if (process.env.NODE_ENV === 'development') {\n                    warnLog('vxe.error.delFunc', ['prevTab', 'prev']);\n                }\n                return tabsMethods.prev();\n            },\n            nextTab() {\n                if (process.env.NODE_ENV === 'development') {\n                    warnLog('vxe.error.delFunc', ['nextTab', 'next']);\n                }\n                return tabsMethods.next();\n            }\n        };\n        const tabsPrivateMethods = {};\n        Object.assign($xeTabs, tabsMethods, tabsPrivateMethods);\n        const renderTabHeader = (tabList) => {\n            const { type, titleWidth: allTitleWidth, titleAlign: allTitleAlign, showClose, closeConfig, refreshConfig } = props;\n            const { activeName, lintLeft, lintWidth, isTabOver, cacheTabMaps } = reactData;\n            const extraSlot = slots.extra;\n            const closeOpts = computeCloseOpts.value;\n            const closeVisibleMethod = closeOpts.visibleMethod;\n            const refreshOpts = computeRefreshOpts.value;\n            const refreshVisibleMethod = refreshOpts.visibleMethod;\n            return h('div', {\n                class: 'vxe-tabs-header'\n            }, [\n                isTabOver\n                    ? h('div', {\n                        class: 'vxe-tabs-header--bar vxe-tabs-header--left-bar',\n                        onClick: scrollLeftEvent\n                    }, [\n                        h('span', {\n                            class: getIcon().TABS_TAB_BUTTON_LEFT\n                        })\n                    ])\n                    : createCommentVNode(),\n                h('div', {\n                    class: 'vxe-tabs-header--wrapper'\n                }, [\n                    h('div', {\n                        ref: refHeadWrapperElem,\n                        class: 'vxe-tabs-header--item-wrapper'\n                    }, tabList.map((item, index) => {\n                        const { title, titleWidth, titleAlign, icon, name, slots } = item;\n                        const titleSlot = slots ? (slots.title || slots.tab) : null;\n                        const itemWidth = titleWidth || allTitleWidth;\n                        const itemAlign = titleAlign || allTitleAlign;\n                        const params = { $tabs: $xeTabs, value: activeName, name, option: item };\n                        const isActive = activeName === name;\n                        const cacheItem = name ? cacheTabMaps[`${name}`] : null;\n                        const isLoading = cacheItem ? cacheItem.loading : false;\n                        return h('div', {\n                            key: `${name}`,\n                            class: ['vxe-tabs-header--item', itemAlign ? `align--${itemAlign}` : '', {\n                                    'is--active': isActive\n                                }],\n                            style: itemWidth\n                                ? {\n                                    width: toCssUnit(itemWidth)\n                                }\n                                : null,\n                            onClick(evnt) {\n                                clickEvent(evnt, item);\n                            }\n                        }, [\n                            h('div', {\n                                class: 'vxe-tabs-header--item-inner'\n                            }, [\n                                h('div', {\n                                    class: 'vxe-tabs-header--item-content'\n                                }, [\n                                    icon\n                                        ? h('span', {\n                                            class: 'vxe-tabs-header--item-icon'\n                                        }, [\n                                            h('i', {\n                                                class: icon\n                                            })\n                                        ])\n                                        : createCommentVNode(),\n                                    h('span', {\n                                        class: 'vxe-tabs-header--item-name'\n                                    }, titleSlot ? callSlot(titleSlot, { name, title }) : `${title}`)\n                                ]),\n                                (isEnableConf(refreshConfig) || refreshOpts.enabled) && (refreshVisibleMethod ? refreshVisibleMethod(params) : isActive)\n                                    ? h('div', {\n                                        class: 'vxe-tabs-header--refresh-btn',\n                                        onClick(evnt) {\n                                            handleRefreshTabEvent(evnt, item);\n                                        }\n                                    }, [\n                                        h('i', {\n                                            class: isLoading ? getIcon().TABS_TAB_REFRESH_LOADING : getIcon().TABS_TAB_REFRESH\n                                        })\n                                    ])\n                                    : createCommentVNode(),\n                                (showClose || (isEnableConf(closeConfig) || closeOpts.enabled)) && (!closeVisibleMethod || closeVisibleMethod(params))\n                                    ? h('div', {\n                                        class: 'vxe-tabs-header--close-btn',\n                                        onClick(evnt) {\n                                            handleCloseTabEvent(evnt, item, index, tabList);\n                                        }\n                                    }, [\n                                        h('i', {\n                                            class: getIcon().TABS_TAB_CLOSE\n                                        })\n                                    ])\n                                    : createCommentVNode()\n                            ])\n                        ]);\n                    }).concat([\n                        h('span', {\n                            key: 'line',\n                            class: `vxe-tabs-header--active-line type--${type || 'default'}`,\n                            style: {\n                                left: `${lintLeft}px`,\n                                width: `${lintWidth}px`\n                            }\n                        })\n                    ]))\n                ]),\n                isTabOver\n                    ? h('div', {\n                        class: 'vxe-tabs-header--bar vxe-tabs-header--right-bar',\n                        onClick: scrollRightEvent\n                    }, [\n                        h('span', {\n                            class: getIcon().TABS_TAB_BUTTON_RIGHT\n                        })\n                    ])\n                    : createCommentVNode(),\n                extraSlot\n                    ? h('div', {\n                        class: 'vxe-tabs-header--extra'\n                    }, getSlotVNs(extraSlot({})))\n                    : createCommentVNode()\n            ]);\n        };\n        const renderTabPane = (item) => {\n            const { initNames, activeName } = reactData;\n            const { name, slots } = item;\n            const defaultSlot = slots ? slots.default : null;\n            return name && initNames.includes(name)\n                ? h('div', {\n                    key: `${name}`,\n                    class: ['vxe-tabs-pane--item', {\n                            'is--visible': activeName === name,\n                            'has--content': !!defaultSlot\n                        }]\n                }, defaultSlot ? callSlot(defaultSlot, { name }) : [])\n                : createCommentVNode();\n        };\n        const renderTabContent = (tabList) => {\n            const { destroyOnClose } = props;\n            const { activeName } = reactData;\n            const activeDefaultTab = tabList.find(item => item.name === activeName);\n            if (destroyOnClose) {\n                return [activeDefaultTab ? renderTabPane(activeDefaultTab) : createCommentVNode()];\n            }\n            return tabList.map((item) => renderTabPane(item));\n        };\n        const renderVN = () => {\n            const { type, height, padding, trigger } = props;\n            const tabOptions = computeTabOptions.value;\n            const tabStaticOptions = computeTabStaticOptions.value;\n            const defaultSlot = slots.default;\n            const footerSlot = slots.footer;\n            const tabList = defaultSlot ? tabStaticOptions : tabOptions;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-tabs', `vxe-tabs--${type || 'default'}`, `trigger--${trigger === 'manual' ? 'trigger' : 'default'}`, {\n                        'is--padding': padding,\n                        'is--height': height\n                    }],\n                style: height\n                    ? {\n                        height: toCssUnit(height)\n                    }\n                    : null\n            }, [\n                h('div', {\n                    class: 'vxe-tabs-slots'\n                }, defaultSlot ? defaultSlot({}) : []),\n                renderTabHeader(tabList),\n                h('div', {\n                    class: 'vxe-tabs-pane'\n                }, renderTabContent(tabList)),\n                footerSlot\n                    ? h('div', {\n                        class: 'vxe-tabs-footer'\n                    }, callSlot(footerSlot, {}))\n                    : renderEmptyElement($xeTabs)\n            ]);\n        };\n        watch(() => props.modelValue, (val) => {\n            addInitName(val, null);\n            reactData.activeName = val;\n        });\n        watch(() => reactData.activeName, (val) => {\n            scrollToTab(val);\n            nextTick(() => {\n                reactData.resizeFlag++;\n            });\n        });\n        const optsFlag = ref(0);\n        watch(() => props.options ? props.options.length : -1, () => {\n            optsFlag.value++;\n        });\n        watch(() => props.options, () => {\n            optsFlag.value++;\n        });\n        watch(optsFlag, () => {\n            initDefaultName(props.options);\n            updateTabStyle();\n        });\n        const stFlag = ref(0);\n        watch(() => reactData.staticTabs ? reactData.staticTabs.length : -1, () => {\n            stFlag.value++;\n        });\n        watch(() => reactData.staticTabs, () => {\n            stFlag.value++;\n        });\n        watch(stFlag, () => {\n            initDefaultName(reactData.staticTabs);\n            updateTabStyle();\n        });\n        if ($xeParentTabs) {\n            watch(() => $xeParentTabs ? $xeParentTabs.reactData.resizeFlag : null, () => {\n                reactData.resizeFlag++;\n            });\n        }\n        watch(() => reactData.resizeFlag, () => {\n            nextTick(() => {\n                updateTabStyle();\n            });\n        });\n        onMounted(() => {\n            globalEvents.on($xeTabs, 'resize', updateTabStyle);\n            updateTabStyle();\n        });\n        onUnmounted(() => {\n            globalEvents.off($xeTabs, 'resize');\n        });\n        provide('$xeTabs', $xeTabs);\n        addInitName(props.modelValue, null);\n        initDefaultName(reactData.staticTabs.length ? reactData.staticTabs : props.options);\n        $xeTabs.renderVN = renderVN;\n        return $xeTabs;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { defineComponent, ref, h, reactive, watch, inject, onMounted, onUnmounted } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { createEvent } from '../../ui';\nimport { assembleTabItem, destroyTabItem } from './util';\nexport default defineComponent({\n    name: 'VxeTabPane',\n    props: {\n        title: [String, Number],\n        name: [String, Number],\n        icon: String,\n        titleWidth: [String, Number],\n        titleAlign: [String, Number],\n        preload: Boolean,\n        permissionCode: [String, Number]\n    },\n    emits: [],\n    setup(props, context) {\n        const { slots, emit } = context;\n        const xID = XEUtils.uniqueId();\n        const refElem = ref();\n        const $xeTabs = inject('$xeTabs', null);\n        const reactData = reactive({});\n        const tabConfig = reactive({\n            id: xID,\n            title: props.title,\n            name: props.name,\n            icon: props.icon,\n            titleWidth: props.titleWidth,\n            titleAlign: props.titleAlign,\n            preload: props.preload,\n            permissionCode: props.permissionCode,\n            slots: slots\n        });\n        const refMaps = {\n            refElem\n        };\n        const computeMaps = {};\n        const $xeTabPane = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $tabPane: $xeTabPane }, params));\n        };\n        const tabPaneMethods = {\n            dispatchEvent\n        };\n        const tabPanePrivateMethods = {};\n        Object.assign($xeTabPane, tabPaneMethods, tabPanePrivateMethods);\n        watch(() => props.title, (val) => {\n            tabConfig.title = val;\n        });\n        watch(() => props.name, (val) => {\n            tabConfig.name = val;\n        });\n        watch(() => props.icon, (val) => {\n            tabConfig.icon = val;\n        });\n        watch(() => props.permissionCode, (val) => {\n            tabConfig.permissionCode = val;\n        });\n        onMounted(() => {\n            const elem = refElem.value;\n            if ($xeTabs && elem) {\n                assembleTabItem($xeTabs, elem, tabConfig);\n            }\n        });\n        onUnmounted(() => {\n            if ($xeTabs) {\n                destroyTabItem($xeTabs, tabConfig);\n            }\n        });\n        const renderVN = () => {\n            return h('div', {\n                ref: refElem\n            }, []);\n        };\n        $xeTabPane.renderVN = renderVN;\n        return $xeTabPane;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import XEUtils from 'xe-utils';\nexport function assembleTabItem($xeTabs, elem, tabConfig) {\n    const staticTabs = $xeTabs.reactData.staticTabs;\n    const parentElem = elem.parentNode;\n    if (parentElem) {\n        staticTabs.splice(XEUtils.arrayIndexOf(parentElem.children, elem), 0, tabConfig);\n        $xeTabs.reactData.staticTabs = staticTabs.slice(0);\n    }\n}\nexport function destroyTabItem($xeTabs, tabConfig) {\n    const staticTabs = $xeTabs.reactData.staticTabs;\n    const matchObj = XEUtils.findTree(staticTabs, item => item.id === tabConfig.id, { children: 'children' });\n    if (matchObj) {\n        matchObj.items.splice(matchObj.index, 1);\n    }\n    $xeTabs.reactData.staticTabs = staticTabs.slice(0);\n}\n", "import { defineComponent, h, onUnmounted, inject, ref, provide, onMounted, reactive, createCommentVNode } from 'vue';\nimport { createItem, watchItem, destroyItem, assembleItem } from './util';\nimport { renderer } from '../../ui';\nimport { isEnableConf } from '../../ui/src/utils';\nimport { renderTitle, renderItemContent, getItemClass, getItemContentClass } from './render';\nimport XEUtils from 'xe-utils';\nexport const formItemProps = {\n    title: String,\n    field: String,\n    span: {\n        type: [String, Number],\n        default: null\n    },\n    align: {\n        type: String,\n        default: null\n    },\n    verticalAlign: {\n        type: String,\n        default: null\n    },\n    titleBackground: {\n        type: Boolean,\n        default: null\n    },\n    titleBold: {\n        type: Boolean,\n        default: null\n    },\n    titleAlign: {\n        type: String,\n        default: null\n    },\n    titleWidth: {\n        type: [String, Number],\n        default: null\n    },\n    titleColon: {\n        type: Boolean,\n        default: null\n    },\n    titleAsterisk: {\n        type: Boolean,\n        default: null\n    },\n    showTitle: {\n        type: Boolean,\n        default: true\n    },\n    vertical: {\n        type: Boolean,\n        default: null\n    },\n    padding: {\n        type: Boolean,\n        default: null\n    },\n    className: [String, Function],\n    contentClassName: [String, Function],\n    contentStyle: [Object, Function],\n    titleClassName: [String, Function],\n    titleStyle: [Object, Function],\n    titleOverflow: {\n        type: [Boolean, String],\n        default: null\n    },\n    titlePrefix: Object,\n    titleSuffix: Object,\n    resetValue: { default: null },\n    visibleMethod: Function,\n    visible: {\n        type: Boolean,\n        default: null\n    },\n    showContent: {\n        type: Boolean,\n        default: null\n    },\n    folding: Boolean,\n    collapseNode: Boolean,\n    itemRender: Object,\n    rules: Array\n};\nexport default defineComponent({\n    name: 'VxeFormItem',\n    props: formItemProps,\n    setup(props, { slots }) {\n        const refElem = ref();\n        const $xeForm = inject('$xeForm', {});\n        const $xeFormGroup = inject('$xeFormGroup', null);\n        const formItem = reactive(createItem($xeForm, props));\n        formItem.slots = slots;\n        const formItemInfo = { itemConfig: formItem };\n        provide('xeFormItemInfo', formItemInfo);\n        const renderItem = ($xeForm, item) => {\n            const formProps = $xeForm.props;\n            const $xeGrid = $xeForm.xeGrid;\n            const { data, readonly, disabled } = formProps;\n            const { visible, field, itemRender, contentStyle, showContent } = item;\n            const compConf = isEnableConf(itemRender) ? renderer.get(itemRender.name) : null;\n            const itemStyle = compConf ? (compConf.formItemStyle || compConf.itemStyle) : null;\n            const itemContentStyle = compConf ? (compConf.formItemContentStyle || compConf.itemContentStyle) : null;\n            const params = { data, disabled, readonly, field, property: field, item, $form: $xeForm, $grid: $xeGrid };\n            if (visible === false) {\n                return createCommentVNode();\n            }\n            return h('div', {\n                ref: refElem,\n                key: item.id,\n                class: getItemClass($xeForm, item),\n                style: XEUtils.isFunction(itemStyle) ? itemStyle(params) : itemStyle\n            }, [\n                renderTitle($xeForm, item),\n                showContent === false\n                    ? createCommentVNode()\n                    : h('div', {\n                        class: getItemContentClass($xeForm, item),\n                        style: Object.assign({}, XEUtils.isFunction(itemContentStyle) ? itemContentStyle(params) : itemContentStyle, XEUtils.isFunction(contentStyle) ? contentStyle(params) : contentStyle)\n                    }, [\n                        renderItemContent($xeForm, item)\n                    ])\n            ]);\n        };\n        const renderVN = () => {\n            const customLayout = $xeForm ? $xeForm.props.customLayout : false;\n            const item = formItem;\n            return customLayout\n                ? renderItem($xeForm, item)\n                : h('div', {\n                    ref: refElem\n                });\n        };\n        const $xeFormitem = {\n            formItem,\n            renderVN\n        };\n        watchItem(props, formItem);\n        onMounted(() => {\n            const elem = refElem.value;\n            assembleItem($xeForm, elem, formItem, $xeFormGroup);\n        });\n        onUnmounted(() => {\n            destroyItem($xeForm, formItem);\n        });\n        provide('$xeFormItem', $xeFormitem);\n        provide('$xeFormGroup', null);\n        return $xeFormitem;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { defineComponent, h, ref, computed, reactive, nextTick, createCommentVNode, inject } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getConfig, createEvent, useSize } from '../../ui';\nimport { getFuncText } from '../../ui/src/utils';\nexport default defineComponent({\n    name: 'VxeSwitch',\n    props: {\n        modelValue: [String, Number, Boolean],\n        disabled: {\n            type: Boolean,\n            default: null\n        },\n        readonly: {\n            type: Boolean,\n            default: null\n        },\n        size: {\n            type: String,\n            default: () => getConfig().switch.size || getConfig().size\n        },\n        openLabel: String,\n        closeLabel: String,\n        openValue: {\n            type: [String, Number, Boolean],\n            default: true\n        },\n        closeValue: {\n            type: [String, Number, Boolean],\n            default: false\n        },\n        openIcon: String,\n        closeIcon: String,\n        openActiveIcon: String,\n        closeActiveIcon: String\n    },\n    emits: [\n        'update:modelValue',\n        'change',\n        'focus',\n        'blur'\n    ],\n    setup(props, context) {\n        const { emit } = context;\n        const $xeForm = inject('$xeForm', null);\n        const formItemInfo = inject('xeFormItemInfo', null);\n        const xID = XEUtils.uniqueId();\n        const { computeSize } = useSize(props);\n        const reactData = reactive({\n            isActivated: false,\n            hasAnimat: false,\n            offsetLeft: 0\n        });\n        const internalData = {};\n        const $xeSwitch = {\n            xID,\n            props,\n            context,\n            reactData,\n            internalData\n        };\n        const refButton = ref();\n        let switchMethods = {};\n        const computeIsDisabled = computed(() => {\n            const { disabled } = props;\n            if (disabled === null) {\n                if ($xeForm) {\n                    return $xeForm.props.readonly || $xeForm.props.disabled;\n                }\n                return false;\n            }\n            return disabled;\n        });\n        const computeIsReadonly = computed(() => {\n            const { readonly } = props;\n            if (readonly === null) {\n                if ($xeForm) {\n                    return $xeForm.props.readonly || $xeForm.props.disabled;\n                }\n                return false;\n            }\n            return readonly;\n        });\n        const computeOnShowLabel = computed(() => {\n            return getFuncText(props.openLabel);\n        });\n        const computeOffShowLabel = computed(() => {\n            return getFuncText(props.closeLabel);\n        });\n        const computeIsChecked = computed(() => {\n            return props.modelValue === props.openValue;\n        });\n        const emitModel = (value) => {\n            emit('update:modelValue', value);\n        };\n        const clickEvent = (evnt) => {\n            const isDisabled = computeIsDisabled.value;\n            const isReadonly = computeIsReadonly.value;\n            if (!(isDisabled || isReadonly)) {\n                const isChecked = computeIsChecked.value;\n                clearTimeout(internalData.atTimeout);\n                const value = isChecked ? props.closeValue : props.openValue;\n                reactData.hasAnimat = true;\n                emitModel(value);\n                switchMethods.dispatchEvent('change', { value }, evnt);\n                // 自动更新校验状态\n                if ($xeForm && formItemInfo) {\n                    $xeForm.triggerItemEvent(evnt, formItemInfo.itemConfig.field, value);\n                }\n                internalData.atTimeout = setTimeout(() => {\n                    reactData.hasAnimat = false;\n                    internalData.atTimeout = undefined;\n                }, 400);\n            }\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $switch: $xeSwitch }, params));\n        };\n        const focusEvent = (evnt) => {\n            reactData.isActivated = true;\n            switchMethods.dispatchEvent('focus', { value: props.modelValue }, evnt);\n        };\n        const blurEvent = (evnt) => {\n            reactData.isActivated = false;\n            switchMethods.dispatchEvent('blur', { value: props.modelValue }, evnt);\n        };\n        switchMethods = {\n            dispatchEvent,\n            focus() {\n                const btnElem = refButton.value;\n                reactData.isActivated = true;\n                if (btnElem) {\n                    btnElem.focus();\n                }\n                return nextTick();\n            },\n            blur() {\n                const btnElem = refButton.value;\n                if (btnElem) {\n                    btnElem.blur();\n                }\n                reactData.isActivated = false;\n                return nextTick();\n            }\n        };\n        Object.assign($xeSwitch, switchMethods);\n        const renderVN = () => {\n            const { openIcon, closeIcon, openActiveIcon, closeActiveIcon } = props;\n            const vSize = computeSize.value;\n            const isChecked = computeIsChecked.value;\n            const onShowLabel = computeOnShowLabel.value;\n            const offShowLabel = computeOffShowLabel.value;\n            const isDisabled = computeIsDisabled.value;\n            const isReadonly = computeIsReadonly.value;\n            return h('div', {\n                class: ['vxe-switch', isChecked ? 'is--on' : 'is--off', {\n                        [`size--${vSize}`]: vSize,\n                        'is--disabled': isDisabled,\n                        'is--readonly': isReadonly,\n                        'is--animat': reactData.hasAnimat\n                    }]\n            }, [\n                h('button', {\n                    ref: refButton,\n                    class: 'vxe-switch--button',\n                    type: 'button',\n                    disabled: isDisabled || isReadonly,\n                    onClick: clickEvent,\n                    onFocus: focusEvent,\n                    onBlur: blurEvent\n                }, [\n                    h('span', {\n                        class: 'vxe-switch--label vxe-switch--label-on'\n                    }, [\n                        openIcon\n                            ? h('i', {\n                                class: ['vxe-switch--label-icon', openIcon]\n                            })\n                            : createCommentVNode(),\n                        onShowLabel\n                    ]),\n                    h('span', {\n                        class: 'vxe-switch--label vxe-switch--label-off'\n                    }, [\n                        closeIcon\n                            ? h('i', {\n                                class: ['vxe-switch--label-icon', closeIcon]\n                            })\n                            : createCommentVNode(),\n                        offShowLabel\n                    ]),\n                    h('span', {\n                        class: ['vxe-switch--icon']\n                    }, openActiveIcon || closeActiveIcon\n                        ? [\n                            h('i', {\n                                class: isChecked ? openActiveIcon : closeActiveIcon\n                            })\n                        ]\n                        : [])\n                ])\n            ]);\n        };\n        $xeSwitch.renderVN = renderVN;\n        return $xeSwitch;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { h, defineComponent, inject, createCommentVNode } from 'vue';\nimport { getIcon, getI18n } from '@vxe-ui/core';\nimport VxeFormComponent from '../../form/src/form';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeSwitchComponent from '../../switch/src/switch';\nimport VxeTextComponent from '../../text/src/text';\nexport const DefaultSettingFormComponent = defineComponent({\n    name: 'DefaultSettingForm',\n    props: {\n        formData: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const $xeFormDesign = inject('$xeFormDesign', null);\n        if (!$xeFormDesign) {\n            return () => [];\n        }\n        const { props: formDesignProps } = $xeFormDesign;\n        return () => {\n            const { formData } = props;\n            return h(VxeFormComponent, {\n                data: formData,\n                span: 24,\n                vertical: true,\n                titleBold: true\n            }, {\n                default() {\n                    const { showPc, showMobile } = formDesignProps;\n                    return [\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.formName'),\n                            field: 'title',\n                            itemRender: { name: 'VxeInput', props: { placeholder: getI18n('vxe.formDesign.defFormTitle') } }\n                        }),\n                        showPc && showMobile\n                            ? h(VxeFormItemComponent, {\n                                title: getI18n('vxe.formDesign.widgetProp.displaySetting.name')\n                            }, {\n                                default() {\n                                    return [\n                                        h('div', {\n                                            class: 'vxe-form-design--widget-form-item-devices'\n                                        }, [\n                                            h('div', {\n                                                class: 'vxe-form-design--widget-form-item-pc'\n                                            }, [\n                                                h(VxeTextComponent, {\n                                                    icon: getIcon().FORM_DESIGN_PROPS_PC,\n                                                    content: getI18n('vxe.formDesign.widgetProp.displaySetting.pc')\n                                                }),\n                                                h(VxeSwitchComponent, {\n                                                    modelValue: formData.pcVisible,\n                                                    openLabel: getI18n('vxe.formDesign.widgetProp.displaySetting.visible'),\n                                                    closeLabel: getI18n('vxe.formDesign.widgetProp.displaySetting.hidden'),\n                                                    'onUpdate:modelValue'(val) {\n                                                        formData.pcVisible = val;\n                                                    }\n                                                })\n                                            ]),\n                                            h('div', {\n                                                class: 'vxe-form-design--widget-form-item-mobile'\n                                            }, [\n                                                h(VxeTextComponent, {\n                                                    icon: getIcon().FORM_DESIGN_PROPS_MOBILE,\n                                                    content: getI18n('vxe.formDesign.widgetProp.displaySetting.mobile')\n                                                }),\n                                                h(VxeSwitchComponent, {\n                                                    modelValue: formData.mobileVisible,\n                                                    openLabel: getI18n('vxe.formDesign.widgetProp.displaySetting.visible'),\n                                                    closeLabel: getI18n('vxe.formDesign.widgetProp.displaySetting.hidden'),\n                                                    'onUpdate:modelValue'(val) {\n                                                        formData.mobileVisible = val;\n                                                    }\n                                                })\n                                            ])\n                                        ])\n                                    ];\n                                }\n                            })\n                            : createCommentVNode()\n                    ];\n                }\n            });\n        };\n    }\n});\n", "import { defineComponent, h, inject, createCommentVNode, watch, ref } from 'vue';\nimport { getI18n, renderer } from '@vxe-ui/core';\nimport { getSlotVNs } from '../../ui/src/vn';\nimport VxeTabsComponent from '../../tabs/src/tabs';\nimport VxeTabPaneComponent from '../../tabs/src/tab-pane';\nimport { DefaultSettingFormComponent } from './default-setting-form';\nexport default defineComponent({\n    name: 'FormDesignLayoutSetting',\n    props: {},\n    emits: [],\n    setup() {\n        const $xeFormDesign = inject('$xeFormDesign', null);\n        if (!$xeFormDesign) {\n            return () => [];\n        }\n        const { props: formDesignProps, reactData: formDesignReactData } = $xeFormDesign;\n        const activeTab = ref(1);\n        const renderSettingWidgetForm = () => {\n            const { activeWidget } = formDesignReactData;\n            if (activeWidget) {\n                const compConf = renderer.get(activeWidget.name);\n                const renderWidgetFormView = compConf ? compConf.renderFormDesignWidgetFormView : null;\n                if (renderWidgetFormView) {\n                    const isEditMode = true;\n                    return h('div', {\n                        class: 'vxe-form-design--custom-widget-form-view'\n                    }, getSlotVNs(renderWidgetFormView(activeWidget, { isEditMode, isViewMode: !isEditMode, widget: activeWidget, $formDesign: $xeFormDesign, $formView: null })));\n                }\n            }\n            return createCommentVNode();\n        };\n        const renderSettingConfigForm = () => {\n            const { formRender } = formDesignProps;\n            const { formData } = formDesignReactData;\n            if (formRender) {\n                const compConf = renderer.get(formRender.name);\n                const renderSettingView = compConf ? compConf.renderFormDesignSettingFormView : null;\n                if (renderSettingView) {\n                    return h('div', {\n                        class: 'vxe-form-design--custom-setting-form-view'\n                    }, getSlotVNs(renderSettingView({}, { $formDesign: $xeFormDesign })));\n                }\n            }\n            return h(DefaultSettingFormComponent, {\n                formData\n            });\n        };\n        watch(() => formDesignReactData.activeWidget, () => {\n            activeTab.value = 1;\n        });\n        return () => {\n            return h('div', {\n                class: 'vxe-form-design--setting'\n            }, [\n                h('div', {\n                    class: 'vxe-form-design--setting-form'\n                }, [\n                    h(VxeTabsComponent, {\n                        modelValue: activeTab.value,\n                        titleWidth: '50%',\n                        titleAlign: 'center',\n                        padding: true,\n                        class: 'vxe-form-design--setting-form-tabs',\n                        'onUpdate:modelValue'(val) {\n                            activeTab.value = val;\n                        }\n                    }, {\n                        default() {\n                            return [\n                                h(VxeTabPaneComponent, {\n                                    title: getI18n('vxe.formDesign.widgetPropTab'),\n                                    name: 1\n                                }, {\n                                    default() {\n                                        return renderSettingWidgetForm();\n                                    }\n                                }),\n                                h(VxeTabPaneComponent, {\n                                    title: getI18n('vxe.formDesign.widgetFormTab'),\n                                    name: 2\n                                }, {\n                                    default() {\n                                        return renderSettingConfigForm();\n                                    }\n                                })\n                            ];\n                        }\n                    })\n                ])\n            ]);\n        };\n    }\n});\n", "import { defineComponent, ref, h, reactive, nextTick, inject, provide, watch, createCommentVNode } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getConfig, renderer, useSize, createEvent } from '../../ui';\nimport { getSlotVNs } from '../../ui/src/vn';\nimport { createDefaultFormViewPCFormConfig } from './default-setting-data';\nimport VxeFormComponent from '../../form/src/form';\nimport VxeFormGroupComponent from '../../form/src/form-group';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport { configToWidget } from './widget-info';\nimport { warnLog } from '../../ui/src/log';\nexport default defineComponent({\n    name: 'VxeFormView',\n    props: {\n        modelValue: Object,\n        config: Object,\n        readonly: Boolean,\n        disabled: Boolean,\n        viewRender: Object,\n        formOptions: Object,\n        createFormConfig: Function,\n        size: {\n            type: String,\n            default: () => getConfig().formView.size || getConfig().size\n        }\n    },\n    emits: [\n        'update:modelValue',\n        'submit',\n        'reset'\n    ],\n    setup(props, context) {\n        const { emit, slots } = context;\n        const xID = XEUtils.uniqueId();\n        const refElem = ref();\n        const formRef = ref();\n        const { computeSize } = useSize(props);\n        const $xeFormDesignLayoutStyle = inject('$xeFormDesignLayoutStyle', null);\n        const reactData = reactive({\n            formConfig: {},\n            formRules: {},\n            widgetObjList: []\n        });\n        const refMaps = {\n            refElem\n        };\n        const computeMaps = {\n            computeSize\n        };\n        const $xeFormView = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const clearConfig = () => {\n            return loadConfig({\n                formConfig: {},\n                widgetData: []\n            });\n        };\n        const loadConfig = (config) => {\n            if (config) {\n                const { formConfig, widgetData } = config;\n                loadFormConfig(formConfig || {});\n                loadWidgetData(widgetData || []);\n            }\n            return nextTick();\n        };\n        const parseConfig = (config) => {\n            const { formConfig, widgetData } = config || {};\n            const widgetObjList = parseWidgetData(widgetData || []);\n            return Object.assign(Object.assign({}, parseForm(widgetObjList)), { formConfig: parseFormConfig(formConfig || {}), widgetData: widgetObjList });\n        };\n        const parseFormConfig = (formConfig) => {\n            const { viewRender, createFormConfig, formOptions } = props;\n            const params = { viewRender, formConfig };\n            if (createFormConfig) {\n                return createFormConfig(params);\n            }\n            const { name } = viewRender || {};\n            const compConf = renderer.get(name) || {};\n            const createPCFormConfig = compConf ? compConf.createFormViewFormConfig : null;\n            return Object.assign({}, createPCFormConfig ? createPCFormConfig(params) : createDefaultFormViewPCFormConfig(params), formOptions);\n        };\n        const loadFormConfig = (formConfig) => {\n            reactData.formConfig = parseFormConfig(formConfig);\n            return nextTick();\n        };\n        const parseForm = (widgetObjList) => {\n            const formData = {};\n            const formRules = {};\n            XEUtils.eachTree(widgetObjList, widget => {\n                const { name, field, required } = widget;\n                const compConf = renderer.get(name) || {};\n                const createWidgetFieldValue = compConf.createFormDesignWidgetFieldValue;\n                const createWidgetFieldRules = compConf.createFormDesignWidgetFieldRules;\n                formData[field] = createWidgetFieldValue ? createWidgetFieldValue({ widget, $formView: $xeFormView }) : getWidgetDefaultValue(widget);\n                if (createWidgetFieldRules) {\n                    const rules = createWidgetFieldRules({ widget, $formView: $xeFormView });\n                    if (rules && rules.length) {\n                        formRules[field] = rules;\n                    }\n                }\n                else if (required) {\n                    formRules[field] = getWidgetDefaultRule();\n                }\n            }, { children: 'children' });\n            return {\n                formData,\n                formRules\n            };\n        };\n        const parseWidgetData = (widgetData) => {\n            return (widgetData || []).map(item => configToWidget(item));\n        };\n        const loadWidgetData = (widgetData) => {\n            const widgetObjList = parseWidgetData(widgetData);\n            reactData.widgetObjList = widgetObjList;\n            const { formData, formRules } = parseForm(widgetObjList);\n            reactData.formRules = formRules;\n            emit('update:modelValue', Object.assign(formData, props.modelValue));\n            return nextTick();\n        };\n        const getWidgetDefaultValue = (widget) => {\n            switch (widget.name) {\n                case 'subtable':\n                    return [];\n            }\n            return null;\n        };\n        const getWidgetDefaultRule = () => {\n            return [\n                { required: true, content: '该填写该字段！' }\n            ];\n        };\n        const updateWidgetStatus = (widget, value) => {\n            const { field } = widget;\n            const $form = formRef.value;\n            if ($form) {\n                $form.updateStatus({ field }, value);\n            }\n            return nextTick();\n        };\n        const setItemValue = (widget, value) => {\n            const { modelValue } = props;\n            const { field } = widget;\n            const $form = formRef.value;\n            if (modelValue) {\n                modelValue[field] = value;\n            }\n            if ($form) {\n                $form.updateStatus({ field }, value);\n            }\n            return nextTick();\n        };\n        const getItemValue = (widget) => {\n            const { modelValue } = props;\n            if (modelValue) {\n                return modelValue[widget.field];\n            }\n            return null;\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $formView: $xeFormView }, params));\n        };\n        const toWidgetFields = (widget) => {\n            if (widget) {\n                if (XEUtils.isArray(widget)) {\n                    return widget.map(item => item.name);\n                }\n                else {\n                    return [widget.name];\n                }\n            }\n            return null;\n        };\n        const formViewMethods = {\n            dispatchEvent,\n            clearConfig,\n            loadConfig,\n            parseConfig,\n            loadFormConfig,\n            loadWidgetData,\n            updateWidgetStatus,\n            setItemValue,\n            getItemValue,\n            validate() {\n                const $form = formRef.value;\n                if ($form) {\n                    return $form.validate();\n                }\n                return nextTick();\n            },\n            validateWidget(widget) {\n                const $form = formRef.value;\n                if ($form) {\n                    return $form.validateField(toWidgetFields(widget));\n                }\n                return nextTick();\n            },\n            clearValidate(widget) {\n                const $form = formRef.value;\n                if ($form) {\n                    return $form.clearValidate(toWidgetFields(widget));\n                }\n                return nextTick();\n            },\n            reset() {\n                const { widgetObjList } = reactData;\n                const { formData } = parseForm(widgetObjList);\n                emit('update:modelValue', Object.assign({}, formData));\n                return nextTick();\n            },\n            /**\n             * 已废弃\n             * @deprecated\n             */\n            updateItemStatus(widget, value) {\n                if (process.env.NODE_ENV === 'development') {\n                    warnLog('vxe.error.delFunc', ['updateItemStatus', 'updateWidgetStatus']);\n                }\n                return updateWidgetStatus(widget, value);\n            }\n        };\n        const handleSubmit = (params) => {\n            dispatchEvent('submit', params, params.$event);\n        };\n        const handleReset = (params) => {\n            dispatchEvent('reset', params, params.$event);\n        };\n        const formViewPrivateMethods = {};\n        Object.assign($xeFormView, formViewMethods, formViewPrivateMethods);\n        const renderVN = () => {\n            const { readonly, disabled, modelValue } = props;\n            const { formConfig, formRules, widgetObjList } = reactData;\n            const vSize = computeSize.value;\n            const topSlot = slots.top;\n            const bottomSlot = slots.bottom;\n            const headerSlot = slots.header;\n            const footerSlot = slots.footer;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-form-view', {\n                        [`size--${vSize}`]: vSize\n                    }]\n            }, [\n                topSlot\n                    ? h('div', {\n                        class: 'vxe-form-view--top'\n                    }, getSlotVNs(topSlot({ $formView: $xeFormView })))\n                    : createCommentVNode(),\n                h(VxeFormComponent, Object.assign(Object.assign({ ref: formRef }, formConfig), { data: modelValue, customLayout: true, readonly,\n                    disabled, span: 24, rules: formRules, onSubmit: handleSubmit, onReset: handleReset }), {\n                    default() {\n                        const { readonly, disabled } = props;\n                        return [\n                            headerSlot\n                                ? h(VxeFormItemComponent, {}, {\n                                    default() {\n                                        return headerSlot({});\n                                    }\n                                })\n                                : createCommentVNode(),\n                            ...widgetObjList.map(widget => {\n                                const { name } = widget;\n                                const compConf = renderer.get(name) || {};\n                                const renderWidgetDesignView = compConf.renderFormDesignWidgetView;\n                                const renderWidgetDesignPreview = compConf.renderFormDesignWidgetPreview;\n                                const renderWidgetDesignMobilePreview = compConf.renderFormDesignWidgetMobilePreview;\n                                const isEditMode = !!$xeFormDesignLayoutStyle;\n                                const renderOpts = widget;\n                                const params = { widget, readonly: !!readonly, disabled: !!disabled, isEditMode, isViewMode: !isEditMode, $formDesign: null, $formView: $xeFormView };\n                                return h(VxeFormGroupComponent, {\n                                    key: widget.id\n                                }, {\n                                    default() {\n                                        // 如果处于表单设计器-样式设置-预览模式下\n                                        if ($xeFormDesignLayoutStyle) {\n                                            if ($xeFormDesignLayoutStyle.reactData.activeTab === 2) {\n                                                if (renderWidgetDesignMobilePreview) {\n                                                    return getSlotVNs(renderWidgetDesignMobilePreview(renderOpts, params));\n                                                }\n                                            }\n                                            else {\n                                                if (renderWidgetDesignPreview) {\n                                                    return getSlotVNs(renderWidgetDesignPreview(renderOpts, params));\n                                                }\n                                            }\n                                        }\n                                        return renderWidgetDesignView ? getSlotVNs(renderWidgetDesignView(renderOpts, params)) : [];\n                                    }\n                                });\n                            }),\n                            footerSlot\n                                ? h(VxeFormGroupComponent, {\n                                    span: 24\n                                }, {\n                                    default() {\n                                        return footerSlot({});\n                                    }\n                                })\n                                : createCommentVNode()\n                        ];\n                    }\n                }),\n                bottomSlot\n                    ? h('div', {\n                        class: 'vxe-form-view--bottom'\n                    }, getSlotVNs(bottomSlot({ $formView: $xeFormView })))\n                    : createCommentVNode()\n            ]);\n        };\n        $xeFormView.renderVN = renderVN;\n        watch(() => props.config, (value) => {\n            loadConfig(value || {});\n        });\n        if (props.config) {\n            loadConfig(props.config);\n        }\n        provide('$xeFormView', $xeFormView);\n        return $xeFormView;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "export const getDefaultSettingFormData = (defOpts) => {\n    return {\n        title: '',\n        pcVisible: defOpts ? !!defOpts.pcVisible : true,\n        pcVertical: true,\n        pcTitleBold: true,\n        pcTitleColon: false,\n        pcTitleAlign: '',\n        pcTitleWidth: '',\n        pcTitleWidthUnit: '',\n        mobileVisible: defOpts ? !!defOpts.mobileVisible : true,\n        mobileVertical: true,\n        mobileTitleBold: true,\n        mobileTitleColon: false,\n        mobileTitleAlign: '',\n        mobileTitleWidth: '',\n        mobileTitleWidthUnit: ''\n    };\n};\nexport const createDefaultFormViewPCFormConfig = (params) => {\n    const { formConfig } = params;\n    return {\n        vertical: formConfig.pcVertical,\n        titleBold: formConfig.pcTitleBold,\n        titleColon: formConfig.pcTitleColon,\n        titleAlign: formConfig.pcTitleAlign,\n        titleWidth: formConfig.pcTitleWidth\n    };\n};\nexport const createDefaultFormViewMobileFormConfig = (params) => {\n    const { formConfig } = params;\n    return {\n        vertical: formConfig.mobileVertical,\n        titleBold: formConfig.mobileTitleBold,\n        titleColon: formConfig.mobileTitleColon,\n        titleAlign: formConfig.mobileTitleAlign,\n        titleWidth: formConfig.mobileTitleWidth\n    };\n};\n", "import { defineComponent, onUnmounted, inject, ref, h, reactive, onMounted, provide, createCommentVNode } from 'vue';\nimport { createItem, watchItem, destroyItem, assembleItem } from './util';\nimport { renderer } from '../../ui';\nimport { isEnableConf } from '../../ui/src/utils';\nimport { formItemProps } from './form-item';\nimport { renderTitle, getItemClass, getItemContentClass } from './render';\nimport XEUtils from 'xe-utils';\nexport default defineComponent({\n    name: 'VxeFormGroup',\n    props: formItemProps,\n    setup(props, context) {\n        const { slots } = context;\n        const refElem = ref();\n        const $xeForm = inject('$xeForm', {});\n        const $xeParentFormGroup = inject('$xeFormGroup', null);\n        const formItem = reactive(createItem($xeForm, props));\n        formItem.slots = slots;\n        formItem.children = [];\n        const formItemInfo = { itemConfig: formItem };\n        provide('xeFormItemInfo', formItemInfo);\n        const renderVN = () => {\n            const formProps = $xeForm.props;\n            const $xeGrid = $xeForm.xeGrid;\n            const item = formItem;\n            const { data, readonly, disabled } = formProps;\n            const { visible, field, itemRender, contentStyle } = item;\n            const compConf = isEnableConf(itemRender) ? renderer.get(itemRender.name) : null;\n            const itemStyle = compConf ? (compConf.formItemStyle || compConf.itemStyle) : null;\n            const itemContentStyle = compConf ? (compConf.formItemContentStyle || compConf.itemContentStyle) : null;\n            const defaultSlot = slots ? slots.default : null;\n            const params = { data, disabled, readonly, field, property: field, item, $form: $xeForm, $grid: $xeGrid };\n            if (visible === false) {\n                return createCommentVNode();\n            }\n            return h('div', {\n                ref: refElem,\n                key: item.id,\n                class: getItemClass($xeForm, item, true),\n                style: XEUtils.isFunction(itemStyle) ? itemStyle(params) : itemStyle\n            }, [\n                renderTitle($xeForm, item, true),\n                h('div', {\n                    class: getItemContentClass($xeForm, item, true),\n                    style: Object.assign({}, XEUtils.isFunction(itemContentStyle) ? itemContentStyle(params) : itemContentStyle, XEUtils.isFunction(contentStyle) ? contentStyle(params) : contentStyle)\n                }, defaultSlot ? defaultSlot({}) : [])\n            ]);\n        };\n        const $xeFormGroup = {\n            formItem,\n            renderVN\n        };\n        watchItem(props, formItem);\n        onMounted(() => {\n            const elem = refElem.value;\n            assembleItem($xeForm, elem, formItem, $xeParentFormGroup);\n        });\n        onUnmounted(() => {\n            destroyItem($xeForm, formItem);\n        });\n        provide('$xeFormGroup', $xeFormGroup);\n        provide('$xeFormItem', null);\n        return $xeFormGroup;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { h, defineComponent, ref, inject, createCommentVNode } from 'vue';\nimport { getI18n } from '@vxe-ui/core';\nimport VxeFormComponent from '../../form/src/form';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeInputComponent from '../../input/src/input';\nimport VxeRadioGroupComponent from '../../radio/src/group';\nimport VxeSelectGroupComponent from '../../select/src/select';\nconst getBoldOptions = () => {\n    return [\n        { label: getI18n('vxe.formDesign.styleSetting.fontNormal'), value: false },\n        { label: getI18n('vxe.formDesign.styleSetting.fontBold'), value: true }\n    ];\n};\nconst getColonOptions = () => {\n    return [\n        { label: getI18n('vxe.formDesign.styleSetting.colonVisible'), value: true },\n        { label: getI18n('vxe.formDesign.styleSetting.colonHidden'), value: false }\n    ];\n};\nconst getAlignOptions = () => {\n    return [\n        { label: getI18n('vxe.formDesign.styleSetting.alignLeft'), value: '' },\n        { label: getI18n('vxe.formDesign.styleSetting.alignRight'), value: 'right' }\n    ];\n};\nconst getWidthUnitOptions = () => {\n    return [\n        { label: getI18n('vxe.formDesign.styleSetting.unitPx'), value: '' },\n        { label: getI18n('vxe.formDesign.styleSetting.unitPct'), value: '%' }\n    ];\n};\nconst renderLayoutOption = (formData, field, type, changeEvent) => {\n    const isVertical = type === 'vertical';\n    return h('div', {\n        class: ['vxe-form-design--widget-form-item-option', `is--${type}`, {\n                'is--active': isVertical ? formData[field] : !formData[field]\n            }],\n        onClick() {\n            formData[field] = isVertical;\n            changeEvent();\n        }\n    }, [\n        h('div', {\n            class: 'vxe-form-design--widget-form-item-option-row'\n        }),\n        h('div', {\n            class: 'vxe-form-design--widget-form-item-option-row'\n        }),\n        h('div', {}, isVertical ? getI18n('vxe.formDesign.styleSetting.verticalLayout') : getI18n('vxe.formDesign.styleSetting.horizontalLayout'))\n    ]);\n};\nexport const DefaultPCStyleFormComponent = defineComponent({\n    name: 'DefaultPCStyleForm',\n    props: {\n        formData: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const $xeFormDesign = inject('$xeFormDesign', null);\n        const verticalField = 'pcVertical';\n        const refBoldOpts = ref(getBoldOptions());\n        const refColonOpts = ref(getColonOptions());\n        const refAlignOpts = ref(getAlignOptions());\n        const refWidthUnitOpts = ref(getWidthUnitOptions());\n        const refreshPreview = () => {\n            if ($xeFormDesign) {\n                $xeFormDesign.refreshPreviewView();\n            }\n        };\n        const changeLayoutEvent = () => {\n            const { formData } = props;\n            if (!formData.pcTitleWidth) {\n                formData.pcTitleWidth = 100;\n            }\n            refreshPreview();\n        };\n        return () => {\n            const { formData } = props;\n            return h(VxeFormComponent, {\n                data: formData,\n                span: 24,\n                vertical: true,\n                titleBold: true\n            }, {\n                default() {\n                    return [\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.styleSetting.layoutTitle'),\n                            field: verticalField\n                        }, {\n                            default() {\n                                return [\n                                    h('div', {\n                                        class: 'vxe-form-design--widget-form-item-layout'\n                                    }, [\n                                        renderLayoutOption(formData, verticalField, 'vertical', changeLayoutEvent),\n                                        renderLayoutOption(formData, verticalField, 'horizontal', changeLayoutEvent)\n                                    ])\n                                ];\n                            }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.styleSetting.styleTitle')\n                        }, {\n                            default() {\n                                return [\n                                    h('div', {\n                                        class: 'vxe-form-design--widget-form-item-prop-list'\n                                    }, [\n                                        h('span', {}, getI18n('vxe.formDesign.styleSetting.boldTitle')),\n                                        h(VxeRadioGroupComponent, {\n                                            modelValue: formData.pcTitleBold,\n                                            options: refBoldOpts.value,\n                                            onChange: refreshPreview,\n                                            'onUpdate:modelValue'(val) {\n                                                formData.pcTitleBold = val;\n                                            }\n                                        })\n                                    ]),\n                                    h('div', {\n                                        class: 'vxe-form-design--widget-form-item-prop-list'\n                                    }, [\n                                        h('span', {}, getI18n('vxe.formDesign.styleSetting.colonTitle')),\n                                        h(VxeRadioGroupComponent, {\n                                            modelValue: formData.pcTitleColon,\n                                            options: refColonOpts.value,\n                                            onChange: refreshPreview,\n                                            'onUpdate:modelValue'(val) {\n                                                formData.pcTitleColon = val;\n                                            }\n                                        })\n                                    ]),\n                                    formData.pcVertical\n                                        ? createCommentVNode()\n                                        : h('div', {\n                                            class: 'vxe-form-design--widget-form-item-prop-list'\n                                        }, [\n                                            h('span', {}, getI18n('vxe.formDesign.styleSetting.alignTitle')),\n                                            h(VxeRadioGroupComponent, {\n                                                modelValue: formData.pcTitleAlign,\n                                                options: refAlignOpts.value,\n                                                onChange: refreshPreview,\n                                                'onUpdate:modelValue'(val) {\n                                                    formData.pcTitleAlign = val;\n                                                }\n                                            })\n                                        ]),\n                                    formData.pcVertical\n                                        ? createCommentVNode()\n                                        : h('div', {\n                                            class: 'vxe-form-design--widget-form-item-prop-list'\n                                        }, [\n                                            h('span', {}, getI18n('vxe.formDesign.styleSetting.widthTitle')),\n                                            h(VxeInputComponent, {\n                                                class: 'vxe-form-design--widget-form-item-prop-width',\n                                                modelValue: formData.pcTitleWidth,\n                                                type: 'integer',\n                                                onChange: refreshPreview,\n                                                'onUpdate:modelValue'(val) {\n                                                    formData.pcTitleWidth = val;\n                                                }\n                                            }),\n                                            h(VxeSelectGroupComponent, {\n                                                class: 'vxe-form-design--widget-form-item-prop-unit',\n                                                modelValue: formData.pcTitleWidthUnit,\n                                                options: refWidthUnitOpts.value,\n                                                transfer: true,\n                                                onChange: refreshPreview,\n                                                'onUpdate:modelValue'(val) {\n                                                    formData.pcTitleWidthUnit = val;\n                                                }\n                                            })\n                                        ])\n                                ];\n                            }\n                        })\n                    ];\n                }\n            });\n        };\n    }\n});\nexport const DefaultMobileStyleFormComponent = defineComponent({\n    name: 'DefaultMobileStyleForm',\n    props: {\n        formData: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const $xeFormDesign = inject('$xeFormDesign', null);\n        const verticalField = 'mobileVertical';\n        const refBoldOpts = ref(getBoldOptions());\n        const refColonOpts = ref(getColonOptions());\n        const refAlignOpts = ref(getAlignOptions());\n        const refWidthUnitOpts = ref(getWidthUnitOptions());\n        const refreshPreview = () => {\n            if ($xeFormDesign) {\n                $xeFormDesign.refreshPreviewView();\n            }\n        };\n        const changeLayoutEvent = () => {\n            const { formData } = props;\n            if (!formData.mobileTitleWidth) {\n                formData.mobileTitleWidth = 100;\n            }\n            refreshPreview();\n        };\n        return () => {\n            const { formData } = props;\n            return h(VxeFormComponent, {\n                data: formData,\n                span: 24,\n                vertical: true,\n                titleBold: true\n            }, {\n                default() {\n                    return [\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.styleSetting.layoutTitle'),\n                            field: verticalField\n                        }, {\n                            default() {\n                                return [\n                                    h('div', {\n                                        class: 'vxe-form-design--widget-form-item-layout'\n                                    }, [\n                                        renderLayoutOption(formData, verticalField, 'vertical', changeLayoutEvent),\n                                        renderLayoutOption(formData, verticalField, 'horizontal', changeLayoutEvent)\n                                    ])\n                                ];\n                            }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.styleSetting.styleTitle')\n                        }, {\n                            default() {\n                                return [\n                                    h('div', {\n                                        class: 'vxe-form-design--widget-form-item-prop-list'\n                                    }, [\n                                        h('span', {}, getI18n('vxe.formDesign.styleSetting.boldTitle')),\n                                        h(VxeRadioGroupComponent, {\n                                            modelValue: formData.mobileTitleBold,\n                                            options: refBoldOpts.value,\n                                            onChange: refreshPreview,\n                                            'onUpdate:modelValue'(val) {\n                                                formData.mobileTitleBold = val;\n                                            }\n                                        })\n                                    ]),\n                                    h('div', {\n                                        class: 'vxe-form-design--widget-form-item-prop-list'\n                                    }, [\n                                        h('span', {}, getI18n('vxe.formDesign.styleSetting.colonTitle')),\n                                        h(VxeRadioGroupComponent, {\n                                            modelValue: formData.mobileTitleColon,\n                                            options: refColonOpts.value,\n                                            onChange: refreshPreview,\n                                            'onUpdate:modelValue'(val) {\n                                                formData.mobileTitleColon = val;\n                                            }\n                                        })\n                                    ]),\n                                    formData.mobileVertical\n                                        ? createCommentVNode()\n                                        : h('div', {\n                                            class: 'vxe-form-design--widget-form-item-prop-list'\n                                        }, [\n                                            h('span', {}, getI18n('vxe.formDesign.styleSetting.alignTitle')),\n                                            h(VxeRadioGroupComponent, {\n                                                modelValue: formData.mobileTitleAlign,\n                                                options: refAlignOpts.value,\n                                                onChange: refreshPreview,\n                                                'onUpdate:modelValue'(val) {\n                                                    formData.mobileTitleAlign = val;\n                                                }\n                                            })\n                                        ]),\n                                    formData.mobileVertical\n                                        ? createCommentVNode()\n                                        : h('div', {\n                                            class: 'vxe-form-design--widget-form-item-prop-list'\n                                        }, [\n                                            h('span', {}, getI18n('vxe.formDesign.styleSetting.widthTitle')),\n                                            h(VxeInputComponent, {\n                                                class: 'vxe-form-design--widget-form-item-prop-width',\n                                                modelValue: formData.mobileTitleWidth,\n                                                type: 'integer',\n                                                onChange: refreshPreview,\n                                                'onUpdate:modelValue'(val) {\n                                                    formData.mobileTitleWidth = val;\n                                                }\n                                            }),\n                                            h(VxeSelectGroupComponent, {\n                                                class: 'vxe-form-design--widget-form-item-prop-unit',\n                                                modelValue: formData.mobileTitleWidthUnit,\n                                                options: refWidthUnitOpts.value,\n                                                transfer: true,\n                                                onChange: refreshPreview,\n                                                'onUpdate:modelValue'(val) {\n                                                    formData.mobileTitleWidthUnit = val;\n                                                }\n                                            })\n                                        ])\n                                ];\n                            }\n                        })\n                    ];\n                }\n            });\n        };\n    }\n});\n", "import { createCommentVNode, defineComponent, h, inject, ref, reactive, provide } from 'vue';\nimport { getIcon, getI18n, renderer } from '@vxe-ui/core';\nimport { getSlotVNs } from '../../ui/src/vn';\nimport VxeModalComponent from '../../modal/src/modal';\nimport VxeTabsComponent from '../../tabs/src/tabs';\nimport VxeTabPaneComponent from '../../tabs/src/tab-pane';\nimport VxeFormViewComponent from './form-view';\nimport { DefaultPCStyleFormComponent, DefaultMobileStyleFormComponent } from './default-style-form';\nimport { createDefaultFormViewPCFormConfig, createDefaultFormViewMobileFormConfig } from './default-setting-data';\nexport default defineComponent({\n    name: 'FormDesignLayoutStyle',\n    props: {},\n    emits: [],\n    setup() {\n        const $xeFormDesign = inject('$xeFormDesign', null);\n        const reactData = reactive({\n            activeTab: 1\n        });\n        const $xeFormDesignLayoutStyle = {\n            reactData,\n            renderVN() {\n                return [];\n            }\n        };\n        if (!$xeFormDesign) {\n            return $xeFormDesignLayoutStyle;\n        }\n        const { props: formDesignProps, reactData: formDesignReactData } = $xeFormDesign;\n        const settingVisible = ref(false);\n        const settingConfig = ref(null);\n        const settingFormData = ref({});\n        const updatePreviewView = () => {\n            settingConfig.value = $xeFormDesign.getConfig();\n        };\n        const createFormViewFormConfig = (params) => {\n            const { viewRender } = params;\n            const { activeTab } = reactData;\n            const { name } = viewRender || {};\n            const compConf = renderer.get(name) || {};\n            const createPCFormConfig = compConf ? compConf.createFormViewFormConfig : null;\n            const createMobileFormConfig = compConf ? compConf.createFormViewMobileFormConfig : null;\n            if (activeTab === 2) {\n                if (createMobileFormConfig) {\n                    return createMobileFormConfig(params);\n                }\n                return createDefaultFormViewMobileFormConfig(params);\n            }\n            if (createPCFormConfig) {\n                return createPCFormConfig(params);\n            }\n            return createDefaultFormViewPCFormConfig(params);\n        };\n        const formDesignLayoutStyleMethod = {\n            updatePreviewView,\n            openStylePreview() {\n                const { showPc } = formDesignProps;\n                updatePreviewView();\n                reactData.activeTab = showPc ? 1 : 2;\n                settingVisible.value = true;\n            }\n        };\n        Object.assign($xeFormDesignLayoutStyle, formDesignLayoutStyleMethod);\n        const renderStylePreview = () => {\n            const { activeTab } = reactData;\n            return h('div', {\n                class: ['vxe-form-design--layout-style-preview', `is--${activeTab === 2 ? 'mobile' : 'pc'}`]\n            }, [\n                h(VxeFormViewComponent, {\n                    modelValue: settingFormData.value,\n                    config: settingConfig.value,\n                    createFormConfig: createFormViewFormConfig,\n                    'onUpdate:modelValue'(val) {\n                        settingFormData.value = val;\n                    }\n                })\n            ]);\n        };\n        const renderMobileStyle = () => {\n            const { formRender } = formDesignProps;\n            const { formData } = formDesignReactData;\n            if (formRender) {\n                const compConf = renderer.get(formRender.name);\n                const renderSettingMobileFormView = compConf ? compConf.renderFormDesignMobileStyleFormView : null;\n                if (renderSettingMobileFormView) {\n                    return h('div', {\n                        class: 'vxe-form-design--custom-setting-mobile-form-view'\n                    }, getSlotVNs(renderSettingMobileFormView({}, { $formDesign: $xeFormDesign, formConfig: formData })));\n                }\n            }\n            return h(DefaultMobileStyleFormComponent, {\n                formData\n            });\n        };\n        const renderPCStyle = () => {\n            const { formRender } = formDesignProps;\n            const { formData } = formDesignReactData;\n            if (formRender) {\n                const compConf = renderer.get(formRender.name);\n                const renderStylePCFormView = compConf ? compConf.renderFormDesignStyleFormView : null;\n                if (renderStylePCFormView) {\n                    return h('div', {\n                        class: 'vxe-form-design--custom-setting-pc-form-view'\n                    }, getSlotVNs(renderStylePCFormView({}, { $formDesign: $xeFormDesign, formConfig: formData })));\n                }\n            }\n            return h(DefaultPCStyleFormComponent, {\n                formData\n            });\n        };\n        const renderStyleSetting = () => {\n            const { showPc, showMobile } = formDesignProps;\n            const { activeTab } = reactData;\n            return h('div', {\n                class: 'vxe-form-design--layout-style-setting'\n            }, [\n                h(VxeTabsComponent, {\n                    modelValue: activeTab,\n                    titleWidth: showPc && showMobile ? '50%' : '100%',\n                    titleAlign: 'center',\n                    padding: true,\n                    onChange: updatePreviewView,\n                    'onUpdate:modelValue'(val) {\n                        reactData.activeTab = val;\n                    }\n                }, {\n                    default() {\n                        const tabVNs = [];\n                        if (showPc) {\n                            tabVNs.push(h(VxeTabPaneComponent, {\n                                title: getI18n('vxe.formDesign.widgetProp.displaySetting.pc'),\n                                icon: getIcon().FORM_DESIGN_PROPS_PC,\n                                k: 1,\n                                name: 1\n                            }, {\n                                default() {\n                                    return renderPCStyle();\n                                }\n                            }));\n                        }\n                        if (showMobile) {\n                            tabVNs.push(h(VxeTabPaneComponent, {\n                                title: getI18n('vxe.formDesign.widgetProp.displaySetting.mobile'),\n                                icon: getIcon().FORM_DESIGN_PROPS_MOBILE,\n                                key: 2,\n                                name: 2\n                            }, {\n                                default() {\n                                    return renderMobileStyle();\n                                }\n                            }));\n                        }\n                        return tabVNs;\n                    }\n                })\n            ]);\n        };\n        const renderVN = () => {\n            const { showPc, showMobile } = formDesignProps;\n            return h(VxeModalComponent, {\n                modelValue: settingVisible.value,\n                title: getI18n('vxe.formDesign.styleSetting.title'),\n                height: '90vh',\n                width: '90vw',\n                escClosable: true,\n                maskClosable: true,\n                destroyOnClose: true,\n                showMaximize: true,\n                transfer: true,\n                'onUpdate:modelValue'(val) {\n                    settingVisible.value = val;\n                }\n            }, {\n                default() {\n                    return h('div', {\n                        class: 'vxe-form-design--layout-style'\n                    }, [\n                        renderStylePreview(),\n                        showPc || showMobile ? renderStyleSetting() : createCommentVNode()\n                    ]);\n                }\n            });\n        };\n        $xeFormDesignLayoutStyle.renderVN = renderVN;\n        provide('$xeFormDesignLayoutStyle', $xeFormDesignLayoutStyle);\n        return $xeFormDesignLayoutStyle;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { computed } from 'vue';\nimport XEUtils from 'xe-utils';\nexport function useWidgetName(props) {\n    const computeKebabCaseName = computed(() => {\n        const { renderOpts } = props;\n        return renderOpts ? XEUtils.kebabCase(renderOpts.name) : '';\n    });\n    return {\n        computeKebabCaseName\n    };\n}\n", "import { computed } from 'vue';\nexport function useWidgetView(props) {\n    const currWidget = computed(() => {\n        const { renderParams } = props;\n        return renderParams.widget;\n    });\n    const isEditMode = computed(() => {\n        const { renderParams } = props;\n        return renderParams.isEditMode || false;\n    });\n    const isViewMode = computed(() => {\n        const { renderParams } = props;\n        return renderParams.isViewMode || false;\n    });\n    const widgetOptions = computed(() => {\n        const { renderParams } = props;\n        const { widget } = renderParams;\n        return widget ? widget.options : {};\n    });\n    const widgetModel = computed({\n        get() {\n            const { renderParams } = props;\n            const { $formView, widget } = renderParams;\n            return $formView ? $formView.getItemValue(widget) : null;\n        },\n        set(value) {\n            const { renderParams } = props;\n            const { $formView, widget } = renderParams;\n            if ($formView) {\n                $formView.setItemValue(widget, value);\n            }\n        }\n    });\n    return {\n        currWidget,\n        widgetOptions,\n        widgetModel,\n        isEditMode,\n        isViewMode\n    };\n}\n", "import { computed } from 'vue';\nimport XEUtils from 'xe-utils';\nexport function useSubtableView(props) {\n    const currWidget = computed(() => {\n        const { renderParams } = props;\n        return renderParams.widget;\n    });\n    const currColumn = computed(() => {\n        const { renderParams } = props;\n        return renderParams.column;\n    });\n    const currRow = computed(() => {\n        const { renderParams } = props;\n        return renderParams.row;\n    });\n    const widgetOptions = computed(() => {\n        const { renderParams } = props;\n        const { widget } = renderParams;\n        return widget ? widget.options : {};\n    });\n    const cellModel = computed({\n        get() {\n            const { renderParams } = props;\n            const { row, column } = renderParams;\n            return XEUtils.get(row, column.field);\n        },\n        set(value) {\n            const { renderParams } = props;\n            const { row, column } = renderParams;\n            return XEUtils.set(row, column.field, value);\n        }\n    });\n    return {\n        currColumn,\n        currRow,\n        currWidget,\n        widgetOptions,\n        cellModel\n    };\n}\n", "import { defineComponent, h, ref, computed, nextTick, watch, reactive, inject } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getConfig, getI18n, createEvent, useSize } from '../../ui';\nimport { getFuncText } from '../../ui/src/utils';\nlet autoTxtElem;\nexport default defineComponent({\n    name: 'VxeTextarea',\n    props: {\n        modelValue: [String, Number],\n        className: String,\n        immediate: {\n            type: Boolean,\n            default: true\n        },\n        name: String,\n        readonly: {\n            type: Boolean,\n            default: null\n        },\n        editable: {\n            type: Boolean,\n            default: true\n        },\n        disabled: {\n            type: Boolean,\n            default: null\n        },\n        placeholder: String,\n        maxLength: [String, Number],\n        rows: {\n            type: [String, Number],\n            default: null\n        },\n        cols: {\n            type: [String, Number],\n            default: null\n        },\n        showWordCount: Boolean,\n        countMethod: Function,\n        autosize: [Boolean, Object],\n        form: String,\n        resize: {\n            type: String,\n            default: () => getConfig().textarea.resize\n        },\n        size: {\n            type: String,\n            default: () => getConfig().textarea.size || getConfig().size\n        },\n        // 已废弃\n        maxlength: [String, Number]\n    },\n    emits: [\n        'update:modelValue',\n        'input',\n        'keydown',\n        'keyup',\n        'click',\n        'change',\n        'focus',\n        'blur'\n    ],\n    setup(props, context) {\n        const { emit } = context;\n        const $xeForm = inject('$xeForm', null);\n        const formItemInfo = inject('xeFormItemInfo', null);\n        const xID = XEUtils.uniqueId();\n        const { computeSize } = useSize(props);\n        const reactData = reactive({\n            inputValue: props.modelValue\n        });\n        const refElem = ref();\n        const refTextarea = ref();\n        const refMaps = {\n            refElem,\n            refTextarea\n        };\n        const $xeTextarea = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps\n        };\n        let textareaMethods = {};\n        const computeFormReadonly = computed(() => {\n            const { readonly } = props;\n            if (readonly === null) {\n                if ($xeForm) {\n                    return $xeForm.props.readonly;\n                }\n                return false;\n            }\n            return readonly;\n        });\n        const computeIsDisabled = computed(() => {\n            const { disabled } = props;\n            if (disabled === null) {\n                if ($xeForm) {\n                    return $xeForm.props.disabled;\n                }\n                return false;\n            }\n            return disabled;\n        });\n        const computeInputReadonly = computed(() => {\n            const { editable } = props;\n            const formReadonly = computeFormReadonly.value;\n            return formReadonly || !editable;\n        });\n        const computeInpPlaceholder = computed(() => {\n            const { placeholder } = props;\n            if (placeholder) {\n                return getFuncText(placeholder);\n            }\n            const globalPlaceholder = getConfig().textarea.placeholder;\n            if (globalPlaceholder) {\n                return getFuncText(globalPlaceholder);\n            }\n            return getI18n('vxe.base.pleaseInput');\n        });\n        const computeInpMaxLength = computed(() => {\n            const { maxLength, maxlength } = props;\n            return maxLength || maxlength;\n        });\n        const computeInputCount = computed(() => {\n            return XEUtils.getSize(reactData.inputValue);\n        });\n        const computeIsCountError = computed(() => {\n            const inputCount = computeInputCount.value;\n            const inpMaxLength = computeInpMaxLength.value;\n            return inpMaxLength && inputCount > XEUtils.toNumber(inpMaxLength);\n        });\n        const computeSizeOpts = computed(() => {\n            return Object.assign({ minRows: 1, maxRows: 10 }, getConfig().textarea.autosize, props.autosize);\n        });\n        const updateAutoTxt = () => {\n            const { size, autosize } = props;\n            const { inputValue } = reactData;\n            if (autosize) {\n                if (!autoTxtElem) {\n                    autoTxtElem = document.createElement('div');\n                }\n                if (!autoTxtElem.parentNode) {\n                    document.body.appendChild(autoTxtElem);\n                }\n                const textElem = refTextarea.value;\n                if (!textElem) {\n                    return;\n                }\n                const textStyle = getComputedStyle(textElem);\n                autoTxtElem.className = ['vxe-textarea--autosize', size ? `size--${size}` : ''].join(' ');\n                autoTxtElem.style.width = `${textElem.clientWidth}px`;\n                autoTxtElem.style.padding = textStyle.padding;\n                autoTxtElem.innerText = ('' + (inputValue || '　')).replace(/\\n$/, '\\n　');\n            }\n        };\n        const handleResize = () => {\n            if (props.autosize) {\n                nextTick(() => {\n                    const sizeOpts = computeSizeOpts.value;\n                    const { minRows, maxRows } = sizeOpts;\n                    const textElem = refTextarea.value;\n                    if (!textElem) {\n                        return;\n                    }\n                    const sizeHeight = autoTxtElem.clientHeight;\n                    const textStyle = getComputedStyle(textElem);\n                    const lineHeight = XEUtils.toNumber(textStyle.lineHeight);\n                    const paddingTop = XEUtils.toNumber(textStyle.paddingTop);\n                    const paddingBottom = XEUtils.toNumber(textStyle.paddingBottom);\n                    const borderTopWidth = XEUtils.toNumber(textStyle.borderTopWidth);\n                    const borderBottomWidth = XEUtils.toNumber(textStyle.borderBottomWidth);\n                    const intervalHeight = paddingTop + paddingBottom + borderTopWidth + borderBottomWidth;\n                    const rowNum = (sizeHeight - intervalHeight) / lineHeight;\n                    const textRows = rowNum && /[0-9]/.test('' + rowNum) ? rowNum : Math.floor(rowNum) + 1;\n                    let vaildRows = textRows;\n                    if (textRows < minRows) {\n                        vaildRows = minRows;\n                    }\n                    else if (textRows > maxRows) {\n                        vaildRows = maxRows;\n                    }\n                    textElem.style.height = `${(vaildRows * lineHeight) + intervalHeight}px`;\n                });\n            }\n        };\n        const triggerEvent = (evnt) => {\n            const value = reactData.inputValue;\n            $xeTextarea.dispatchEvent(evnt.type, { value }, evnt);\n        };\n        const handleChange = (value, evnt) => {\n            reactData.inputValue = value;\n            emit('update:modelValue', value);\n            if (XEUtils.toValueString(props.modelValue) !== value) {\n                textareaMethods.dispatchEvent('change', { value }, evnt);\n                // 自动更新校验状态\n                if ($xeForm && formItemInfo) {\n                    $xeForm.triggerItemEvent(evnt, formItemInfo.itemConfig.field, value);\n                }\n            }\n        };\n        const inputEvent = (evnt) => {\n            const { immediate } = props;\n            const textElem = evnt.target;\n            const value = textElem.value;\n            reactData.inputValue = value;\n            if (immediate) {\n                handleChange(value, evnt);\n            }\n            $xeTextarea.dispatchEvent('input', { value }, evnt);\n            handleResize();\n        };\n        const changeEvent = (evnt) => {\n            const { immediate } = props;\n            if (immediate) {\n                triggerEvent(evnt);\n            }\n            else {\n                handleChange(reactData.inputValue, evnt);\n            }\n        };\n        const blurEvent = (evnt) => {\n            const { immediate } = props;\n            const { inputValue } = reactData;\n            if (!immediate) {\n                handleChange(inputValue, evnt);\n            }\n            $xeTextarea.dispatchEvent('blur', { value: inputValue }, evnt);\n        };\n        textareaMethods = {\n            dispatchEvent(type, params, evnt) {\n                emit(type, createEvent(evnt, { $textarea: $xeTextarea }, params));\n            },\n            focus() {\n                const textElem = refTextarea.value;\n                textElem.focus();\n                return nextTick();\n            },\n            blur() {\n                const textElem = refTextarea.value;\n                textElem.blur();\n                return nextTick();\n            }\n        };\n        Object.assign($xeTextarea, textareaMethods);\n        watch(() => props.modelValue, (val) => {\n            reactData.inputValue = val;\n            updateAutoTxt();\n        });\n        watch(computeSizeOpts, () => {\n            updateAutoTxt();\n            handleResize();\n        });\n        nextTick(() => {\n            const { autosize } = props;\n            if (autosize) {\n                updateAutoTxt();\n                handleResize();\n            }\n        });\n        const renderVN = () => {\n            const { className, resize, autosize, showWordCount, countMethod, rows, cols } = props;\n            const { inputValue } = reactData;\n            const vSize = computeSize.value;\n            const isDisabled = computeIsDisabled.value;\n            const isCountError = computeIsCountError.value;\n            const inputCount = computeInputCount.value;\n            const inputReadonly = computeInputReadonly.value;\n            const formReadonly = computeFormReadonly.value;\n            const inpPlaceholder = computeInpPlaceholder.value;\n            const inpMaxLength = computeInpMaxLength.value;\n            if (formReadonly) {\n                return h('div', {\n                    ref: refElem,\n                    class: ['vxe-textarea--readonly', className]\n                }, inputValue);\n            }\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-textarea', className, {\n                        [`size--${vSize}`]: vSize,\n                        'is--autosize': autosize,\n                        'is--count': showWordCount,\n                        'is--disabled': isDisabled,\n                        'is--rows': !XEUtils.eqNull(rows),\n                        'is--cols': !XEUtils.eqNull(cols)\n                    }],\n                spellcheck: false\n            }, [\n                h('textarea', {\n                    ref: refTextarea,\n                    class: 'vxe-textarea--inner',\n                    value: inputValue,\n                    name: props.name,\n                    placeholder: inpPlaceholder,\n                    maxlength: inpMaxLength,\n                    readonly: inputReadonly,\n                    disabled: isDisabled,\n                    rows,\n                    cols,\n                    style: resize\n                        ? {\n                            resize\n                        }\n                        : null,\n                    onInput: inputEvent,\n                    onChange: changeEvent,\n                    onKeydown: triggerEvent,\n                    onKeyup: triggerEvent,\n                    onClick: triggerEvent,\n                    onFocus: triggerEvent,\n                    onBlur: blurEvent\n                }),\n                showWordCount\n                    ? h('span', {\n                        class: ['vxe-textarea--count', {\n                                'is--error': isCountError\n                            }]\n                    }, countMethod ? `${countMethod({ value: inputValue })}` : `${inputCount}${inpMaxLength ? `/${inpMaxLength}` : ''}`)\n                    : null\n            ]);\n        };\n        $xeTextarea.renderVN = renderVN;\n        return $xeTextarea;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { defineComponent, ref, h, reactive, createCommentVNode } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getConfig, useSize, usePermission, createEvent } from '../../ui';\nimport { getSlotVNs } from '../../ui/src/vn';\nexport default defineComponent({\n    name: 'VxeTip',\n    props: {\n        title: {\n            type: [String, Number],\n            default: () => getConfig().tip.title\n        },\n        content: [String, Number],\n        status: String,\n        icon: {\n            type: String,\n            default: () => getConfig().tip.icon\n        },\n        /**\n         * 权限码\n         */\n        permissionCode: [String, Number],\n        size: {\n            type: String,\n            default: () => getConfig().tip.size || getConfig().size\n        }\n    },\n    emits: [],\n    setup(props, context) {\n        const { slots, emit } = context;\n        const xID = XEUtils.uniqueId();\n        const { computeSize } = useSize(props);\n        const { computePermissionInfo } = usePermission(props);\n        const refElem = ref();\n        const reactData = reactive({});\n        const refMaps = {\n            refElem\n        };\n        const computeMaps = {};\n        const $xeTip = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $tip: $xeTip }, params));\n        };\n        const tipMethods = {\n            dispatchEvent\n        };\n        const tipPrivateMethods = {};\n        Object.assign($xeTip, tipMethods, tipPrivateMethods);\n        const renderVN = () => {\n            const { status, content, icon, title } = props;\n            const defaultSlot = slots.default;\n            const titleSlot = slots.title;\n            const iconSlot = slots.icon;\n            const permissionInfo = computePermissionInfo.value;\n            const vSize = computeSize.value;\n            if (!permissionInfo.visible) {\n                return createCommentVNode();\n            }\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-tip', {\n                        [`size--${vSize}`]: vSize,\n                        [`theme--${status}`]: status,\n                        'has--title': !!(titleSlot || title)\n                    }]\n            }, [\n                iconSlot || icon\n                    ? h('div', {\n                        class: 'vxe-tip--icon'\n                    }, iconSlot\n                        ? getSlotVNs(iconSlot({}))\n                        : [\n                            h('i', {\n                                class: icon\n                            })\n                        ])\n                    : createCommentVNode(),\n                h('div', {\n                    class: 'vxe-tip--body'\n                }, [\n                    titleSlot || title\n                        ? h('div', {\n                            class: 'vxe-tip--title'\n                        }, titleSlot ? getSlotVNs(titleSlot({})) : XEUtils.toValueString(title))\n                        : createCommentVNode(),\n                    h('div', {\n                        class: 'vxe-tip--content'\n                    }, defaultSlot ? getSlotVNs(defaultSlot({})) : XEUtils.toValueString(content))\n                ])\n            ]);\n        };\n        $xeTip.renderVN = renderVN;\n        return $xeTip;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { h, onMounted, ref, watch } from 'vue';\nimport { VxeUI, getIcon, getI18n } from '@vxe-ui/core';\nimport VxeFormItemComponent from '../../../form/src/form-item';\nimport VxeButtonComponent from '../../../button/src/button';\nimport VxeTextareaComponent from '../../../textarea/src/textarea';\nimport VxeTipComponent from '../../../tip/src/tip';\nexport function useWidgetPropDataSource(props, renderConfig) {\n    const renConf = Object.assign({}, renderConfig);\n    const isSubOption = renConf.isSubOption;\n    const optionsContent = ref('');\n    const expandIndexList = ref([]);\n    const addOptionEvent = () => {\n        const { renderParams } = props;\n        const { widget } = renderParams;\n        const options = widget.options.options || [];\n        options.push({\n            value: getI18n('vxe.formDesign.widgetProp.dataSource.defValue', [options.length + 1])\n        });\n        widget.options.options = [...options];\n    };\n    const subRE = /^(\\s|\\t)+/;\n    const hasSubOption = (str) => {\n        return subRE.test(str);\n    };\n    const expandAllOption = () => {\n        const { renderParams } = props;\n        const { widget } = renderParams;\n        const options = widget.options.options || [];\n        const indexList = [];\n        options.forEach((group, gIndex) => {\n            const { options } = group;\n            if (options && options.length) {\n                indexList.push(gIndex);\n            }\n        });\n        expandIndexList.value = indexList;\n    };\n    const toggleExpandOption = (item, gIndex) => {\n        if (expandIndexList.value.includes(gIndex)) {\n            expandIndexList.value = expandIndexList.value.filter(num => num !== gIndex);\n        }\n        else {\n            expandIndexList.value.push(gIndex);\n        }\n    };\n    const removeOptionEvent = (item, group) => {\n        const { renderParams } = props;\n        const { widget } = renderParams;\n        const { options } = widget;\n        if (group) {\n            if (group.options) {\n                group.options = group.options.filter(obj => obj !== item);\n            }\n        }\n        else {\n            options.options = options.options.filter(obj => obj !== item);\n        }\n    };\n    const confirmBatchAddOptionEvent = () => {\n        const { renderParams } = props;\n        const { widget } = renderParams;\n        const optList = [];\n        const rowList = optionsContent.value.split('\\n');\n        let prevGroup = null;\n        if (isSubOption) {\n            rowList.forEach((str, index) => {\n                const nextStr = rowList[index + 1];\n                const value = str.trim();\n                if (!value) {\n                    return;\n                }\n                const item = {\n                    value\n                };\n                if (prevGroup) {\n                    if (hasSubOption(str)) {\n                        prevGroup.options.push(item);\n                        return;\n                    }\n                    prevGroup = null;\n                    optList.push(item);\n                }\n                else {\n                    optList.push(item);\n                }\n                if (nextStr) {\n                    if (hasSubOption(nextStr)) {\n                        prevGroup = Object.assign(item, { options: [] });\n                    }\n                }\n            });\n        }\n        else {\n            rowList.forEach((str) => {\n                optList.push({\n                    value: str.trim()\n                });\n            });\n        }\n        widget.options.options = optList;\n        expandAllOption();\n    };\n    const openPopupEditEvent = () => {\n        var _a;\n        const { renderParams } = props;\n        const { widget } = renderParams;\n        const contList = [];\n        (_a = widget.options.options) === null || _a === void 0 ? void 0 : _a.forEach(group => {\n            var _a;\n            contList.push(group.value);\n            (_a = group.options) === null || _a === void 0 ? void 0 : _a.forEach(item => {\n                contList.push(`\\t${item.value}`);\n            });\n        });\n        optionsContent.value = contList.join('\\n');\n        VxeUI.modal.open({\n            title: `${widget.title} - ${getI18n('vxe.formDesign.widgetProp.dataSource.batchEditOption')}`,\n            width: 500,\n            height: '50vh ',\n            resize: true,\n            showFooter: true,\n            showCancelButton: true,\n            showConfirmButton: true,\n            confirmButtonText: getI18n('vxe.formDesign.widgetProp.dataSource.buildOption'),\n            onConfirm: confirmBatchAddOptionEvent,\n            slots: {\n                default() {\n                    return h('div', {\n                        class: 'vxe-form-design--widget-form-item-data-source-popup'\n                    }, [\n                        h(VxeTipComponent, {\n                            status: 'primary',\n                            title: '',\n                            content: getI18n(`vxe.formDesign.widgetProp.dataSource.${isSubOption ? 'batchEditSubTip' : 'batchEditTip'}`)\n                        }),\n                        h(VxeTextareaComponent, {\n                            resize: 'none',\n                            modelValue: optionsContent.value,\n                            'onUpdate:modelValue'(val) {\n                                optionsContent.value = val;\n                            }\n                        })\n                    ]);\n                }\n            }\n        });\n    };\n    const renderOption = (item, group, isExpand, gIndex, hasSub, isFirst, isLast) => {\n        const hasFirstLevel = !group;\n        return h('div', {\n            class: ['vxe-form-design--widget-form-item-data-source-option', {\n                    'is--first': isFirst,\n                    'is--last': isLast\n                }]\n        }, [\n            h('div', {\n                class: 'vxe-form-design--widget-expand-btn'\n            }, hasFirstLevel && hasSub\n                ? [\n                    h('i', {\n                        class: isExpand ? getIcon().FORM_DESIGN_WIDGET_OPTION_EXPAND_CLOSE : getIcon().FORM_DESIGN_WIDGET_OPTION_EXPAND_OPEN,\n                        onClick() {\n                            toggleExpandOption(item, gIndex);\n                        }\n                    })\n                ]\n                : []),\n            h('input', {\n                class: 'vxe-default-input',\n                value: item.value,\n                onInput(evnt) {\n                    item.value = evnt.target.value;\n                }\n            }),\n            h(VxeButtonComponent, {\n                status: 'danger',\n                mode: 'text',\n                icon: getIcon().FORM_DESIGN_WIDGET_DELETE,\n                onClick() {\n                    removeOptionEvent(item, group);\n                }\n            })\n        ]);\n    };\n    const renderOptions = () => {\n        const { renderParams } = props;\n        const { widget } = renderParams;\n        const { options } = widget;\n        const groups = options.options;\n        const optVNs = [];\n        if (groups) {\n            groups.forEach((group, gIndex) => {\n                const { options } = group;\n                const isExpand = expandIndexList.value.includes(gIndex);\n                if (options && options.length) {\n                    optVNs.push(renderOption(group, null, isExpand, gIndex, true, gIndex === 0, gIndex === groups.length - 1));\n                    if (isExpand) {\n                        optVNs.push(h('div', {\n                            class: 'vxe-form-design--widget-form-item-data-source-sub-option'\n                        }, options.map(item => renderOption(item, group, isExpand, 0, false, false, false))));\n                    }\n                }\n                else {\n                    optVNs.push(renderOption(group, null, isExpand, gIndex, false, gIndex === 0, gIndex === groups.length - 1));\n                }\n            });\n        }\n        return optVNs;\n    };\n    watch(() => props.renderParams.widget, () => {\n        expandAllOption();\n    });\n    onMounted(() => {\n        expandAllOption();\n    });\n    const renderDataSourceFormItemContent = () => {\n        return [\n            h('div', {}, [\n                h(VxeButtonComponent, {\n                    status: 'primary',\n                    mode: 'text',\n                    content: getI18n('vxe.formDesign.widgetProp.dataSource.addOption'),\n                    onClick: addOptionEvent\n                }),\n                h(VxeButtonComponent, {\n                    status: 'primary',\n                    mode: 'text',\n                    content: getI18n('vxe.formDesign.widgetProp.dataSource.batchEditOption'),\n                    onClick: openPopupEditEvent\n                })\n            ]),\n            h('div', {\n                class: 'vxe-form-design--widget-form-item-data-source-wrapper'\n            }, renderOptions())\n        ];\n    };\n    return {\n        renderDataSourceFormItem() {\n            return h(VxeFormItemComponent, {\n                title: getI18n('vxe.formDesign.widgetProp.dataSource.name'),\n                field: 'options'\n            }, {\n                default() {\n                    return renderDataSourceFormItemContent();\n                }\n            });\n        },\n        renderDataSourceFormItemContent\n    };\n}\n", "import { getI18n } from '@vxe-ui/core';\nexport const getFormDesignWidgetName = (name) => {\n    return getI18n(`vxe.formDesign.widget.component.${name}`);\n};\nexport const handleGetFormDesignWidgetName = (params) => {\n    return getFormDesignWidgetName(params.name);\n};\n", "import { handleGetFormDesignWidgetName } from '../render/util';\nexport const getWidgetTextConfig = () => {\n    return {\n        title: handleGetFormDesignWidgetName,\n        icon: 'vxe-icon-text',\n        group: 'layout',\n        options: {\n            color: '',\n            align: '',\n            bold: false,\n            fontSize: ''\n        }\n    };\n};\n", "import { defineComponent, h, ref } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getI18n } from '@vxe-ui/core';\nimport { useWidgetName } from '../../form-design/src/use';\nimport VxeFormComponent from '../../form/src/form';\nimport VxeInputComponent from '../../input/src/input';\nimport VxeFormItemComponent from '../../form/src/form-item';\nconst getFontSizeOptions = () => {\n    return XEUtils.range(12, 27).map((num) => {\n        return { label: `${num}px`, value: `${num}px` };\n    });\n};\nconst getAlignOptions = () => {\n    return [\n        { label: getI18n('vxe.formDesign.widgetProp.textProp.alignLeft'), value: '' },\n        { label: getI18n('vxe.formDesign.widgetProp.textProp.alignCenter'), value: 'center' },\n        { label: getI18n('vxe.formDesign.widgetProp.textProp.alignRight'), value: 'right' }\n    ];\n};\nconst getBoldOptions = () => {\n    return [\n        { label: getI18n('vxe.formDesign.widgetProp.textProp.fontNormal'), value: false },\n        { label: getI18n('vxe.formDesign.widgetProp.textProp.fontBold'), value: true }\n    ];\n};\nexport const WidgetTextFormComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const { computeKebabCaseName } = useWidgetName(props);\n        const alignOpts = ref(getAlignOptions());\n        const boldOpts = ref(getBoldOptions());\n        const fontSizeOpts = ref(getFontSizeOptions());\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormComponent, {\n                class: ['vxe-form-design--widget-render-form-wrapper', `widget-${kebabCaseName}`],\n                vertical: true,\n                span: 24,\n                titleBold: true,\n                titleOverflow: true,\n                data: widget.options\n            }, {\n                default() {\n                    return [\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.textProp.name')\n                        }, {\n                            default() {\n                                return h(VxeInputComponent, {\n                                    modelValue: widget.title,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.title = val;\n                                    }\n                                });\n                            }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.textProp.boldTitle'),\n                            field: 'bold',\n                            itemRender: { name: 'VxeRadioGroup', options: boldOpts.value }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.textProp.alignTitle'),\n                            field: 'align',\n                            itemRender: { name: 'VxeRadioGroup', options: alignOpts.value }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.textProp.sizeTitle'),\n                            field: 'fontSize',\n                            itemRender: { name: 'VxeSelect', options: fontSizeOpts.value }\n                        })\n                    ];\n                }\n            });\n        };\n    }\n});\n", "import { defineComponent, h } from 'vue';\nimport { useWidgetName } from '../../form-design/src/use';\nimport VxeFormItemComponent from '../../form/src/form-item';\nexport const WidgetTextViewComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const { computeKebabCaseName } = useWidgetName(props);\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const { options } = widget;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormItemComponent, {\n                class: ['vxe-form-design--widget-render-form-item', `widget-${kebabCaseName}`],\n                align: options.align\n            }, {\n                default() {\n                    return h('div', {\n                        style: {\n                            fontSize: options.fontSize,\n                            fontWeight: options.bold ? 'bold' : ''\n                        }\n                    }, widget.title);\n                }\n            });\n        };\n    }\n});\n", "import XEUtils from 'xe-utils';\nimport { handleGetFormDesignWidgetName } from '../render/util';\nexport const getWidgetRowConfig = (params) => {\n    const { $formDesign } = params;\n    const defaultColSize = 2;\n    return {\n        title: handleGetFormDesignWidgetName,\n        group: 'layout',\n        icon: 'vxe-icon-row-col',\n        options: {\n            colSize: defaultColSize,\n            colSpan: '12,12'\n        },\n        children: $formDesign\n            ? XEUtils.range(0, defaultColSize).map(() => {\n                return $formDesign.createEmptyWidget();\n            })\n            : []\n    };\n};\n", "import { defineComponent, ref, h, reactive, provide, computed } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getConfig, createEvent, useSize } from '../../ui';\nimport { toCssUnit } from '../../ui/src/dom';\nexport default defineComponent({\n    name: 'VxeRow',\n    props: {\n        gutter: [Number, String, Array],\n        wrap: {\n            type: Boolean,\n            default: () => getConfig().row.wrap\n        },\n        vertical: Boolean,\n        size: {\n            type: String,\n            default: () => getConfig().row.size || getConfig().size\n        }\n    },\n    emits: [\n        'click'\n    ],\n    setup(props, context) {\n        const { slots, emit } = context;\n        const xID = XEUtils.uniqueId();\n        useSize(props);\n        const refElem = ref();\n        const reactData = reactive({});\n        const refMaps = {\n            refElem\n        };\n        const computeRowStyle = computed(() => {\n            const { gutter, vertical } = props;\n            const style = {};\n            if (gutter) {\n                let [lrGutter, tbGutter] = XEUtils.isArray(gutter) ? gutter : [gutter];\n                if (vertical) {\n                    tbGutter = lrGutter;\n                    lrGutter = '';\n                }\n                if (lrGutter) {\n                    const offsetSize = XEUtils.isNumber(lrGutter) ? toCssUnit(-(lrGutter / 2)) : `calc(${toCssUnit(lrGutter)} / 2 * -1)`;\n                    style.marginLeft = offsetSize;\n                    style.marginRight = offsetSize;\n                }\n                if (tbGutter) {\n                    const offsetSize = XEUtils.isNumber(tbGutter) ? toCssUnit(-(tbGutter / 2)) : `calc(${toCssUnit(tbGutter)} / 2 * -1)`;\n                    style.marginTop = offsetSize;\n                    style.marginBottom = offsetSize;\n                }\n            }\n            return style;\n        });\n        const computeMaps = {};\n        const $xeRow = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const clickEvent = (evnt) => {\n            dispatchEvent('click', {}, evnt);\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $row: $xeRow }, params));\n        };\n        const rowMethods = {\n            dispatchEvent\n        };\n        const rowPrivateMethods = {};\n        Object.assign($xeRow, rowMethods, rowPrivateMethods);\n        const renderVN = () => {\n            const { vertical, wrap } = props;\n            const rowStyle = computeRowStyle.value;\n            const defaultSlot = slots.default;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-row', {\n                        'is--vertical': vertical,\n                        'is--wrap': wrap\n                    }],\n                style: rowStyle,\n                onClick: clickEvent\n            }, defaultSlot ? defaultSlot({}) : []);\n        };\n        provide('$xeRow', $xeRow);\n        $xeRow.renderVN = renderVN;\n        return $xeRow;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { defineComponent, h, ref, computed, inject } from 'vue';\nimport { getI18n } from '@vxe-ui/core';\nimport { useWidgetName } from '../../form-design/src/use';\nimport VxeFormComponent from '../../form/src/form';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeRowComponent from '../../row/src/row';\nimport VxeColComponent from '../../row/src/col';\nimport XEUtils from 'xe-utils';\nexport const WidgetRowFormComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const $xeFormDesign = inject('$xeFormDesign', null);\n        if (!$xeFormDesign) {\n            return () => [];\n        }\n        const { computeKebabCaseName } = useWidgetName(props);\n        const spanOptions = ref([\n            {\n                label: getI18n('vxe.formDesign.widgetProp.rowProp.col2'),\n                value: 2,\n                list: [\n                    { value: '12,12', spans: [12, 12] },\n                    { value: '8,16', spans: [8, 16] },\n                    { value: '16,8', spans: [16, 8] },\n                    { value: '6,18', spans: [6, 18] },\n                    { value: '18,6', spans: [18, 6] }\n                ]\n            },\n            {\n                label: getI18n('vxe.formDesign.widgetProp.rowProp.col3'),\n                value: 3,\n                list: [\n                    { value: '8,8,8', spans: [8, 8, 8] },\n                    { value: '6,6,12', spans: [6, 6, 12] },\n                    { value: '12,6,6', spans: [12, 6, 6] },\n                    { value: '6,12,6', spans: [6, 12, 6] }\n                ]\n            },\n            {\n                label: getI18n('vxe.formDesign.widgetProp.rowProp.col4'),\n                value: 4,\n                list: [\n                    { value: '6,6,6,6', spans: [6, 6, 6, 6] }\n                ]\n            },\n            {\n                label: getI18n('vxe.formDesign.widgetProp.rowProp.col6'),\n                value: 6,\n                list: [\n                    { value: '4,4,4,4,4,4', spans: [4, 4, 4, 4, 4, 4] }\n                ]\n            }\n        ]);\n        const labelMaps = {\n            18: '3/4',\n            16: '2/3',\n            12: '1/2',\n            8: '1/3',\n            6: '1/4',\n            4: '1/6'\n        };\n        const computeSelectSpanItem = computed(() => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const { options } = widget;\n            return spanOptions.value.find(item => item.value === options.colSize);\n        });\n        const changeColSpan = (item) => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const { options } = widget;\n            const { reactData: formDesignReactData } = $xeFormDesign;\n            const { widgetObjList } = formDesignReactData;\n            const oldChildList = widget.children.filter(item => item.name);\n            const overList = oldChildList.slice(options.colSize);\n            if (overList.length) {\n                const rest = XEUtils.findTree(widgetObjList, obj => obj.id === widget.id, { children: 'children' });\n                if (rest) {\n                    const { items, index } = rest;\n                    if (index >= items.length - 1) {\n                        items.push(...overList);\n                    }\n                    else {\n                        items.splice(index + 1, 0, ...overList);\n                    }\n                }\n            }\n            options.colSpan = item.value;\n            widget.children = XEUtils.range(0, options.colSize).map((num, index) => {\n                return oldChildList[index] || $xeFormDesign.createEmptyWidget();\n            });\n        };\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormComponent, {\n                class: `vxe-form-design--widget-${kebabCaseName}-form`,\n                vertical: true,\n                span: 24,\n                titleBold: true,\n                titleOverflow: true,\n                data: widget.options\n            }, {\n                default() {\n                    return [\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.rowProp.colSize'),\n                            field: 'colSize',\n                            itemRender: { name: 'VxeRadioGroup', options: spanOptions.value, props: { type: 'button' } }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.rowProp.layout')\n                        }, {\n                            default() {\n                                const selectSpanItem = computeSelectSpanItem.value;\n                                if (selectSpanItem) {\n                                    return selectSpanItem.list.map((item, rIndex) => {\n                                        return h(VxeRowComponent, {\n                                            key: rIndex,\n                                            class: [`vxe-form-design--widget-${kebabCaseName}-form-row`, {\n                                                    'is--active': item.value === widget.options.colSpan\n                                                }],\n                                            onClick() {\n                                                changeColSpan(item);\n                                            }\n                                        }, {\n                                            default() {\n                                                return item.spans.map((span, sIndex) => {\n                                                    return h(VxeColComponent, {\n                                                        key: `${rIndex}${sIndex}`,\n                                                        class: `vxe-form-design--widget-${kebabCaseName}-form-col`,\n                                                        span\n                                                    }, {\n                                                        default() {\n                                                            return h('div', {}, `${labelMaps[span]}`);\n                                                        }\n                                                    });\n                                                });\n                                            }\n                                        });\n                                    });\n                                }\n                                return [];\n                            }\n                        })\n                    ];\n                }\n            });\n        };\n    }\n});\n", "import { defineComponent, h, inject, computed, createCommentVNode } from 'vue';\nimport { hasFormDesignLayoutType } from '../src/util';\nimport { renderer, getIcon } from '@vxe-ui/core';\nimport { getSlotVNs } from '../../ui/src/vn';\nimport XEUtils from 'xe-utils';\nimport VxeFormGroupComponent from '../../form/src/form-group';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeRowComponent from '../../row/src/row';\nimport VxeColComponent from '../../row/src/col';\nimport VxeButtonComponent from '../../button/src/button';\nconst ViewColItemComponent = defineComponent({\n    name: 'ViewColItem',\n    props: {\n        parentWidget: {\n            type: Object,\n            default: () => ({})\n        },\n        widget: {\n            type: Object,\n            default: () => ({})\n        },\n        span: Number,\n        colItemIndex: {\n            type: Number,\n            default: 0\n        }\n    },\n    emits: [],\n    setup(props) {\n        const $xeFormDesign = inject('$xeFormDesign', null);\n        if (!$xeFormDesign) {\n            return () => [];\n        }\n        const { reactData: formDesignReactData } = $xeFormDesign;\n        const handleDragstartColItemEvent = (evnt) => {\n            evnt.stopPropagation();\n            const divEl = evnt.currentTarget;\n            const dataTransfer = evnt.dataTransfer;\n            const widgetId = divEl.getAttribute('data-widget-id') || '';\n            const dragWidget = $xeFormDesign.getWidgetById(widgetId);\n            if (dataTransfer) {\n                dataTransfer.setData('text/plain', widgetId);\n            }\n            formDesignReactData.sortWidget = dragWidget;\n            formDesignReactData.dragWidget = null;\n        };\n        const sortDragenterColItemEvent = (evnt) => {\n            const { parentWidget, colItemIndex } = props;\n            const { widgetObjList, sortWidget } = formDesignReactData;\n            const targetWidget = parentWidget.children[colItemIndex];\n            const formDesignInternalData = $xeFormDesign.internalData;\n            evnt.stopPropagation();\n            if (sortWidget && parentWidget && sortWidget.id !== parentWidget.id) {\n                if (hasFormDesignLayoutType(sortWidget)) {\n                    return;\n                }\n                if (!hasFormDesignLayoutType(targetWidget)) {\n                    const currRest = XEUtils.findTree(widgetObjList, item => item && item.id === sortWidget.id, { children: 'children' });\n                    if (currRest) {\n                        const { item, index, items, parent } = currRest;\n                        // 如果数据异常，动态修复\n                        if (parentWidget.children.length !== parentWidget.options.colSize) {\n                            parentWidget.children = XEUtils.range(0, parentWidget.options.colSize).map((index) => {\n                                return parentWidget.children[index] || $xeFormDesign.createEmptyWidget();\n                            });\n                        }\n                        // 如果是 row 内移动\n                        if (parent && parent.id === parentWidget.id) {\n                            parentWidget.children[colItemIndex] = item;\n                            parentWidget.children[index] = targetWidget;\n                        }\n                        else {\n                            // 如果已存在控件\n                            if (targetWidget && targetWidget.name) {\n                                return;\n                            }\n                            parentWidget.children[colItemIndex] = item;\n                            items.splice(index, 1);\n                        }\n                        evnt.preventDefault();\n                        formDesignInternalData.lastDragTime = Date.now();\n                        $xeFormDesign.dispatchEvent('drag-widget', { widget: item }, evnt);\n                    }\n                }\n            }\n        };\n        return () => {\n            const { widget, span } = props;\n            const { dragWidget, activeWidget, sortWidget } = formDesignReactData;\n            return h(VxeFormItemComponent, {\n                span,\n                padding: false\n            }, {\n                default() {\n                    const name = widget ? widget.name : '';\n                    const compConf = renderer.get(name) || {};\n                    const renderWidgetDesignView = compConf.renderFormDesignWidgetEdit || compConf.renderFormDesignWidgetView;\n                    const renderOpts = widget || { name };\n                    const params = { widget, readonly: false, disabled: false, isEditMode: true, isViewMode: false, $formDesign: $xeFormDesign, $formView: null };\n                    const isActive = activeWidget && widget && activeWidget.id === widget.id;\n                    const isEmptyWidget = !renderWidgetDesignView;\n                    return h('div', {\n                        class: 'vxe-form-design--widget-row-view',\n                        'data-widget-id': widget.id,\n                        draggable: !isEmptyWidget,\n                        onDragstart: handleDragstartColItemEvent,\n                        onDragenter: sortDragenterColItemEvent,\n                        onClick(evnt) {\n                            if (widget) {\n                                $xeFormDesign.handleClickWidget(evnt, widget);\n                            }\n                        }\n                    }, [\n                        h('div', {\n                            class: ['vxe-form-design--widget-row-view-item-inner', {\n                                    'is--empty': isEmptyWidget,\n                                    'is--active': isActive,\n                                    'is--sort': sortWidget && widget && sortWidget.id === widget.id,\n                                    'is--drag': dragWidget && widget && dragWidget.id === widget.id\n                                }]\n                        }, [\n                            renderWidgetDesignView\n                                ? h('div', {\n                                    class: 'vxe-form-design--widget-row-view-item-wrapper'\n                                }, [\n                                    h('div', {\n                                        class: 'vxe-form-design--widget-row-view-item-box vxe-form--item-row'\n                                    }, getSlotVNs(renderWidgetDesignView(renderOpts, params))),\n                                    isActive\n                                        ? h('div', {\n                                            class: 'vxe-form-design--preview-item-operate'\n                                        }, [\n                                            h(VxeButtonComponent, {\n                                                icon: getIcon().FORM_DESIGN_WIDGET_COPY,\n                                                status: 'primary',\n                                                size: 'mini',\n                                                circle: true,\n                                                onClick(params) {\n                                                    $xeFormDesign.handleCopyWidget(params.$event, widget);\n                                                }\n                                            }),\n                                            h(VxeButtonComponent, {\n                                                icon: getIcon().FORM_DESIGN_WIDGET_DELETE,\n                                                status: 'danger',\n                                                size: 'mini',\n                                                circle: true,\n                                                onClick(params) {\n                                                    $xeFormDesign.handleRemoveWidget(params.$event, widget);\n                                                }\n                                            })\n                                        ])\n                                        : createCommentVNode()\n                                ])\n                                : h('div', {\n                                    class: 'vxe-form-design--widget-row-view-empty'\n                                }, '控件位置')\n                        ])\n                    ]);\n                }\n            });\n        };\n    }\n});\nexport const WidgetRowEditComponent = defineComponent({\n    name: 'WidgetRowEdit',\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const computedColObjList = computed(() => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const { options } = widget;\n            const { colSpan } = options;\n            const colList = colSpan ? `${colSpan}`.split(',') : [];\n            const rest = colList.map((span) => Number(span));\n            return rest;\n        });\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            return h(VxeFormGroupComponent, {\n                field: widget.field\n            }, {\n                default() {\n                    const colObjList = computedColObjList.value;\n                    return colObjList.map((span, colItemIndex) => {\n                        return h(ViewColItemComponent, {\n                            key: colItemIndex,\n                            parentWidget: widget,\n                            widget: widget.children[colItemIndex],\n                            span,\n                            colItemIndex\n                        });\n                    });\n                }\n            });\n        };\n    }\n});\nexport const WidgetRowViewComponent = defineComponent({\n    name: 'WidgetRowView',\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const $xeFormDesign = inject('$xeFormDesign', null);\n        const $xeFormView = inject('$xeFormView', null);\n        const computedColObjList = computed(() => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const { options } = widget;\n            const { colSpan } = options;\n            const colList = colSpan ? `${colSpan}`.split(',') : [];\n            const rest = colList.map((span) => Number(span));\n            return rest;\n        });\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const colObjList = computedColObjList.value;\n            return h(VxeRowComponent, {}, {\n                default() {\n                    return colObjList.map((span, colItemIndex) => {\n                        return h(VxeColComponent, {\n                            key: colItemIndex,\n                            class: 'vxe-form--item-row',\n                            span\n                        }, {\n                            default() {\n                                const subWidget = widget.children[colItemIndex];\n                                if (subWidget) {\n                                    const { name } = subWidget;\n                                    const compConf = renderer.get(name) || {};\n                                    const renderWidgetDesignView = compConf.renderFormDesignWidgetView;\n                                    const renderOpts = subWidget;\n                                    const isEditMode = !!$xeFormDesign;\n                                    const params = { widget: subWidget, readonly: false, disabled: false, isEditMode, isViewMode: !isEditMode, $formDesign: $xeFormDesign, $formView: $xeFormView };\n                                    if (renderWidgetDesignView) {\n                                        return getSlotVNs(renderWidgetDesignView(renderOpts, params));\n                                    }\n                                }\n                                return createCommentVNode();\n                            }\n                        });\n                    });\n                }\n            });\n        };\n    }\n});\n", "import { handleGetFormDesignWidgetName } from '../render/util';\nexport const getWidgetSubtableConfig = () => {\n    return {\n        title: handleGetFormDesignWidgetName,\n        group: 'layout',\n        icon: 'vxe-icon-subtable',\n        options: {\n            showCheckbox: false\n        }\n    };\n};\n", "import { defineComponent, h, inject } from 'vue';\nimport { getI18n } from '@vxe-ui/core';\nimport { useWidgetName } from '../../form-design/src/use';\nimport VxeFormComponent from '../../form/src/form';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeInputComponent from '../../input/src/input';\nimport VxeSwitchComponent from '../../switch/src/switch';\nexport const WidgetSubtableFormComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const $xeFormDesign = inject('$xeFormDesign', null);\n        if (!$xeFormDesign) {\n            return () => [];\n        }\n        const { computeKebabCaseName } = useWidgetName(props);\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const { options } = widget;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormComponent, {\n                class: `vxe-form-design--widget-${kebabCaseName}-form`,\n                vertical: true,\n                span: 24,\n                titleBold: true,\n                titleOverflow: true,\n                data: options\n            }, {\n                default() {\n                    return [\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.name')\n                        }, {\n                            default() {\n                                return h(VxeInputComponent, {\n                                    modelValue: widget.title,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.title = val;\n                                    }\n                                });\n                            }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.subtableProp.showCheckbox'),\n                            field: 'showCheckbox'\n                        }, {\n                            default() {\n                                return h(VxeSwitchComponent, {\n                                    modelValue: options.showCheckbox,\n                                    'onUpdate:modelValue'(val) {\n                                        options.showCheckbox = val;\n                                    }\n                                });\n                            }\n                        })\n                    ];\n                }\n            });\n        };\n    }\n});\n", "import { ref, defineComponent, inject, h, createCommentVNode, TransitionGroup, computed, nextTick } from 'vue';\nimport { VxeUI, renderer, getIcon, getI18n } from '@vxe-ui/core';\nimport XEUtils from 'xe-utils';\nimport { hasFormDesignLayoutType } from '../src/util';\nimport { getSlotVNs } from '../../ui/src/vn';\nimport { useWidgetName } from '../../form-design/src/use';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeButtonComponent from '../../button/src/button';\nimport VxeCheckboxComponent from '../../checkbox/src/checkbox';\nconst ViewSubItemComponent = defineComponent({\n    props: {\n        parentWidget: {\n            type: Object,\n            default: () => ({})\n        },\n        widget: {\n            type: Object,\n            default: () => ({})\n        },\n        childIndex: {\n            type: Number,\n            default: 0\n        }\n    },\n    emits: [],\n    setup(props) {\n        const $xeFormDesign = inject('$xeFormDesign', null);\n        const $xeFormView = inject('$xeFormView', null);\n        if (!$xeFormDesign) {\n            return () => [];\n        }\n        const { reactData: formDesignReactData } = $xeFormDesign;\n        const sortDragstartSubItemEvent = (evnt) => {\n            evnt.stopPropagation();\n            const divEl = evnt.currentTarget;\n            const dataTransfer = evnt.dataTransfer;\n            const widgetId = divEl.getAttribute('data-widget-id') || '';\n            const dragWidget = $xeFormDesign.getWidgetById(widgetId);\n            if (dataTransfer) {\n                dataTransfer.setData('text/plain', widgetId);\n            }\n            formDesignReactData.sortWidget = dragWidget;\n            formDesignReactData.dragWidget = null;\n        };\n        const sortDragenterSubItemEvent = (evnt) => {\n            const { parentWidget, childIndex } = props;\n            const { widgetObjList, sortWidget } = formDesignReactData;\n            const targetWidget = parentWidget.children[childIndex];\n            const formDesignInternalData = $xeFormDesign.internalData;\n            const { lastDragTime } = formDesignInternalData;\n            evnt.stopPropagation();\n            if (lastDragTime && lastDragTime > Date.now() - 300) {\n                evnt.preventDefault();\n                return;\n            }\n            if (sortWidget && targetWidget && parentWidget) {\n                if (sortWidget.id === parentWidget.id) {\n                    return;\n                }\n                if (sortWidget.id === targetWidget.id) {\n                    return;\n                }\n                if (hasFormDesignLayoutType(sortWidget)) {\n                    return;\n                }\n                if (targetWidget && !hasFormDesignLayoutType(targetWidget)) {\n                    const currRest = XEUtils.findTree(widgetObjList, item => item.id === sortWidget.id, { children: 'children' });\n                    if (currRest) {\n                        const { item, index, items, parent } = currRest;\n                        // 如果是 subtable 内移动\n                        if (parent && parent.id === parentWidget.id) {\n                            parentWidget.children[childIndex] = item;\n                            parentWidget.children[index] = targetWidget;\n                        }\n                        else {\n                            parentWidget.children.splice(childIndex, 0, item);\n                            items.splice(index, 1);\n                        }\n                        formDesignInternalData.lastDragTime = Date.now();\n                        $xeFormDesign.dispatchEvent('drag-widget', { widget: item }, evnt);\n                    }\n                }\n            }\n        };\n        return () => {\n            const { widget } = props;\n            const { dragWidget, activeWidget, sortWidget } = formDesignReactData;\n            const name = widget ? widget.name : '';\n            const compConf = renderer.get(name) || {};\n            const renderSubtableView = compConf.renderFormDesignWidgetSubtableEditView || compConf.renderFormDesignWidgetSubtableCellView || compConf.renderFormDesignWidgetSubtableDefaultView;\n            const renderWidgetDesignView = compConf.renderFormDesignWidgetEdit || compConf.renderFormDesignWidgetView;\n            const renderOpts = widget || { name };\n            const isEditMode = !!$xeFormDesign;\n            const defParams = { widget, readonly: false, disabled: false, isEditMode, isViewMode: !isEditMode, $formDesign: $xeFormDesign, $formView: $xeFormView };\n            const isActive = activeWidget && widget && activeWidget.id === widget.id;\n            const subOpts = { name };\n            const subParams = {\n                $table: null,\n                $grid: null,\n                seq: '',\n                column: {\n                    field: widget.field,\n                    title: widget.title\n                },\n                columnIndex: 0,\n                $columnIndex: 0,\n                _columnIndex: 0,\n                rowid: '',\n                row: {},\n                rowIndex: 0,\n                $rowIndex: 0,\n                _rowIndex: 0,\n                isEdit: false,\n                isHidden: false,\n                fixed: null,\n                type: '',\n                level: 1,\n                visibleData: [],\n                items: [],\n                data: [],\n                widget: widget\n            };\n            return h('div', {\n                class: ['vxe-form-design--widget-subtable-view-item', {\n                        'is--active': isActive,\n                        'is--sort': sortWidget && widget && sortWidget.id === widget.id,\n                        'is--drag': dragWidget && widget && dragWidget.id === widget.id\n                    }],\n                draggable: true,\n                'data-widget-id': widget.id,\n                onDragstart: sortDragstartSubItemEvent,\n                onDragenter: sortDragenterSubItemEvent,\n                onClick(evnt) {\n                    if (widget) {\n                        $xeFormDesign.handleClickWidget(evnt, widget);\n                    }\n                }\n            }, [\n                h('div', {\n                    class: 'vxe-form-design--widget-subtable-view-item-wrapper'\n                }, [\n                    h('div', {\n                        class: 'vxe-form-design--widget-subtable-view-item-box vxe-form--item-row'\n                    }, renderSubtableView\n                        ? h(VxeFormItemComponent, {\n                            class: ['vxe-form-design--widget-render-form-item'],\n                            title: widget.title,\n                            field: widget.field,\n                            itemRender: {}\n                        }, {\n                            default() {\n                                return getSlotVNs(renderSubtableView(subOpts, subParams));\n                            }\n                        })\n                        : (renderWidgetDesignView\n                            ? getSlotVNs(renderWidgetDesignView(renderOpts, defParams))\n                            : [])),\n                    isActive\n                        ? h('div', {\n                            class: 'vxe-form-design--preview-item-operate'\n                        }, [\n                            h(VxeButtonComponent, {\n                                icon: getIcon().FORM_DESIGN_WIDGET_COPY,\n                                status: 'primary',\n                                size: 'mini',\n                                circle: true,\n                                onClick(params) {\n                                    $xeFormDesign.handleCopyWidget(params.$event, widget);\n                                }\n                            }),\n                            h(VxeButtonComponent, {\n                                icon: getIcon().FORM_DESIGN_WIDGET_DELETE,\n                                status: 'danger',\n                                size: 'mini',\n                                circle: true,\n                                onClick(params) {\n                                    $xeFormDesign.handleRemoveWidget(params.$event, widget);\n                                }\n                            })\n                        ])\n                        : createCommentVNode()\n                ])\n            ]);\n        };\n    }\n});\nexport const WidgetSubtableEditComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const $xeFormDesign = inject('$xeFormDesign', null);\n        if (!$xeFormDesign) {\n            return () => [];\n        }\n        const { reactData: formDesignReactData } = $xeFormDesign;\n        const handleDragoverWrapperEvent = (evnt) => {\n            const { sortWidget, widgetObjList } = formDesignReactData;\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            evnt.stopPropagation();\n            if (!sortWidget || !widget || widget.id === sortWidget.id) {\n                return;\n            }\n            if (hasFormDesignLayoutType(sortWidget)) {\n                if (VxeUI.modal) {\n                    VxeUI.modal.message({\n                        content: getI18n('vxe.formDesign.widgetProp.subtableProp.errSubDrag'),\n                        status: 'error',\n                        id: 'errSubDrag'\n                    });\n                }\n                return;\n            }\n            // 如果控件不在当前子表中，则拖进去\n            if (widget.name && !widget.children.some(item => item.id === sortWidget.id)) {\n                const rest = XEUtils.findTree(widgetObjList, item => item.id === sortWidget.id, { children: 'children' });\n                if (rest) {\n                    const { item, index, items } = rest;\n                    formDesignReactData.sortWidget = null;\n                    formDesignReactData.activeWidget = item;\n                    widget.children.push(item);\n                    items.splice(index, 1);\n                    formDesignReactData.sortWidget = item;\n                }\n            }\n        };\n        const handleDragenterWrapperEvent = (evnt) => {\n            evnt.stopPropagation();\n        };\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const { title, children, options } = widget;\n            const { showCheckbox } = options;\n            return h(VxeFormItemComponent, {\n                title,\n                className: 'vxe-form-design--widget-subtable-form-item'\n            }, {\n                default() {\n                    return h('div', {\n                        class: 'vxe-form-design--widget-subtable-view',\n                        onDragenter: handleDragenterWrapperEvent,\n                        onDragover: handleDragoverWrapperEvent\n                    }, [\n                        h('div', {\n                            class: 'vxe-form-design--widget-subtable-view-left'\n                        }, [\n                            showCheckbox\n                                ? h('div', {\n                                    class: 'vxe-form-design--widget-subtable-col'\n                                }, [\n                                    h('div', {\n                                        class: 'vxe-form-design--widget-subtable-head'\n                                    }, [\n                                        h(VxeCheckboxComponent)\n                                    ]),\n                                    h('div', {\n                                        class: 'vxe-form-design--widget-subtable-body'\n                                    }, [\n                                        h(VxeCheckboxComponent)\n                                    ])\n                                ])\n                                : createCommentVNode(),\n                            h('div', {\n                                class: 'vxe-form-design--widget-subtable-col'\n                            }, [\n                                h('div', {\n                                    class: 'vxe-form-design--widget-subtable-head'\n                                }, getI18n('vxe.formDesign.widgetProp.subtableProp.seqTitle')),\n                                h('div', {\n                                    class: 'vxe-form-design--widget-subtable-body'\n                                }, '1')\n                            ])\n                        ]),\n                        h('div', {\n                            class: 'vxe-form-design--widget-subtable-view-right'\n                        }, [\n                            h('div', {\n                                class: 'vxe-form-design--widget-subtable-view-wrapper'\n                            }, [\n                                h(TransitionGroup, {\n                                    class: 'vxe-form-design--widget-subtable-view-list',\n                                    tag: 'div',\n                                    name: 'vxe-form-design--widget-subtable-view-list'\n                                }, {\n                                    default: () => {\n                                        return children\n                                            ? children.map((childWidget, childIndex) => {\n                                                return h(ViewSubItemComponent, {\n                                                    key: childWidget.id,\n                                                    parentWidget: widget,\n                                                    widget: childWidget,\n                                                    childIndex\n                                                });\n                                            })\n                                            : [];\n                                    }\n                                }),\n                                h('div', {\n                                    key: 'empty',\n                                    class: 'vxe-form-design--widget-subtable-view-empty'\n                                }, getI18n('vxe.formDesign.widgetProp.subtableProp.colPlace'))\n                            ])\n                        ])\n                    ]);\n                }\n            });\n        };\n    }\n});\nexport const WidgetSubtableViewComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const VxeTableGridComponent = VxeUI.getComponent('VxeGrid');\n        const $xeFormView = inject('$xeFormView', null);\n        const { computeKebabCaseName } = useWidgetName(props);\n        const refGrid = ref();\n        const defaultDataList = ref([\n            {}\n        ]);\n        const computeFormReadonly = computed(() => {\n            if ($xeFormView) {\n                return $xeFormView.props.readonly;\n            }\n            return false;\n        });\n        const computeSubtableColumns = computed(() => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const { children, options } = widget;\n            const formReadonly = computeFormReadonly.value;\n            const columns = [];\n            if (options.showCheckbox) {\n                columns.push({\n                    type: 'checkbox',\n                    width: 60,\n                    fixed: 'left'\n                });\n            }\n            columns.push({\n                type: 'seq',\n                width: 60,\n                fixed: 'left'\n            });\n            if (children) {\n                children.forEach(childWidget => {\n                    const { name } = childWidget;\n                    const compConf = renderer.get(name) || {};\n                    const parseSubtableColumn = compConf.parseFormDesignWidgetSubtableColumn;\n                    let colConf = {\n                        field: childWidget.field,\n                        title: childWidget.title\n                    };\n                    if (parseSubtableColumn) {\n                        colConf = Object.assign(colConf, parseSubtableColumn({\n                            $formView: $xeFormView,\n                            name: childWidget.name,\n                            widget: childWidget,\n                            readonly: !!formReadonly\n                        }));\n                    }\n                    else {\n                        if (formReadonly) {\n                            colConf.cellRender = {\n                                name: childWidget.name,\n                                props: childWidget.options\n                            };\n                        }\n                        else {\n                            colConf.editRender = {\n                                name: childWidget.name,\n                                props: childWidget.options\n                            };\n                        }\n                    }\n                    const renderSubtableDefaultView = compConf.renderFormDesignWidgetSubtableDefaultView;\n                    const renderSubtableCellView = compConf.renderFormDesignWidgetSubtableCellView || renderSubtableDefaultView;\n                    const renderSubtableEditView = compConf.renderFormDesignWidgetSubtableEditView;\n                    const colSlots = {};\n                    if (renderSubtableDefaultView || renderSubtableCellView) {\n                        colSlots.default = (slotParams) => {\n                            const { isEdit, column } = slotParams;\n                            const { editRender, cellRender } = column;\n                            const params = Object.assign({ widget: childWidget }, slotParams);\n                            if (isEdit && editRender) {\n                                if (renderSubtableCellView) {\n                                    return getSlotVNs(renderSubtableCellView(editRender, params));\n                                }\n                            }\n                            if (renderSubtableDefaultView) {\n                                return getSlotVNs(renderSubtableDefaultView(cellRender || {}, params));\n                            }\n                            return [];\n                        };\n                    }\n                    if (renderSubtableEditView) {\n                        colSlots.edit = (slotParams) => {\n                            const { column } = slotParams;\n                            const { editRender } = column;\n                            const params = Object.assign({ widget: childWidget }, slotParams);\n                            return getSlotVNs(renderSubtableEditView(editRender, params));\n                        };\n                    }\n                    colConf.slots = colSlots;\n                    columns.push(colConf);\n                });\n            }\n            if (!formReadonly) {\n                columns.push({\n                    field: 'action',\n                    title: '操作',\n                    fixed: 'right',\n                    width: 80,\n                    slots: {\n                        default({ row }) {\n                            return h(VxeButtonComponent, {\n                                mode: 'text',\n                                icon: 'vxe-icon-delete',\n                                status: 'error',\n                                onClick() {\n                                    removeSubRow(row);\n                                }\n                            });\n                        }\n                    }\n                });\n            }\n            return columns;\n        });\n        const computeGridOptions = computed(() => {\n            const { renderParams } = props;\n            const { widget, isEditMode } = renderParams;\n            const subtableColumns = computeSubtableColumns.value;\n            const formReadonly = computeFormReadonly.value;\n            const gridConf = {\n                border: true,\n                showOverflow: true,\n                height: 300,\n                columnConfig: {\n                    resizable: true,\n                    minWidth: 140\n                },\n                rowConfig: {\n                    keyField: '_id'\n                },\n                data: isEditMode ? defaultDataList.value : $xeFormView ? $xeFormView.getItemValue(widget) : null,\n                columns: subtableColumns,\n                toolbarConfig: {\n                    zoom: true,\n                    custom: false,\n                    slots: {\n                        buttons: 'toolbarButtons'\n                    }\n                }\n            };\n            if (!formReadonly) {\n                gridConf.keepSource = true;\n                gridConf.editConfig = {\n                    mode: 'row',\n                    trigger: 'click',\n                    showStatus: true\n                };\n            }\n            return gridConf;\n        });\n        const getSubRecord = () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const record = {\n                _id: Date.now()\n            };\n            XEUtils.each(widget.children, childWidget => {\n                record[childWidget.field] = null;\n            });\n            return record;\n        };\n        const addSubRowEvent = () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            if ($xeFormView) {\n                let list = $xeFormView.getItemValue(widget);\n                if (!XEUtils.isArray(list)) {\n                    list = [];\n                }\n                const newRow = getSubRecord();\n                list.unshift(newRow);\n                $xeFormView.setItemValue(widget, list.slice(0)).then(() => {\n                    return nextTick().then(() => {\n                        const $grid = refGrid.value;\n                        if ($grid) {\n                            $grid.setEditRow(newRow);\n                        }\n                    });\n                });\n            }\n        };\n        const removeSubRow = (row) => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            if ($xeFormView) {\n                const list = $xeFormView.getItemValue(widget);\n                if (list) {\n                    $xeFormView.setItemValue(widget, list.filter(item => item._id !== row._id));\n                }\n            }\n        };\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const kebabCaseName = computeKebabCaseName.value;\n            const gridOptions = computeGridOptions.value;\n            const formReadonly = computeFormReadonly.value;\n            return h(VxeFormItemComponent, {\n                class: ['vxe-form-design--widget-render-form-item', `widget-${kebabCaseName}`],\n                title: widget.title,\n                field: widget.field,\n                span: 24\n            }, {\n                default() {\n                    return VxeTableGridComponent\n                        ? h(VxeTableGridComponent, Object.assign(Object.assign({}, gridOptions), { ref: refGrid }), {\n                            toolbarButtons() {\n                                return formReadonly\n                                    ? []\n                                    : [\n                                        h(VxeButtonComponent, {\n                                            content: '新增',\n                                            icon: 'vxe-icon-add',\n                                            status: 'primary',\n                                            onClick: addSubRowEvent\n                                        })\n                                    ];\n                            }\n                        })\n                        : createCommentVNode();\n                }\n            });\n        };\n    }\n});\n", "import { handleGetFormDesignWidgetName } from '../render/util';\nexport const getWidgetInputConfig = () => {\n    return {\n        title: handleGetFormDesignWidgetName,\n        icon: 'vxe-icon-input',\n        query: true,\n        options: {\n            placeholder: ''\n        }\n    };\n};\n", "import { defineComponent, h } from 'vue';\nimport { getI18n } from '@vxe-ui/core';\nimport VxeFormComponent from '../../form/src/form';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeInputComponent from '../../input/src/input';\nimport VxeSwitchComponent from '../../switch/src/switch';\nimport { useWidgetName } from '../../form-design/src/use';\nexport const WidgetInputFormComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const { computeKebabCaseName } = useWidgetName(props);\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormComponent, {\n                class: ['vxe-form-design--widget-render-form-wrapper', `widget-${kebabCaseName}`],\n                vertical: true,\n                span: 24,\n                titleBold: true,\n                titleOverflow: true,\n                data: widget.options\n            }, {\n                default() {\n                    return [\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.name')\n                        }, {\n                            default() {\n                                return h(VxeInputComponent, {\n                                    modelValue: widget.title,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.title = val;\n                                    }\n                                });\n                            }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.placeholder'),\n                            field: 'placeholder',\n                            itemRender: { name: 'VxeInput' }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.required')\n                        }, {\n                            default() {\n                                return h(VxeSwitchComponent, {\n                                    modelValue: widget.required,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.required = val;\n                                    }\n                                });\n                            }\n                        })\n                    ];\n                }\n            });\n        };\n    }\n});\n", "import { defineComponent, h, inject } from 'vue';\nimport { getI18n } from '@vxe-ui/core';\nimport { useWidgetName } from '../../form-design/src/use';\nimport VxeFormItemComponent from '../../form/src/form-item';\nexport const WidgetInputViewComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const $xeFormView = inject('$xeFormView', null);\n        const { computeKebabCaseName } = useWidgetName(props);\n        const changeEvent = () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            if ($xeFormView) {\n                const itemValue = $xeFormView ? $xeFormView.getItemValue(widget) : null;\n                $xeFormView.updateWidgetStatus(widget, itemValue);\n            }\n        };\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const { options } = widget;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormItemComponent, {\n                class: ['vxe-form-design--widget-render-form-item', `widget-${kebabCaseName}`],\n                field: widget.field,\n                title: widget.title,\n                itemRender: {}\n            }, {\n                default() {\n                    return h('input', {\n                        class: 'vxe-default-input',\n                        type: 'text',\n                        placeholder: options.placeholder || getI18n('vxe.base.pleaseInput'),\n                        value: $xeFormView ? $xeFormView.getItemValue(widget) : null,\n                        onChange: changeEvent,\n                        onInput(evnt) {\n                            if ($xeFormView) {\n                                $xeFormView.setItemValue(widget, evnt.target.value);\n                            }\n                        }\n                    });\n                }\n            });\n        };\n    }\n});\n", "import { handleGetFormDesignWidgetName } from '../render/util';\nexport const getWidgetTextareaConfig = () => {\n    return {\n        title: handleGetFormDesignWidgetName,\n        icon: 'vxe-icon-textarea',\n        query: true,\n        options: {\n            placeholder: ''\n        }\n    };\n};\n", "import { defineComponent, h } from 'vue';\nimport { getI18n } from '@vxe-ui/core';\nimport { useWidgetName } from '../../form-design/src/use';\nimport VxeFormComponent from '../../form/src/form';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeInputComponent from '../../input/src/input';\nimport VxeSwitchComponent from '../../switch/src/switch';\nexport const WidgetTextareaFormComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const { computeKebabCaseName } = useWidgetName(props);\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormComponent, {\n                class: ['vxe-form-design--widget-render-form-wrapper', `widget-${kebabCaseName}`],\n                vertical: true,\n                span: 24,\n                titleBold: true,\n                titleOverflow: true,\n                data: widget.options\n            }, {\n                default() {\n                    return [\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.name')\n                        }, {\n                            default() {\n                                return h(VxeInputComponent, {\n                                    modelValue: widget.title,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.title = val;\n                                    }\n                                });\n                            }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.placeholder'),\n                            field: 'placeholder',\n                            itemRender: { name: 'VxeInput' }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.required')\n                        }, {\n                            default() {\n                                return h(VxeSwitchComponent, {\n                                    modelValue: widget.required,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.required = val;\n                                    }\n                                });\n                            }\n                        })\n                    ];\n                }\n            });\n        };\n    }\n});\n", "import { defineComponent, h, inject } from 'vue';\nimport { getI18n } from '@vxe-ui/core';\nimport { useWidgetName } from '../../form-design/src/use';\nimport VxeFormItemComponent from '../../form/src/form-item';\nexport const WidgetTextareaViewComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const $xeFormView = inject('$xeFormView', null);\n        const { computeKebabCaseName } = useWidgetName(props);\n        const changeEvent = () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            if ($xeFormView) {\n                const itemValue = $xeFormView ? $xeFormView.getItemValue(widget) : null;\n                $xeFormView.updateWidgetStatus(widget, itemValue);\n            }\n        };\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const { options } = widget;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormItemComponent, {\n                class: ['vxe-form-design--widget-render-form-item', `widget-${kebabCaseName}`],\n                title: widget.title,\n                field: widget.field,\n                itemRender: {}\n            }, {\n                default() {\n                    return h('textarea', {\n                        class: 'vxe-default-textarea',\n                        placeholder: options.placeholder || getI18n('vxe.base.pleaseInput'),\n                        value: $xeFormView ? $xeFormView.getItemValue(widget) : null,\n                        onChange: changeEvent,\n                        onInput(evnt) {\n                            if ($xeFormView) {\n                                $xeFormView.setItemValue(widget, evnt.target.value);\n                            }\n                        }\n                    });\n                }\n            });\n        };\n    }\n});\n", "import { handleGetFormDesignWidgetName } from '../render/util';\nimport { getI18n } from '@vxe-ui/core';\nimport XEUtils from 'xe-utils';\nexport const getWidgetSelectConfig = () => {\n    return {\n        title: handleGetFormDesignWidgetName,\n        icon: 'vxe-icon-select',\n        query: true,\n        options: {\n            options: XEUtils.range(0, 3).map((v, i) => {\n                return {\n                    value: getI18n('vxe.formDesign.widgetProp.dataSource.defValue', [i + 1])\n                };\n            })\n        }\n    };\n};\n", "import { defineComponent, h } from 'vue';\nimport { getI18n } from '@vxe-ui/core';\nimport VxeFormComponent from '../../form/src/form';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeInputComponent from '../../input/src/input';\nimport VxeSwitchComponent from '../../switch/src/switch';\nimport { useWidgetName, useWidgetPropDataSource } from '../../form-design/src/use';\nexport const WidgetSelectFormComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const { renderDataSourceFormItem } = useWidgetPropDataSource(props, {\n            isSubOption: true\n        });\n        const { computeKebabCaseName } = useWidgetName(props);\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormComponent, {\n                class: ['vxe-form-design--widget-render-form-wrapper', `widget-${kebabCaseName}`],\n                vertical: true,\n                span: 24,\n                titleBold: true,\n                titleOverflow: true,\n                data: widget.options\n            }, {\n                default() {\n                    return [\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.name')\n                        }, {\n                            default() {\n                                return h(VxeInputComponent, {\n                                    modelValue: widget.title,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.title = val;\n                                    }\n                                });\n                            }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.required')\n                        }, {\n                            default() {\n                                return h(VxeSwitchComponent, {\n                                    modelValue: widget.required,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.required = val;\n                                    }\n                                });\n                            }\n                        }),\n                        renderDataSourceFormItem()\n                    ];\n                }\n            });\n        };\n    }\n});\n", "import { defineComponent, h, inject } from 'vue';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport { useWidgetName } from '../../form-design/src/use';\nexport const WidgetSelectViewComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const $xeFormView = inject('$xeFormView', null);\n        const { computeKebabCaseName } = useWidgetName(props);\n        const changeEvent = () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            if ($xeFormView) {\n                const itemValue = $xeFormView ? $xeFormView.getItemValue(widget) : null;\n                $xeFormView.updateWidgetStatus(widget, itemValue);\n            }\n        };\n        const renderOptions = () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const { options } = widget.options;\n            return options\n                ? options.map(group => {\n                    if (group.options) {\n                        return h('optgroup', {\n                            label: group.value\n                        }, group.options.map(item => {\n                            return h('option', {\n                                value: item.value\n                            }, item.value);\n                        }));\n                    }\n                    return h('option', {}, group.value);\n                })\n                : [];\n        };\n        return () => {\n            const { renderParams } = props;\n            const { widget, isViewMode } = renderParams;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormItemComponent, {\n                class: ['vxe-form-design--widget-render-form-item', `widget-${kebabCaseName}`],\n                field: widget.field,\n                title: widget.title,\n                itemRender: {}\n            }, {\n                default() {\n                    return h('select', {\n                        class: 'vxe-default-select',\n                        value: $xeFormView ? $xeFormView.getItemValue(widget) : null,\n                        onChange: changeEvent\n                    }, isViewMode ? renderOptions() : []);\n                }\n            });\n        };\n    }\n});\n", "import { handleGetFormDesignWidgetName } from '../render/util';\nexport const getWidgetVxeInputConfig = () => {\n    return {\n        title: handleGetFormDesignWidgetName,\n        icon: 'vxe-icon-input',\n        query: true,\n        options: {\n            placeholder: ''\n        }\n    };\n};\n", "import { defineComponent, h } from 'vue';\nimport { getI18n } from '@vxe-ui/core';\nimport VxeFormComponent from '../../form/src/form';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeInputComponent from '../../input/src/input';\nimport VxeSwitchComponent from '../../switch/src/switch';\nimport { useWidgetName } from '../../form-design/src/use';\nexport const WidgetVxeInputFormComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const { computeKebabCaseName } = useWidgetName(props);\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormComponent, {\n                class: ['vxe-form-design--widget-render-form-wrapper', `widget-${kebabCaseName}`],\n                vertical: true,\n                span: 24,\n                titleBold: true,\n                titleOverflow: true,\n                data: widget.options\n            }, {\n                default() {\n                    return [\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.name')\n                        }, {\n                            default() {\n                                return h(VxeInputComponent, {\n                                    modelValue: widget.title,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.title = val;\n                                    }\n                                });\n                            }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.placeholder'),\n                            field: 'placeholder',\n                            itemRender: { name: 'VxeInput' }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.required')\n                        }, {\n                            default() {\n                                return h(VxeSwitchComponent, {\n                                    modelValue: widget.required,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.required = val;\n                                    }\n                                });\n                            }\n                        })\n                    ];\n                }\n            });\n        };\n    }\n});\n", "import { defineComponent, h, inject } from 'vue';\nimport { useWidgetName } from '../../form-design/src/use';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeInputComponent from '../../input/src/input';\nexport const WidgetVxeInputViewComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const $xeFormView = inject('$xeFormView', null);\n        const { computeKebabCaseName } = useWidgetName(props);\n        const changeEvent = () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            if ($xeFormView) {\n                const itemValue = $xeFormView ? $xeFormView.getItemValue(widget) : null;\n                $xeFormView.updateWidgetStatus(widget, itemValue);\n            }\n        };\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const { options } = widget;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormItemComponent, {\n                class: ['vxe-form-design--widget-render-form-item', `widget-${kebabCaseName}`],\n                field: widget.field,\n                title: widget.title,\n                itemRender: {}\n            }, {\n                default() {\n                    return h(VxeInputComponent, {\n                        modelValue: $xeFormView ? $xeFormView.getItemValue(widget) : null,\n                        placeholder: options.placeholder,\n                        onChange: changeEvent,\n                        'onUpdate:modelValue'(val) {\n                            if ($xeFormView) {\n                                $xeFormView.setItemValue(widget, val);\n                            }\n                        }\n                    });\n                }\n            });\n        };\n    }\n});\n", "import { handleGetFormDesignWidgetName } from '../render/util';\nexport const getWidgetVxeNumberInputConfig = () => {\n    return {\n        title: handleGetFormDesignWidgetName,\n        icon: 'vxe-icon-number',\n        query: true,\n        options: {\n            placeholder: ''\n        }\n    };\n};\n", "import { defineComponent, h } from 'vue';\nimport { getI18n } from '@vxe-ui/core';\nimport { useWidgetName } from '../../form-design/src/use';\nimport VxeFormComponent from '../../form/src/form';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeInputComponent from '../../input/src/input';\nimport VxeSwitchComponent from '../../switch/src/switch';\nexport const WidgetVxeNumberInputFormComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const { computeKebabCaseName } = useWidgetName(props);\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormComponent, {\n                class: ['vxe-form-design--widget-render-form-wrapper', `widget-${kebabCaseName}`],\n                vertical: true,\n                span: 24,\n                titleBold: true,\n                data: widget.options\n            }, {\n                default() {\n                    return [\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.name')\n                        }, {\n                            default() {\n                                return h(VxeInputComponent, {\n                                    modelValue: widget.title,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.title = val;\n                                    }\n                                });\n                            }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.placeholder'),\n                            field: 'placeholder',\n                            itemRender: { name: 'VxeInput' }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.required')\n                        }, {\n                            default() {\n                                return h(VxeSwitchComponent, {\n                                    modelValue: widget.required,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.required = val;\n                                    }\n                                });\n                            }\n                        })\n                    ];\n                }\n            });\n        };\n    }\n});\n", "import { defineComponent, h, inject } from 'vue';\nimport { useWidgetName } from '../../form-design/src/use';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeNumberInputComponent from '../../number-input/src/number-input';\nexport const WidgetVxeNumberInputViewComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const $xeFormView = inject('$xeFormView', null);\n        const { computeKebabCaseName } = useWidgetName(props);\n        const changeEvent = () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            if ($xeFormView) {\n                const itemValue = $xeFormView ? $xeFormView.getItemValue(widget) : null;\n                $xeFormView.updateWidgetStatus(widget, itemValue);\n            }\n        };\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const { options } = widget;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormItemComponent, {\n                class: ['vxe-form-design--widget-render-form-item', `widget-${kebabCaseName}`],\n                title: widget.title,\n                field: widget.field,\n                itemRender: {}\n            }, {\n                default() {\n                    return h(VxeNumberInputComponent, {\n                        modelValue: $xeFormView ? $xeFormView.getItemValue(widget) : null,\n                        placeholder: options.placeholder,\n                        onChange: changeEvent,\n                        'onUpdate:modelValue'(val) {\n                            if ($xeFormView) {\n                                $xeFormView.setItemValue(widget, val);\n                            }\n                        }\n                    });\n                }\n            });\n        };\n    }\n});\n", "import { handleGetFormDesignWidgetName } from '../render/util';\nexport const getWidgetVxeDatePickerConfig = () => {\n    return {\n        title: handleGetFormDesignWidgetName,\n        icon: 'vxe-icon-calendar',\n        options: {\n            placeholder: '',\n            defaultValue: {\n                type: '',\n                value: ''\n            }\n        }\n    };\n};\n", "import { defineComponent, h } from 'vue';\nimport { getI18n } from '@vxe-ui/core';\nimport { useWidgetName } from '../../form-design/src/use';\nimport VxeFormComponent from '../../form/src/form';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeInputComponent from '../../input/src/input';\nimport VxeSwitchComponent from '../../switch/src/switch';\nexport const WidgetVxeDatePickerFormComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const { computeKebabCaseName } = useWidgetName(props);\n        // const { renderDefaultValueFormItem } = useWidgetPropDefaultValue(props)\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormComponent, {\n                class: ['vxe-form-design--widget-render-form-wrapper', `widget-${kebabCaseName}`],\n                vertical: true,\n                span: 24,\n                titleBold: true,\n                data: widget.options\n            }, {\n                default() {\n                    return [\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.name')\n                        }, {\n                            default() {\n                                return h(VxeInputComponent, {\n                                    modelValue: widget.title,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.title = val;\n                                    }\n                                });\n                            }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.placeholder'),\n                            field: 'placeholder',\n                            itemRender: { name: 'VxeInput' }\n                        }),\n                        // renderDefaultValueFormItem(),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.required')\n                        }, {\n                            default() {\n                                return h(VxeSwitchComponent, {\n                                    modelValue: widget.required,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.required = val;\n                                    }\n                                });\n                            }\n                        })\n                    ];\n                }\n            });\n        };\n    }\n});\n", "import { defineComponent, h, inject } from 'vue';\nimport { useWidgetName } from '../../form-design/src/use';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeDatePickerComponent from '../../date-picker/src/date-picker';\nexport const WidgetVxeDatePickerViewComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const $xeFormView = inject('$xeFormView', null);\n        const { computeKebabCaseName } = useWidgetName(props);\n        const changeEvent = () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            if ($xeFormView) {\n                const itemValue = $xeFormView ? $xeFormView.getItemValue(widget) : null;\n                $xeFormView.updateWidgetStatus(widget, itemValue);\n            }\n        };\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const { options } = widget;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormItemComponent, {\n                class: ['vxe-form-design--widget-render-form-item', `widget-${kebabCaseName}`],\n                title: widget.title,\n                field: widget.field,\n                itemRender: {}\n            }, {\n                default() {\n                    return h(VxeDatePickerComponent, {\n                        modelValue: $xeFormView ? $xeFormView.getItemValue(widget) : null,\n                        placeholder: options.placeholder,\n                        onChange: changeEvent,\n                        'onUpdate:modelValue'(val) {\n                            if ($xeFormView) {\n                                $xeFormView.setItemValue(widget, val);\n                            }\n                        }\n                    });\n                }\n            });\n        };\n    }\n});\n", "import { handleGetFormDesignWidgetName } from '../render/util';\nexport const getWidgetVxeTextareaConfig = () => {\n    return {\n        title: handleGetFormDesignWidgetName,\n        icon: 'vxe-icon-textarea',\n        options: {\n            placeholder: ''\n        }\n    };\n};\n", "import { defineComponent, h } from 'vue';\nimport { getI18n } from '@vxe-ui/core';\nimport { useWidgetName } from '../../form-design/src/use';\nimport VxeFormComponent from '../../form/src/form';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeInputComponent from '../../input/src/input';\nimport VxeSwitchComponent from '../../switch/src/switch';\nexport const WidgetVxeTextareaFormComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const { computeKebabCaseName } = useWidgetName(props);\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormComponent, {\n                class: ['vxe-form-design--widget-render-form-wrapper', `widget-${kebabCaseName}`],\n                vertical: true,\n                span: 24,\n                titleBold: true,\n                data: widget.options\n            }, {\n                default() {\n                    return [\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.name')\n                        }, {\n                            default() {\n                                return h(VxeInputComponent, {\n                                    modelValue: widget.title,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.title = val;\n                                    }\n                                });\n                            }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.placeholder'),\n                            field: 'placeholder',\n                            itemRender: { name: 'VxeInput' }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.required')\n                        }, {\n                            default() {\n                                return h(VxeSwitchComponent, {\n                                    modelValue: widget.required,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.required = val;\n                                    }\n                                });\n                            }\n                        })\n                    ];\n                }\n            });\n        };\n    }\n});\n", "import { defineComponent, h, inject } from 'vue';\nimport { useWidgetName } from '../../form-design/src/use';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeTextareaComponent from '../../textarea/src/textarea';\nexport const WidgetVxeTextareaViewComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const $xeFormView = inject('$xeFormView', null);\n        const { computeKebabCaseName } = useWidgetName(props);\n        const changeEvent = () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            if ($xeFormView) {\n                const itemValue = $xeFormView ? $xeFormView.getItemValue(widget) : null;\n                $xeFormView.updateWidgetStatus(widget, itemValue);\n            }\n        };\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const { options } = widget;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormItemComponent, {\n                class: ['vxe-form-design--widget-render-form-item', `widget-${kebabCaseName}`],\n                title: widget.title,\n                field: widget.field,\n                itemRender: {}\n            }, {\n                default() {\n                    return h(VxeTextareaComponent, {\n                        modelValue: $xeFormView ? $xeFormView.getItemValue(widget) : null,\n                        placeholder: options.placeholder,\n                        resize: 'node',\n                        onChange: changeEvent,\n                        'onUpdate:modelValue'(val) {\n                            if ($xeFormView) {\n                                $xeFormView.setItemValue(widget, val);\n                            }\n                        }\n                    });\n                }\n            });\n        };\n    }\n});\n", "import { handleGetFormDesignWidgetName } from '../render/util';\nexport const getWidgetVxeSwitchConfig = () => {\n    return {\n        title: handleGetFormDesignWidgetName,\n        icon: 'vxe-icon-switch',\n        query: true,\n        options: {}\n    };\n};\n", "import { defineComponent, h } from 'vue';\nimport { getI18n } from '@vxe-ui/core';\nimport { useWidgetName } from '../../form-design/src/use';\nimport VxeFormComponent from '../../form/src/form';\nimport VxeInputComponent from '../../input/src/input';\nimport VxeFormItemComponent from '../../form/src/form-item';\nexport const WidgetVxeSwitchFormComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const { computeKebabCaseName } = useWidgetName(props);\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormComponent, {\n                class: ['vxe-form-design--widget-render-form-wrapper', `widget-${kebabCaseName}`],\n                vertical: true,\n                span: 24,\n                titleBold: true,\n                titleOverflow: true,\n                data: widget.options\n            }, {\n                default() {\n                    return [\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.name')\n                        }, {\n                            default() {\n                                return h(VxeInputComponent, {\n                                    modelValue: widget.title,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.title = val;\n                                    }\n                                });\n                            }\n                        })\n                    ];\n                }\n            });\n        };\n    }\n});\n", "import { defineComponent, h, inject } from 'vue';\nimport { useWidgetName } from '../../form-design/src/use';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeSwitchComponent from '../../switch/src/switch';\nexport const WidgetVxeSwitchViewComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const $xeFormView = inject('$xeFormView', null);\n        const { computeKebabCaseName } = useWidgetName(props);\n        const changeEvent = () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            if ($xeFormView) {\n                const itemValue = $xeFormView ? $xeFormView.getItemValue(widget) : null;\n                $xeFormView.updateWidgetStatus(widget, itemValue);\n            }\n        };\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormItemComponent, {\n                class: ['vxe-form-design--widget-render-form-item', `widget-${kebabCaseName}`],\n                field: widget.field,\n                title: widget.title,\n                itemRender: {}\n            }, {\n                default() {\n                    return h(VxeSwitchComponent, {\n                        modelValue: $xeFormView ? $xeFormView.getItemValue(widget) : null,\n                        onChange: changeEvent,\n                        'onUpdate:modelValue'(val) {\n                            if ($xeFormView) {\n                                $xeFormView.setItemValue(widget, val);\n                            }\n                        }\n                    });\n                }\n            });\n        };\n    }\n});\n", "import { handleGetFormDesignWidgetName } from '../render/util';\nimport { getI18n } from '@vxe-ui/core';\nimport XEUtils from 'xe-utils';\nexport const getWidgetVxeSelectConfig = () => {\n    return {\n        title: handleGetFormDesignWidgetName,\n        icon: 'vxe-icon-select',\n        query: true,\n        options: {\n            placeholder: '',\n            options: XEUtils.range(0, 3).map((v, i) => {\n                return {\n                    value: getI18n('vxe.formDesign.widgetProp.dataSource.defValue', [i + 1])\n                };\n            }),\n            multiple: false\n        }\n    };\n};\n", "import { defineComponent, h } from 'vue';\nimport { getI18n } from '@vxe-ui/core';\nimport VxeFormComponent from '../../form/src/form';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeInputComponent from '../../input/src/input';\nimport VxeSwitchComponent from '../../switch/src/switch';\nimport { useWidgetName, useWidgetPropDataSource } from '../../form-design/src/use';\nexport const WidgetVxeSelectFormComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const { renderDataSourceFormItem } = useWidgetPropDataSource(props, {\n            isSubOption: false\n        });\n        const { computeKebabCaseName } = useWidgetName(props);\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormComponent, {\n                class: ['vxe-form-design--widget-render-form-wrapper', `widget-${kebabCaseName}`],\n                vertical: true,\n                span: 24,\n                titleBold: true,\n                titleOverflow: true,\n                data: widget.options\n            }, {\n                default() {\n                    return [\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.name')\n                        }, {\n                            default() {\n                                return h(VxeInputComponent, {\n                                    modelValue: widget.title,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.title = val;\n                                    }\n                                });\n                            }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.placeholder'),\n                            field: 'placeholder',\n                            itemRender: { name: 'VxeInput' }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.multiple'),\n                            field: 'multiple',\n                            itemRender: { name: 'VxeSwitch' }\n                        }),\n                        renderDataSourceFormItem(),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.required')\n                        }, {\n                            default() {\n                                return h(VxeSwitchComponent, {\n                                    modelValue: widget.required,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.required = val;\n                                    }\n                                });\n                            }\n                        })\n                    ];\n                }\n            });\n        };\n    }\n});\n", "import { defineComponent, h, inject } from 'vue';\nimport { getI18n } from '@vxe-ui/core';\nimport { useWidgetName } from '../../form-design/src/use';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeSelectComponent from '../../select/src/select';\nexport const WidgetVxeSelectViewComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const $xeFormView = inject('$xeFormView', null);\n        const { computeKebabCaseName } = useWidgetName(props);\n        const changeEvent = () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            if ($xeFormView) {\n                const itemValue = $xeFormView ? $xeFormView.getItemValue(widget) : null;\n                $xeFormView.updateWidgetStatus(widget, itemValue);\n            }\n        };\n        return () => {\n            const { renderParams } = props;\n            const { widget, isViewMode } = renderParams;\n            const { options } = widget;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormItemComponent, {\n                class: ['vxe-form-design--widget-render-form-item', `widget-${kebabCaseName}`],\n                title: widget.title,\n                field: widget.field,\n                itemRender: {}\n            }, {\n                default() {\n                    return h(VxeSelectComponent, {\n                        modelValue: $xeFormView ? $xeFormView.getItemValue(widget) : null,\n                        placeholder: options.placeholder || getI18n('vxe.base.pleaseSelect'),\n                        options: isViewMode ? options.options : [],\n                        optionProps: { label: 'value', value: 'value' },\n                        onChange: changeEvent,\n                        'onUpdate:modelValue'(val) {\n                            if ($xeFormView) {\n                                $xeFormView.setItemValue(widget, val);\n                            }\n                        }\n                    });\n                }\n            });\n        };\n    }\n});\n", "import { handleGetFormDesignWidgetName } from '../render/util';\nimport { getI18n } from '@vxe-ui/core';\nimport XEUtils from 'xe-utils';\nexport const getWidgetVxeTreeSelectConfig = () => {\n    return {\n        title: handleGetFormDesignWidgetName,\n        icon: 'vxe-icon-tree-select',\n        query: true,\n        options: {\n            placeholder: '',\n            options: XEUtils.range(0, 3).map((v, i) => {\n                return {\n                    value: getI18n('vxe.formDesign.widgetProp.dataSource.defValue', [i + 1])\n                };\n            }),\n            multiple: false\n        }\n    };\n};\n", "import { defineComponent, h } from 'vue';\nimport { getI18n } from '@vxe-ui/core';\nimport VxeFormComponent from '../../form/src/form';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeInputComponent from '../../input/src/input';\nimport VxeSwitchComponent from '../../switch/src/switch';\nimport { useWidgetName } from '../src/use';\nexport const WidgetVxeTreeSelectFormComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const { computeKebabCaseName } = useWidgetName(props);\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormComponent, {\n                class: ['vxe-form-design--widget-render-form-wrapper', `widget-${kebabCaseName}`],\n                vertical: true,\n                span: 24,\n                titleBold: true,\n                titleOverflow: true,\n                data: widget.options\n            }, {\n                default() {\n                    return [\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.name')\n                        }, {\n                            default() {\n                                return h(VxeInputComponent, {\n                                    modelValue: widget.title,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.title = val;\n                                    }\n                                });\n                            }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.placeholder'),\n                            field: 'placeholder',\n                            itemRender: { name: 'VxeInput' }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.multiple'),\n                            field: 'multiple',\n                            itemRender: { name: 'VxeSwitch' }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.required')\n                        }, {\n                            default() {\n                                return h(VxeSwitchComponent, {\n                                    modelValue: widget.required,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.required = val;\n                                    }\n                                });\n                            }\n                        })\n                    ];\n                }\n            });\n        };\n    }\n});\n", "import { defineComponent, ref, computed, h, nextTick, inject, provide, reactive, Teleport, onMounted, onUnmounted, watch } from 'vue';\nimport { getConfig, getI18n, getIcon, globalEvents, createEvent, useSize, renderEmptyElement } from '../../ui';\nimport { getEventTargetNode, getAbsolutePos, toCssUnit } from '../../ui/src/dom';\nimport { getLastZIndex, nextZIndex } from '../../ui/src/utils';\nimport { errLog } from '../../ui/src/log';\nimport XEUtils from 'xe-utils';\nimport VxeInputComponent from '../../input/src/input';\nimport VxeTreeComponent from '../../tree/src/tree';\nfunction getOptUniqueId() {\n    return XEUtils.uniqueId('node_');\n}\nexport default defineComponent({\n    name: 'VxeTreeSelect',\n    props: {\n        modelValue: [String, Number, Array],\n        clearable: Boolean,\n        placeholder: {\n            type: String,\n            default: () => XEUtils.eqNull(getConfig().treeSelect.placeholder) ? getI18n('vxe.base.pleaseSelect') : getConfig().treeSelect.placeholder\n        },\n        readonly: {\n            type: Boolean,\n            default: null\n        },\n        loading: Boolean,\n        disabled: {\n            type: Boolean,\n            default: null\n        },\n        multiple: Boolean,\n        className: [String, Function],\n        popupClassName: [String, Function],\n        prefixIcon: String,\n        placement: String,\n        options: Array,\n        optionProps: Object,\n        size: {\n            type: String,\n            default: () => getConfig().select.size || getConfig().size\n        },\n        remote: Boolean,\n        remoteMethod: Function,\n        popupConfig: Object,\n        treeConfig: Object,\n        transfer: {\n            type: Boolean,\n            default: null\n        }\n    },\n    emits: [\n        'update:modelValue',\n        'change',\n        'clear',\n        'blur',\n        'focus',\n        'click',\n        'node-click'\n    ],\n    setup(props, context) {\n        const { emit, slots } = context;\n        const $xeModal = inject('$xeModal', null);\n        const $xeDrawer = inject('$xeDrawer', null);\n        const $xeTable = inject('$xeTable', null);\n        const $xeForm = inject('$xeForm', null);\n        const formItemInfo = inject('xeFormItemInfo', null);\n        const xID = XEUtils.uniqueId();\n        const { computeSize } = useSize(props);\n        const refElem = ref();\n        const refInput = ref();\n        const refTreeWrapper = ref();\n        const refOptionPanel = ref();\n        const reactData = reactive({\n            initialized: false,\n            fullOptionList: [],\n            fullNodeMaps: {},\n            panelIndex: 0,\n            panelStyle: {},\n            panelPlacement: null,\n            triggerFocusPanel: false,\n            visiblePanel: false,\n            isAniVisible: false,\n            isActivated: false\n        });\n        const internalData = {\n            hpTimeout: undefined\n        };\n        const refMaps = {\n            refElem\n        };\n        const computeFormReadonly = computed(() => {\n            const { readonly } = props;\n            if (readonly === null) {\n                if ($xeForm) {\n                    return $xeForm.props.readonly;\n                }\n                return false;\n            }\n            return readonly;\n        });\n        const computeIsDisabled = computed(() => {\n            const { disabled } = props;\n            if (disabled === null) {\n                if ($xeForm) {\n                    return $xeForm.props.disabled;\n                }\n                return false;\n            }\n            return disabled;\n        });\n        const computeBtnTransfer = computed(() => {\n            const { transfer } = props;\n            if (transfer === null) {\n                const globalTransfer = getConfig().select.transfer;\n                if (XEUtils.isBoolean(globalTransfer)) {\n                    return globalTransfer;\n                }\n                if ($xeTable || $xeModal || $xeDrawer || $xeForm) {\n                    return true;\n                }\n            }\n            return transfer;\n        });\n        const computePopupOpts = computed(() => {\n            return Object.assign({}, getConfig().treeSelect.popupConfig, props.popupConfig);\n        });\n        const computeTreeOpts = computed(() => {\n            return Object.assign({}, getConfig().treeSelect.treeConfig, props.treeConfig, { data: undefined });\n        });\n        const computeTreeNodeOpts = computed(() => {\n            const treeOpts = computeTreeOpts.value;\n            return Object.assign({ isHover: true }, treeOpts.nodeConfig);\n        });\n        const computeTreeCheckboxOpts = computed(() => {\n            const treeOpts = computeTreeOpts.value;\n            return Object.assign({\n                showIcon: !!treeOpts.showCheckbox\n            }, treeOpts.checkboxConfig, {\n                trigger: 'node'\n            });\n        });\n        const computeTreeRadioOpts = computed(() => {\n            const treeOpts = computeTreeOpts.value;\n            return Object.assign({\n                showIcon: !!treeOpts.showRadio\n            }, treeOpts.radioConfig, {\n                trigger: 'node'\n            });\n        });\n        const computePropsOpts = computed(() => {\n            return props.optionProps || {};\n        });\n        const computeNodeKeyField = computed(() => {\n            const treeOpts = computeTreeOpts.value;\n            return treeOpts.keyField || 'id';\n        });\n        const computeLabelField = computed(() => {\n            const propsOpts = computePropsOpts.value;\n            return propsOpts.label || 'label';\n        });\n        const computeValueField = computed(() => {\n            const propsOpts = computePropsOpts.value;\n            return propsOpts.value || 'value';\n        });\n        const computeChildrenField = computed(() => {\n            const propsOpts = computePropsOpts.value;\n            return propsOpts.children || 'children';\n        });\n        const computeParentField = computed(() => {\n            const propsOpts = computePropsOpts.value;\n            return propsOpts.parent || 'parentField';\n        });\n        const computeHasChildField = computed(() => {\n            const propsOpts = computePropsOpts.value;\n            return propsOpts.hasChild || 'hasChild';\n        });\n        const computeSelectLabel = computed(() => {\n            const { modelValue } = props;\n            const { fullNodeMaps } = reactData;\n            const labelField = computeLabelField.value;\n            return (XEUtils.isArray(modelValue) ? modelValue : [modelValue]).map(val => {\n                const cacheItem = fullNodeMaps[val];\n                return cacheItem ? cacheItem.item[labelField] : val;\n            }).join(', ');\n        });\n        const computePopupWrapperStyle = computed(() => {\n            const popupOpts = computePopupOpts.value;\n            const { height, width } = popupOpts;\n            const stys = {};\n            if (width) {\n                stys.width = toCssUnit(width);\n            }\n            if (height) {\n                stys.height = toCssUnit(height);\n                stys.maxHeight = toCssUnit(height);\n            }\n            return stys;\n        });\n        const computeMaps = {};\n        const $xeTreeSelect = {\n            xID,\n            props,\n            context,\n            reactData,\n            internalData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $treeSelect: $xeTreeSelect }, params));\n        };\n        const emitModel = (value) => {\n            emit('update:modelValue', value);\n        };\n        const treeSelectMethods = {\n            dispatchEvent\n        };\n        const getNodeid = (option) => {\n            const nodeKeyField = computeNodeKeyField.value;\n            const nodeid = option[nodeKeyField];\n            return nodeid ? encodeURIComponent(nodeid) : '';\n        };\n        const cacheDataMap = () => {\n            const { options } = props;\n            const nodeKeyField = computeNodeKeyField.value;\n            const childrenField = computeChildrenField.value;\n            const valueField = computeValueField.value;\n            const nodeMaps = {};\n            const keyMaps = {};\n            XEUtils.eachTree(options, (item, index, items, path, parent, nodes) => {\n                let nodeid = getNodeid(item);\n                if (!nodeid) {\n                    nodeid = getOptUniqueId();\n                }\n                if (keyMaps[nodeid]) {\n                    errLog('vxe.error.repeatKey', [nodeKeyField, nodeid]);\n                }\n                keyMaps[nodeid] = true;\n                const value = item[valueField];\n                if (nodeMaps[value]) {\n                    errLog('vxe.error.repeatKey', [valueField, value]);\n                }\n                nodeMaps[value] = { item, index, items, parent, nodes };\n            }, { children: childrenField });\n            reactData.fullOptionList = options || [];\n            reactData.fullNodeMaps = nodeMaps;\n        };\n        const updateZindex = () => {\n            if (reactData.panelIndex < getLastZIndex()) {\n                reactData.panelIndex = nextZIndex();\n            }\n        };\n        const updatePlacement = () => {\n            return nextTick().then(() => {\n                const { placement } = props;\n                const { panelIndex } = reactData;\n                const el = refElem.value;\n                const panelElem = refOptionPanel.value;\n                const btnTransfer = computeBtnTransfer.value;\n                if (panelElem && el) {\n                    const targetHeight = el.offsetHeight;\n                    const targetWidth = el.offsetWidth;\n                    const panelHeight = panelElem.offsetHeight;\n                    const panelWidth = panelElem.offsetWidth;\n                    const marginSize = 5;\n                    const panelStyle = {\n                        zIndex: panelIndex\n                    };\n                    const { boundingTop, boundingLeft, visibleHeight, visibleWidth } = getAbsolutePos(el);\n                    let panelPlacement = 'bottom';\n                    if (btnTransfer) {\n                        let left = boundingLeft;\n                        let top = boundingTop + targetHeight;\n                        if (placement === 'top') {\n                            panelPlacement = 'top';\n                            top = boundingTop - panelHeight;\n                        }\n                        else if (!placement) {\n                            // 如果下面不够放，则向上\n                            if (top + panelHeight + marginSize > visibleHeight) {\n                                panelPlacement = 'top';\n                                top = boundingTop - panelHeight;\n                            }\n                            // 如果上面不够放，则向下（优先）\n                            if (top < marginSize) {\n                                panelPlacement = 'bottom';\n                                top = boundingTop + targetHeight;\n                            }\n                        }\n                        // 如果溢出右边\n                        if (left + panelWidth + marginSize > visibleWidth) {\n                            left -= left + panelWidth + marginSize - visibleWidth;\n                        }\n                        // 如果溢出左边\n                        if (left < marginSize) {\n                            left = marginSize;\n                        }\n                        Object.assign(panelStyle, {\n                            left: `${left}px`,\n                            top: `${top}px`,\n                            minWidth: `${targetWidth}px`\n                        });\n                    }\n                    else {\n                        if (placement === 'top') {\n                            panelPlacement = 'top';\n                            panelStyle.bottom = `${targetHeight}px`;\n                        }\n                        else if (!placement) {\n                            // 如果下面不够放，则向上\n                            if (boundingTop + targetHeight + panelHeight > visibleHeight) {\n                                // 如果上面不够放，则向下（优先）\n                                if (boundingTop - targetHeight - panelHeight > marginSize) {\n                                    panelPlacement = 'top';\n                                    panelStyle.bottom = `${targetHeight}px`;\n                                }\n                            }\n                        }\n                    }\n                    reactData.panelStyle = panelStyle;\n                    reactData.panelPlacement = panelPlacement;\n                    return nextTick();\n                }\n            });\n        };\n        const showOptionPanel = () => {\n            const { loading } = props;\n            const isDisabled = computeIsDisabled.value;\n            if (!loading && !isDisabled) {\n                clearTimeout(internalData.hpTimeout);\n                if (!reactData.initialized) {\n                    reactData.initialized = true;\n                }\n                reactData.isActivated = true;\n                reactData.isAniVisible = true;\n                setTimeout(() => {\n                    reactData.visiblePanel = true;\n                }, 10);\n                updateZindex();\n                updatePlacement();\n            }\n        };\n        const hideOptionPanel = () => {\n            reactData.visiblePanel = false;\n            internalData.hpTimeout = setTimeout(() => {\n                reactData.isAniVisible = false;\n            }, 350);\n        };\n        const changeEvent = (evnt, selectValue) => {\n            const { fullNodeMaps } = reactData;\n            emitModel(selectValue);\n            if (selectValue !== props.modelValue) {\n                const cacheItem = fullNodeMaps[selectValue];\n                dispatchEvent('change', { value: selectValue, option: cacheItem ? cacheItem.item : null }, evnt);\n                // 自动更新校验状态\n                if ($xeForm && formItemInfo) {\n                    $xeForm.triggerItemEvent(evnt, formItemInfo.itemConfig.field, selectValue);\n                }\n            }\n        };\n        const clearValueEvent = (evnt, selectValue) => {\n            changeEvent(evnt, selectValue);\n            dispatchEvent('clear', { value: selectValue }, evnt);\n        };\n        const clearEvent = (params, evnt) => {\n            clearValueEvent(evnt, null);\n            hideOptionPanel();\n        };\n        const handleGlobalMousewheelEvent = (evnt) => {\n            const { visiblePanel } = reactData;\n            const isDisabled = computeIsDisabled.value;\n            if (!isDisabled) {\n                if (visiblePanel) {\n                    const panelElem = refOptionPanel.value;\n                    if (getEventTargetNode(evnt, panelElem).flag) {\n                        updatePlacement();\n                    }\n                    else {\n                        hideOptionPanel();\n                    }\n                }\n            }\n        };\n        const handleGlobalMousedownEvent = (evnt) => {\n            const { visiblePanel } = reactData;\n            const isDisabled = computeIsDisabled.value;\n            if (!isDisabled) {\n                const el = refElem.value;\n                const panelElem = refOptionPanel.value;\n                reactData.isActivated = getEventTargetNode(evnt, el).flag || getEventTargetNode(evnt, panelElem).flag;\n                if (visiblePanel && !reactData.isActivated) {\n                    hideOptionPanel();\n                }\n            }\n        };\n        const handleGlobalBlurEvent = () => {\n            hideOptionPanel();\n        };\n        const focusEvent = (evnt) => {\n            const isDisabled = computeIsDisabled.value;\n            if (!isDisabled) {\n                if (!reactData.visiblePanel) {\n                    reactData.triggerFocusPanel = true;\n                    showOptionPanel();\n                    setTimeout(() => {\n                        reactData.triggerFocusPanel = false;\n                    }, 150);\n                }\n            }\n            dispatchEvent('focus', {}, evnt);\n        };\n        const clickEvent = (evnt) => {\n            togglePanelEvent(evnt);\n            dispatchEvent('click', {}, evnt);\n        };\n        const blurEvent = (evnt) => {\n            reactData.isActivated = false;\n            dispatchEvent('blur', {}, evnt);\n        };\n        const togglePanelEvent = (params) => {\n            const { $event } = params;\n            $event.preventDefault();\n            if (reactData.triggerFocusPanel) {\n                reactData.triggerFocusPanel = false;\n            }\n            else {\n                if (reactData.visiblePanel) {\n                    hideOptionPanel();\n                }\n                else {\n                    showOptionPanel();\n                }\n            }\n        };\n        const nodeClickEvent = (params) => {\n            const { $event } = params;\n            dispatchEvent('node-click', params, $event);\n        };\n        const radioChangeEvent = (params) => {\n            const { value, $event } = params;\n            changeEvent($event, value);\n            hideOptionPanel();\n        };\n        const checkboxChangeEvent = (params) => {\n            const { value, $event } = params;\n            changeEvent($event, value);\n        };\n        const loadSuccessEvent = () => {\n            cacheDataMap();\n        };\n        const treeSelectPrivateMethods = {};\n        Object.assign($xeTreeSelect, treeSelectMethods, treeSelectPrivateMethods);\n        const renderVN = () => {\n            const { className, modelValue, multiple, options, loading } = props;\n            const { initialized, isActivated, isAniVisible, visiblePanel } = reactData;\n            const vSize = computeSize.value;\n            const isDisabled = computeIsDisabled.value;\n            const selectLabel = computeSelectLabel.value;\n            const btnTransfer = computeBtnTransfer.value;\n            const formReadonly = computeFormReadonly.value;\n            const popupWrapperStyle = computePopupWrapperStyle.value;\n            const headerSlot = slots.header;\n            const footerSlot = slots.footer;\n            const prefixSlot = slots.prefix;\n            const popupOpts = computePopupOpts.value;\n            const popupClassName = popupOpts.className || props.popupClassName;\n            const treeOpts = computeTreeOpts.value;\n            const treeNodeOpts = computeTreeNodeOpts.value;\n            const treeCheckboxOpts = computeTreeCheckboxOpts.value;\n            const treeRadioOpts = computeTreeRadioOpts.value;\n            const nodeKeyField = computeNodeKeyField.value;\n            const labelField = computeLabelField.value;\n            const valueField = computeValueField.value;\n            const childrenField = computeChildrenField.value;\n            const parentField = computeParentField.value;\n            const hasChildField = computeHasChildField.value;\n            if (formReadonly) {\n                return h('div', {\n                    ref: refElem,\n                    class: ['vxe-tree-select--readonly', className]\n                }, [\n                    h('span', {\n                        class: 'vxe-tree-select-label'\n                    }, selectLabel)\n                ]);\n            }\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-tree-select', className ? (XEUtils.isFunction(className) ? className({ $treeSelect: $xeTreeSelect }) : className) : '', {\n                        [`size--${vSize}`]: vSize,\n                        'is--visible': visiblePanel,\n                        'is--disabled': isDisabled,\n                        'is--loading': loading,\n                        'is--active': isActivated\n                    }]\n            }, [\n                h(VxeInputComponent, {\n                    ref: refInput,\n                    clearable: props.clearable,\n                    placeholder: loading ? getI18n('vxe.select.loadingText') : props.placeholder,\n                    readonly: true,\n                    disabled: isDisabled,\n                    type: 'text',\n                    prefixIcon: props.prefixIcon,\n                    suffixIcon: loading ? getIcon().TREE_SELECT_LOADED : (visiblePanel ? getIcon().TREE_SELECT_OPEN : getIcon().TREE_SELECT_CLOSE),\n                    modelValue: loading ? '' : selectLabel,\n                    onClear: clearEvent,\n                    onClick: clickEvent,\n                    onFocus: focusEvent,\n                    onBlur: blurEvent,\n                    onSuffixClick: togglePanelEvent\n                }, prefixSlot\n                    ? {\n                        prefix: () => prefixSlot({})\n                    }\n                    : {}),\n                h(Teleport, {\n                    to: 'body',\n                    disabled: btnTransfer ? !initialized : true\n                }, [\n                    h('div', {\n                        ref: refOptionPanel,\n                        class: ['vxe-table--ignore-clear vxe-tree-select--panel', popupClassName ? (XEUtils.isFunction(popupClassName) ? popupClassName({ $treeSelect: $xeTreeSelect }) : popupClassName) : '', {\n                                [`size--${vSize}`]: vSize,\n                                'is--transfer': btnTransfer,\n                                'ani--leave': !loading && isAniVisible,\n                                'ani--enter': !loading && visiblePanel\n                            }],\n                        placement: reactData.panelPlacement,\n                        style: reactData.panelStyle\n                    }, initialized\n                        ? [\n                            h('div', {\n                                class: 'vxe-tree-select--panel-wrapper'\n                            }, [\n                                headerSlot\n                                    ? h('div', {\n                                        class: 'vxe-tree-select--panel-header'\n                                    }, headerSlot({}))\n                                    : renderEmptyElement($xeTreeSelect),\n                                h('div', {\n                                    class: 'vxe-tree-select--panel-body'\n                                }, [\n                                    h('div', {\n                                        ref: refTreeWrapper,\n                                        class: 'vxe-tree-select-tree--wrapper',\n                                        style: popupWrapperStyle\n                                    }, [\n                                        h(VxeTreeComponent, {\n                                            class: 'vxe-tree-select--tree',\n                                            data: options,\n                                            indent: treeOpts.indent,\n                                            showRadio: !multiple,\n                                            radioConfig: treeRadioOpts,\n                                            checkNodeKey: multiple ? null : modelValue,\n                                            showCheckbox: !!multiple,\n                                            checkNodeKeys: multiple ? modelValue : null,\n                                            checkboxConfig: treeCheckboxOpts,\n                                            titleField: labelField,\n                                            valueField: valueField,\n                                            keyField: nodeKeyField,\n                                            childrenField: treeOpts.childrenField || childrenField,\n                                            parentField: treeOpts.parentField || parentField,\n                                            hasChildField: treeOpts.hasChildField || hasChildField,\n                                            accordion: treeOpts.accordion,\n                                            expandAll: treeOpts.expandAll,\n                                            nodeConfig: treeNodeOpts,\n                                            lazy: treeOpts.lazy,\n                                            loadMethod: treeOpts.loadMethod,\n                                            toggleMethod: treeOpts.toggleMethod,\n                                            transform: treeOpts.transform,\n                                            trigger: treeOpts.trigger,\n                                            showIcon: treeOpts.showIcon,\n                                            showLine: treeOpts.showLine,\n                                            iconOpen: treeOpts.iconOpen,\n                                            iconLoaded: treeOpts.iconLoaded,\n                                            iconClose: treeOpts.iconClose,\n                                            onNodeClick: nodeClickEvent,\n                                            onRadioChange: radioChangeEvent,\n                                            onCheckboxChange: checkboxChangeEvent,\n                                            onLoadSuccess: loadSuccessEvent\n                                        })\n                                    ])\n                                ]),\n                                footerSlot\n                                    ? h('div', {\n                                        class: 'vxe-tree-select--panel-footer'\n                                    }, footerSlot({}))\n                                    : renderEmptyElement($xeTreeSelect)\n                            ])\n                        ]\n                        : [])\n                ])\n            ]);\n        };\n        watch(() => props.options, () => {\n            cacheDataMap();\n        });\n        cacheDataMap();\n        onMounted(() => {\n            globalEvents.on($xeTreeSelect, 'mousewheel', handleGlobalMousewheelEvent);\n            globalEvents.on($xeTreeSelect, 'mousedown', handleGlobalMousedownEvent);\n            globalEvents.on($xeTreeSelect, 'blur', handleGlobalBlurEvent);\n        });\n        onUnmounted(() => {\n            globalEvents.off($xeTreeSelect, 'mousewheel');\n            globalEvents.off($xeTreeSelect, 'mousedown');\n            globalEvents.off($xeTreeSelect, 'blur');\n        });\n        provide('$xeTreeSelect', $xeTreeSelect);\n        $xeTreeSelect.renderVN = renderVN;\n        return $xeTreeSelect;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { defineComponent, ref, h, reactive, computed, createCommentVNode, watch, onUnmounted, nextTick } from 'vue';\nimport { createEvent, getIcon, getConfig, useSize } from '../../ui';\nimport XEUtils from 'xe-utils';\nimport { getSlotVNs } from '../../ui/src/vn';\nimport { toCssUnit } from '../../ui/src/dom';\nimport VxeLoadingComponent from '../../loading/src/loading';\n/**\n * 生成节点的唯一主键\n */\nfunction getNodeUniqueId() {\n    return XEUtils.uniqueId('node_');\n}\nexport default defineComponent({\n    name: 'VxeTree',\n    props: {\n        data: Array,\n        height: [String, Number],\n        minHeight: {\n            type: [String, Number],\n            default: () => getConfig().tree.minHeight\n        },\n        loading: Boolean,\n        loadingConfig: Object,\n        accordion: {\n            type: Boolean,\n            default: () => getConfig().tree.accordion\n        },\n        childrenField: {\n            type: String,\n            default: () => getConfig().tree.childrenField\n        },\n        valueField: {\n            type: String,\n            default: () => getConfig().tree.valueField\n        },\n        keyField: {\n            type: String,\n            default: () => getConfig().tree.keyField\n        },\n        parentField: {\n            type: String,\n            default: () => getConfig().tree.parentField\n        },\n        titleField: {\n            type: String,\n            default: () => getConfig().tree.titleField\n        },\n        hasChildField: {\n            type: String,\n            default: () => getConfig().tree.hasChildField\n        },\n        // mapChildrenField: {\n        //   type: String as PropType<VxeTreePropTypes.MapChildrenField>,\n        //   default: () => getConfig().tree.mapChildrenField\n        // },\n        transform: Boolean,\n        // 已废弃\n        isCurrent: Boolean,\n        // 已废弃\n        isHover: Boolean,\n        expandAll: Boolean,\n        showLine: {\n            type: Boolean,\n            default: () => getConfig().tree.showLine\n        },\n        trigger: String,\n        indent: {\n            type: Number,\n            default: () => getConfig().tree.indent\n        },\n        showRadio: {\n            type: Boolean,\n            default: () => getConfig().tree.showRadio\n        },\n        checkNodeKey: {\n            type: [String, Number],\n            default: () => getConfig().tree.checkNodeKey\n        },\n        radioConfig: Object,\n        showCheckbox: {\n            type: Boolean,\n            default: () => getConfig().tree.showCheckbox\n        },\n        checkNodeKeys: {\n            type: Array,\n            default: () => getConfig().tree.checkNodeKeys\n        },\n        checkboxConfig: Object,\n        nodeConfig: Object,\n        lazy: Boolean,\n        toggleMethod: Function,\n        loadMethod: Function,\n        showIcon: {\n            type: Boolean,\n            default: true\n        },\n        iconOpen: {\n            type: String,\n            default: () => getConfig().tree.iconOpen\n        },\n        iconClose: {\n            type: String,\n            default: () => getConfig().tree.iconClose\n        },\n        iconLoaded: {\n            type: String,\n            default: () => getConfig().tree.iconLoaded\n        },\n        size: {\n            type: String,\n            default: () => getConfig().tree.size || getConfig().size\n        }\n    },\n    emits: [\n        'update:modelValue',\n        'update:checkNodeKey',\n        'update:checkNodeKeys',\n        'node-click',\n        'node-dblclick',\n        'current-change',\n        'radio-change',\n        'checkbox-change',\n        'load-success',\n        'load-error'\n    ],\n    setup(props, context) {\n        const { emit, slots } = context;\n        const xID = XEUtils.uniqueId();\n        const { computeSize } = useSize(props);\n        const refElem = ref();\n        const reactData = reactive({\n            currentNode: null,\n            nodeMaps: {},\n            selectRadioKey: props.checkNodeKey,\n            treeList: [],\n            treeExpandedMaps: {},\n            treeExpandLazyLoadedMaps: {},\n            selectCheckboxMaps: {},\n            indeterminateCheckboxMaps: {}\n        });\n        const internalData = {\n        // initialized: false\n        };\n        const refMaps = {\n            refElem\n        };\n        const computeTitleField = computed(() => {\n            return props.titleField || 'title';\n        });\n        const computeKeyField = computed(() => {\n            return props.keyField || 'id';\n        });\n        const computeValueField = computed(() => {\n            const keyField = computeKeyField.value;\n            return props.valueField || keyField;\n        });\n        const computeParentField = computed(() => {\n            return props.parentField || 'parentId';\n        });\n        const computeChildrenField = computed(() => {\n            return props.childrenField || 'children';\n        });\n        const computeHasChildField = computed(() => {\n            return props.hasChildField || 'hasChild';\n        });\n        const computeIsRowCurrent = computed(() => {\n            const nodeOpts = computeNodeOpts.value;\n            const { isCurrent } = nodeOpts;\n            if (XEUtils.isBoolean(isCurrent)) {\n                return isCurrent;\n            }\n            return props.isCurrent;\n        });\n        const computeIsRowHover = computed(() => {\n            const nodeOpts = computeNodeOpts.value;\n            const { isHover } = nodeOpts;\n            if (XEUtils.isBoolean(isHover)) {\n                return isHover;\n            }\n            return props.isHover;\n        });\n        const computeRadioOpts = computed(() => {\n            return Object.assign({ showIcon: true }, getConfig().tree.radioConfig, props.radioConfig);\n        });\n        const computeCheckboxOpts = computed(() => {\n            return Object.assign({ showIcon: true }, getConfig().tree.checkboxConfig, props.checkboxConfig);\n        });\n        const computeNodeOpts = computed(() => {\n            return Object.assign({}, getConfig().tree.nodeConfig, props.nodeConfig);\n        });\n        const computeLoadingOpts = computed(() => {\n            return Object.assign({}, getConfig().tree.loadingConfig, props.loadingConfig);\n        });\n        const computeTreeStyle = computed(() => {\n            const { height, minHeight } = props;\n            const stys = {};\n            if (height) {\n                stys.height = toCssUnit(height);\n            }\n            if (minHeight) {\n                stys.minHeight = toCssUnit(minHeight);\n            }\n            return stys;\n        });\n        const computeMaps = {\n            computeRadioOpts,\n            computeCheckboxOpts,\n            computeNodeOpts\n        };\n        const $xeTree = {\n            xID,\n            props,\n            context,\n            internalData,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const getNodeId = (node) => {\n            const valueField = computeValueField.value;\n            const nodeid = XEUtils.get(node, valueField);\n            return XEUtils.eqNull(nodeid) ? '' : encodeURIComponent(nodeid);\n        };\n        const isExpandByNode = (node) => {\n            const { treeExpandedMaps } = reactData;\n            const nodeid = getNodeId(node);\n            return !!treeExpandedMaps[nodeid];\n        };\n        const isCheckedByRadioNodeId = (nodeid) => {\n            const { selectRadioKey } = reactData;\n            return selectRadioKey === nodeid;\n        };\n        const isCheckedByRadioNode = (node) => {\n            return isCheckedByRadioNodeId(getNodeId(node));\n        };\n        const isCheckedByCheckboxNodeId = (nodeid) => {\n            const { selectCheckboxMaps } = reactData;\n            return !!selectCheckboxMaps[nodeid];\n        };\n        const isCheckedByCheckboxNode = (node) => {\n            return isCheckedByCheckboxNodeId(getNodeId(node));\n        };\n        const isIndeterminateByCheckboxNodeid = (nodeid) => {\n            const { indeterminateCheckboxMaps } = reactData;\n            return !!indeterminateCheckboxMaps[nodeid];\n        };\n        const isIndeterminateByCheckboxNode = (node) => {\n            return isIndeterminateByCheckboxNodeid(getNodeId(node));\n        };\n        const emitCheckboxMode = (value) => {\n            emit('update:checkNodeKeys', value);\n        };\n        const emitRadioMode = (value) => {\n            emit('update:checkNodeKey', value);\n        };\n        const setRadioNode = (node) => {\n            if (node) {\n                reactData.selectRadioKey = getNodeId(node);\n            }\n            return nextTick();\n        };\n        const setCheckboxNode = (nodeList, checked) => {\n            if (nodeList) {\n                if (!XEUtils.isArray(nodeList)) {\n                    nodeList = [nodeList];\n                }\n                handleCheckedCheckboxNode(nodeList.map((item) => getNodeId(item)), checked);\n            }\n            return nextTick();\n        };\n        const setCheckboxByNodeId = (nodeIds, checked) => {\n            if (nodeIds) {\n                if (!XEUtils.isArray(nodeIds)) {\n                    nodeIds = [nodeIds];\n                }\n                handleCheckedCheckboxNode(nodeIds, checked);\n            }\n            return nextTick();\n        };\n        const handleCheckedCheckboxNode = (nodeIds, checked) => {\n            const selectKeyMaps = Object.assign({}, reactData.selectCheckboxMaps);\n            nodeIds.forEach((key) => {\n                if (checked) {\n                    selectKeyMaps[key] = true;\n                }\n                else if (selectKeyMaps[key]) {\n                    delete selectKeyMaps[key];\n                }\n            });\n            reactData.selectCheckboxMaps = selectKeyMaps;\n        };\n        const updateCheckboxChecked = (nodeIds) => {\n            const selectKeyMaps = {};\n            if (nodeIds) {\n                nodeIds.forEach((key) => {\n                    selectKeyMaps[key] = true;\n                });\n            }\n            reactData.selectCheckboxMaps = selectKeyMaps;\n        };\n        const handleSetExpand = (nodeid, expanded, expandedMaps) => {\n            if (expanded) {\n                if (!expandedMaps[nodeid]) {\n                    expandedMaps[nodeid] = true;\n                }\n            }\n            else {\n                if (expandedMaps[nodeid]) {\n                    delete expandedMaps[nodeid];\n                }\n            }\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $tree: $xeTree }, params));\n        };\n        const createNode = (records) => {\n            const valueField = computeValueField.value;\n            return Promise.resolve(records.map(obj => {\n                const item = Object.assign({}, obj);\n                let nodeid = getNodeId(item);\n                if (!nodeid) {\n                    nodeid = getNodeUniqueId();\n                    XEUtils.set(item, valueField, nodeid);\n                }\n                return item;\n            }));\n        };\n        const treeMethods = {\n            dispatchEvent,\n            clearCurrentNode() {\n                reactData.currentNode = null;\n                return nextTick();\n            },\n            getCurrentNodeId() {\n                const { currentNode } = reactData;\n                if (currentNode) {\n                    return getNodeId(currentNode);\n                }\n                return null;\n            },\n            getCurrentNode() {\n                const { currentNode, nodeMaps } = reactData;\n                if (currentNode) {\n                    const nodeItem = nodeMaps[getNodeId(currentNode)];\n                    if (nodeItem) {\n                        return nodeItem.item;\n                    }\n                }\n                return null;\n            },\n            setCurrentNodeId(nodeKey) {\n                const { nodeMaps } = reactData;\n                const nodeItem = nodeMaps[nodeKey];\n                reactData.currentNode = nodeItem ? nodeItem.item : null;\n                return nextTick();\n            },\n            setCurrentNode(node) {\n                reactData.currentNode = node;\n                return nextTick();\n            },\n            clearRadioNode() {\n                reactData.selectRadioKey = null;\n                return nextTick();\n            },\n            getRadioNodeId() {\n                return reactData.selectRadioKey || null;\n            },\n            getRadioNode() {\n                const { selectRadioKey, nodeMaps } = reactData;\n                if (selectRadioKey) {\n                    const nodeItem = nodeMaps[selectRadioKey];\n                    if (nodeItem) {\n                        return nodeItem.item;\n                    }\n                }\n                return null;\n            },\n            setRadioNodeId(nodeKey) {\n                reactData.selectRadioKey = nodeKey;\n                return nextTick();\n            },\n            setRadioNode,\n            setCheckboxNode,\n            setCheckboxByNodeId,\n            getCheckboxNodeIds() {\n                const { selectCheckboxMaps } = reactData;\n                return Object.keys(selectCheckboxMaps);\n            },\n            getCheckboxNodes() {\n                const { nodeMaps, selectCheckboxMaps } = reactData;\n                const list = [];\n                XEUtils.each(selectCheckboxMaps, (item, nodeid) => {\n                    const nodeItem = nodeMaps[nodeid];\n                    if (nodeItem) {\n                        list.push(nodeItem.item);\n                    }\n                });\n                return list;\n            },\n            clearCheckboxNode() {\n                reactData.selectCheckboxMaps = {};\n                return nextTick();\n            },\n            setAllCheckboxNode(checked) {\n                const selectMaps = {};\n                const childrenField = computeChildrenField.value;\n                if (checked) {\n                    XEUtils.eachTree(reactData.treeList, (node) => {\n                        const nodeid = getNodeId(node);\n                        selectMaps[nodeid] = true;\n                    }, { children: childrenField });\n                }\n                reactData.selectCheckboxMaps = selectMaps;\n                return nextTick();\n            },\n            clearExpandNode() {\n                return treeMethods.clearAllExpandNode();\n            },\n            clearAllExpandNode() {\n                XEUtils.each(reactData.nodeMaps, (nodeItem) => {\n                    nodeItem.treeLoaded = false;\n                });\n                reactData.treeExpandedMaps = {};\n                return nextTick();\n            },\n            setExpandByNodeId(nodeids, expanded) {\n                const expandedMaps = Object.assign({}, reactData.treeExpandedMaps);\n                if (nodeids) {\n                    if (!XEUtils.isArray(nodeids)) {\n                        nodeids = [nodeids];\n                    }\n                    nodeids.forEach((nodeid) => {\n                        handleSetExpand(nodeid, expanded, expandedMaps);\n                    });\n                    reactData.treeExpandedMaps = expandedMaps;\n                }\n                return nextTick();\n            },\n            getExpandNodeIds() {\n                const { treeExpandedMaps } = reactData;\n                return Object.keys(treeExpandedMaps);\n            },\n            getExpandNodes() {\n                const { nodeMaps, treeExpandedMaps } = reactData;\n                const list = [];\n                XEUtils.each(treeExpandedMaps, (item, nodeid) => {\n                    const nodeItem = nodeMaps[nodeid];\n                    if (nodeItem) {\n                        list.push(nodeItem.item);\n                    }\n                });\n                return list;\n            },\n            setExpandNode(nodes, expanded) {\n                const expandedMaps = Object.assign({}, reactData.treeExpandedMaps);\n                if (nodes) {\n                    if (!XEUtils.isArray(nodes)) {\n                        nodes = [nodes];\n                    }\n                    nodes.forEach((node) => {\n                        const nodeid = getNodeId(node);\n                        handleSetExpand(nodeid, expanded, expandedMaps);\n                    });\n                    reactData.treeExpandedMaps = expandedMaps;\n                }\n                return nextTick();\n            },\n            toggleExpandByNodeId(nodeids) {\n                const expandedMaps = Object.assign({}, reactData.treeExpandedMaps);\n                if (nodeids) {\n                    if (!XEUtils.isArray(nodeids)) {\n                        nodeids = [nodeids];\n                    }\n                    nodeids.forEach((nodeid) => {\n                        handleSetExpand(nodeid, !expandedMaps[nodeid], expandedMaps);\n                    });\n                    reactData.treeExpandedMaps = expandedMaps;\n                }\n                return nextTick();\n            },\n            toggleExpandNode(nodes) {\n                const expandedMaps = Object.assign({}, reactData.treeExpandedMaps);\n                if (nodes) {\n                    if (!XEUtils.isArray(nodes)) {\n                        nodes = [nodes];\n                    }\n                    nodes.forEach((node) => {\n                        const nodeid = getNodeId(node);\n                        handleSetExpand(nodeid, !expandedMaps[nodeid], expandedMaps);\n                    });\n                    reactData.treeExpandedMaps = expandedMaps;\n                }\n                return nextTick();\n            },\n            setAllExpandNode(expanded) {\n                const expandedMaps = {};\n                const childrenField = computeChildrenField.value;\n                if (expanded) {\n                    XEUtils.eachTree(reactData.treeList, (node) => {\n                        const childList = XEUtils.get(node, childrenField);\n                        const hasChild = childList && childList.length;\n                        if (hasChild) {\n                            const nodeid = getNodeId(node);\n                            expandedMaps[nodeid] = true;\n                        }\n                    }, { children: childrenField });\n                }\n                reactData.treeExpandedMaps = expandedMaps;\n                return nextTick();\n            },\n            reloadExpandNode(node) {\n                const { lazy } = props;\n                if (lazy) {\n                    treeMethods.clearExpandLoaded(node);\n                    return handleAsyncTreeExpandChilds(node);\n                }\n                return nextTick();\n            },\n            clearExpandLoaded(node) {\n                const { lazy } = props;\n                const { nodeMaps } = reactData;\n                if (lazy) {\n                    const nodeItem = nodeMaps[getNodeId(node)];\n                    if (nodeItem) {\n                        nodeItem.treeLoaded = false;\n                    }\n                }\n                return nextTick();\n            },\n            /**\n             * 用于树结构，给行数据加载子节点\n             */\n            loadChildrenNode(node, childRecords) {\n                const { lazy, transform } = props;\n                const { nodeMaps } = reactData;\n                if (!lazy) {\n                    return Promise.resolve([]);\n                }\n                const childrenField = computeChildrenField.value;\n                const parentNodeItem = nodeMaps[getNodeId(node)];\n                const parentLevel = parentNodeItem ? parentNodeItem.level : 0;\n                const parentNodes = parentNodeItem ? parentNodeItem.nodes : [];\n                return createNode(childRecords).then((nodeList) => {\n                    XEUtils.eachTree(nodeList, (childRow, index, items, path, parent, nodes) => {\n                        const itemNodeId = getNodeId(childRow);\n                        nodeMaps[itemNodeId] = {\n                            item: node,\n                            itemIndex: -1,\n                            items,\n                            parent: parent || parentNodeItem.item,\n                            nodes: parentNodes.concat(nodes),\n                            level: parentLevel + nodes.length,\n                            lineCount: 0,\n                            treeLoaded: false\n                        };\n                    }, { children: childrenField });\n                    node[childrenField] = nodeList;\n                    if (transform) {\n                        node[childrenField] = nodeList;\n                    }\n                    updateNodeLine(node);\n                    return nodeList;\n                });\n            },\n            isExpandByNode,\n            isCheckedByRadioNodeId,\n            isCheckedByRadioNode,\n            isCheckedByCheckboxNodeId,\n            isIndeterminateByCheckboxNode,\n            isCheckedByCheckboxNode,\n            getCheckboxIndeterminateNodes() {\n                const { treeList, indeterminateCheckboxMaps } = reactData;\n                const indeterminateNodes = [];\n                XEUtils.eachTree(treeList, (node) => {\n                    if (indeterminateCheckboxMaps[getNodeId(node)]) {\n                        indeterminateNodes.push(node);\n                    }\n                });\n                return indeterminateNodes;\n            }\n        };\n        const cacheNodeMap = () => {\n            const { treeList } = reactData;\n            const valueField = computeValueField.value;\n            const childrenField = computeChildrenField.value;\n            const keyMaps = {};\n            XEUtils.eachTree(treeList, (item, itemIndex, items, path, parent, nodes) => {\n                let nodeid = getNodeId(item);\n                if (!nodeid) {\n                    nodeid = getNodeUniqueId();\n                    XEUtils.set(item, valueField, nodeid);\n                }\n                keyMaps[nodeid] = {\n                    item,\n                    itemIndex,\n                    items,\n                    parent,\n                    nodes,\n                    level: nodes.length,\n                    lineCount: 0,\n                    treeLoaded: false\n                };\n            }, { children: childrenField });\n            reactData.nodeMaps = keyMaps;\n        };\n        const updateData = (list) => {\n            const { expandAll, transform } = props;\n            const { initialized } = internalData;\n            const keyField = computeKeyField.value;\n            const parentField = computeParentField.value;\n            const childrenField = computeChildrenField.value;\n            if (transform) {\n                reactData.treeList = XEUtils.toArrayTree(list, { key: keyField, parentKey: parentField, mapChildren: childrenField });\n            }\n            else {\n                reactData.treeList = list ? list.slice(0) : [];\n            }\n            cacheNodeMap();\n            if (expandAll && !initialized) {\n                if (list && list.length) {\n                    internalData.initialized = true;\n                    $xeTree.setAllExpandNode(true);\n                }\n            }\n        };\n        const handleCountLine = (item, isRoot, nodeItem) => {\n            const { treeExpandedMaps } = reactData;\n            const childrenField = computeChildrenField.value;\n            const nodeid = getNodeId(item);\n            nodeItem.lineCount++;\n            if (treeExpandedMaps[nodeid]) {\n                XEUtils.arrayEach(item[childrenField], (childItem, childIndex, childList) => {\n                    if (!isRoot || childIndex < childList.length - 1) {\n                        handleCountLine(childItem, false, nodeItem);\n                    }\n                });\n            }\n        };\n        const updateNodeLine = (node) => {\n            const { nodeMaps } = reactData;\n            if (node) {\n                const nodeid = getNodeId(node);\n                const nodeItem = nodeMaps[nodeid];\n                if (nodeItem) {\n                    XEUtils.lastArrayEach(nodeItem.nodes, childItem => {\n                        const nodeid = getNodeId(childItem);\n                        const nodeItem = nodeMaps[nodeid];\n                        if (nodeItem) {\n                            nodeItem.lineCount = 0;\n                            handleCountLine(childItem, true, nodeItem);\n                        }\n                    });\n                }\n            }\n        };\n        const handleNodeClickEvent = (evnt, node) => {\n            const { showRadio, showCheckbox, trigger } = props;\n            const radioOpts = computeRadioOpts.value;\n            const checkboxOpts = computeCheckboxOpts.value;\n            const isRowCurrent = computeIsRowCurrent.value;\n            let triggerCurrent = false;\n            let triggerRadio = false;\n            let triggerCheckbox = false;\n            let triggerExpand = false;\n            if (isRowCurrent) {\n                triggerCurrent = true;\n                changeCurrentEvent(evnt, node);\n            }\n            else if (reactData.currentNode) {\n                reactData.currentNode = null;\n            }\n            if (trigger === 'node') {\n                triggerExpand = true;\n                toggleExpandEvent(evnt, node);\n            }\n            if (showRadio && radioOpts.trigger === 'node') {\n                triggerRadio = true;\n                changeRadioEvent(evnt, node);\n            }\n            if (showCheckbox && checkboxOpts.trigger === 'node') {\n                triggerCheckbox = true;\n                changeCheckboxEvent(evnt, node);\n            }\n            dispatchEvent('node-click', { node, triggerCurrent, triggerRadio, triggerCheckbox, triggerExpand }, evnt);\n        };\n        const handleNodeDblclickEvent = (evnt, node) => {\n            dispatchEvent('node-dblclick', { node }, evnt);\n        };\n        const handleAsyncTreeExpandChilds = (node) => {\n            const checkboxOpts = computeCheckboxOpts.value;\n            const { loadMethod } = props;\n            const { checkStrictly } = checkboxOpts;\n            return new Promise(resolve => {\n                if (loadMethod) {\n                    const tempExpandLazyLoadedMaps = Object.assign({}, reactData.treeExpandLazyLoadedMaps);\n                    const { nodeMaps } = reactData;\n                    const nodeid = getNodeId(node);\n                    const nodeItem = nodeMaps[nodeid];\n                    tempExpandLazyLoadedMaps[nodeid] = true;\n                    reactData.treeExpandLazyLoadedMaps = tempExpandLazyLoadedMaps;\n                    Promise.resolve(loadMethod({ $tree: $xeTree, node })).then((childRecords) => {\n                        const { treeExpandLazyLoadedMaps } = reactData;\n                        nodeItem.treeLoaded = true;\n                        if (treeExpandLazyLoadedMaps[nodeid]) {\n                            treeExpandLazyLoadedMaps[nodeid] = false;\n                        }\n                        if (!XEUtils.isArray(childRecords)) {\n                            childRecords = [];\n                        }\n                        if (childRecords) {\n                            return treeMethods.loadChildrenNode(node, childRecords).then(childRows => {\n                                const tempExpandedMaps = Object.assign({}, reactData.treeExpandedMaps);\n                                if (childRows.length && !tempExpandedMaps[nodeid]) {\n                                    tempExpandedMaps[nodeid] = true;\n                                }\n                                reactData.treeExpandedMaps = tempExpandedMaps;\n                                // 如果当前节点已选中，则展开后子节点也被选中\n                                if (!checkStrictly && treeMethods.isCheckedByCheckboxNodeId(nodeid)) {\n                                    handleCheckedCheckboxNode(childRows.map((item) => getNodeId(item)), true);\n                                }\n                                updateNodeLine(node);\n                                dispatchEvent('load-success', { node, data: childRecords }, new Event('load-success'));\n                                return nextTick();\n                            });\n                        }\n                        else {\n                            updateNodeLine(node);\n                            dispatchEvent('load-success', { node, data: childRecords }, new Event('load-success'));\n                        }\n                    }).catch((e) => {\n                        const { treeExpandLazyLoadedMaps } = reactData;\n                        nodeItem.treeLoaded = false;\n                        if (treeExpandLazyLoadedMaps[nodeid]) {\n                            treeExpandLazyLoadedMaps[nodeid] = false;\n                        }\n                        updateNodeLine(node);\n                        dispatchEvent('load-error', { node, data: e }, new Event('load-error'));\n                    }).finally(() => {\n                        return nextTick();\n                    });\n                }\n                else {\n                    resolve();\n                }\n            });\n        };\n        /**\n         * 展开与收起树节点\n         * @param nodeList\n         * @param expanded\n         * @returns\n         */\n        const handleBaseTreeExpand = (nodeList, expanded) => {\n            const { lazy, accordion, toggleMethod } = props;\n            const { nodeMaps, treeExpandLazyLoadedMaps } = reactData;\n            const tempExpandedMaps = Object.assign({}, reactData.treeExpandedMaps);\n            const childrenField = computeChildrenField.value;\n            const hasChildField = computeHasChildField.value;\n            const result = [];\n            let validNodes = toggleMethod ? nodeList.filter((node) => toggleMethod({ $tree: $xeTree, expanded, node })) : nodeList;\n            if (accordion) {\n                validNodes = validNodes.length ? [validNodes[validNodes.length - 1]] : [];\n                // 同一级只能展开一个\n                const nodeid = getNodeId(validNodes[0]);\n                const nodeItem = nodeMaps[nodeid];\n                if (nodeItem) {\n                    nodeItem.items.forEach(item => {\n                        const itemNodeId = getNodeId(item);\n                        if (tempExpandedMaps[itemNodeId]) {\n                            delete tempExpandedMaps[itemNodeId];\n                        }\n                    });\n                }\n            }\n            const expandNodes = [];\n            if (expanded) {\n                validNodes.forEach((item) => {\n                    const itemNodeId = getNodeId(item);\n                    if (!tempExpandedMaps[itemNodeId]) {\n                        const nodeItem = nodeMaps[itemNodeId];\n                        const isLoad = lazy && item[hasChildField] && !nodeItem.treeLoaded && !treeExpandLazyLoadedMaps[itemNodeId];\n                        // 是否使用懒加载\n                        if (isLoad) {\n                            result.push(handleAsyncTreeExpandChilds(item));\n                        }\n                        else {\n                            if (item[childrenField] && item[childrenField].length) {\n                                tempExpandedMaps[itemNodeId] = true;\n                                expandNodes.push(item);\n                            }\n                        }\n                    }\n                });\n            }\n            else {\n                validNodes.forEach(item => {\n                    const itemNodeId = getNodeId(item);\n                    if (tempExpandedMaps[itemNodeId]) {\n                        delete tempExpandedMaps[itemNodeId];\n                        expandNodes.push(item);\n                    }\n                });\n            }\n            reactData.treeExpandedMaps = tempExpandedMaps;\n            expandNodes.forEach(updateNodeLine);\n            return Promise.all(result);\n        };\n        const toggleExpandEvent = (evnt, node) => {\n            const { lazy } = props;\n            const { treeExpandedMaps, treeExpandLazyLoadedMaps } = reactData;\n            const nodeid = getNodeId(node);\n            const expanded = !treeExpandedMaps[nodeid];\n            evnt.stopPropagation();\n            if (!lazy || !treeExpandLazyLoadedMaps[nodeid]) {\n                handleBaseTreeExpand([node], expanded);\n            }\n        };\n        const handleNodeCheckboxStatus = (node, selectKeyMaps, indeterminateMaps) => {\n            const childrenField = computeChildrenField.value;\n            const childList = XEUtils.get(node, childrenField);\n            const nodeid = getNodeId(node);\n            if (childList && childList.length) {\n                let checkSome = false;\n                let checkSize = 0;\n                childList.forEach(childNode => {\n                    const childNodeid = getNodeId(childNode);\n                    const isChecked = selectKeyMaps[childNodeid];\n                    if (isChecked || indeterminateMaps[childNodeid]) {\n                        if (isChecked) {\n                            checkSize++;\n                        }\n                        checkSome = true;\n                    }\n                });\n                const checkAll = checkSize === childList.length;\n                if (checkAll) {\n                    if (!selectKeyMaps[nodeid]) {\n                        selectKeyMaps[nodeid] = true;\n                    }\n                    if (indeterminateMaps[nodeid]) {\n                        delete indeterminateMaps[nodeid];\n                    }\n                }\n                else {\n                    if (selectKeyMaps[nodeid]) {\n                        delete selectKeyMaps[nodeid];\n                    }\n                    indeterminateMaps[nodeid] = checkSome;\n                }\n            }\n            else {\n                if (indeterminateMaps[nodeid]) {\n                    delete indeterminateMaps[nodeid];\n                }\n            }\n        };\n        const updateCheckboxStatus = () => {\n            const { treeList } = reactData;\n            const childrenField = computeChildrenField.value;\n            const checkboxOpts = computeCheckboxOpts.value;\n            const { checkStrictly } = checkboxOpts;\n            if (!checkStrictly) {\n                const selectKeyMaps = Object.assign({}, reactData.selectCheckboxMaps);\n                const indeterminateMaps = {};\n                XEUtils.eachTree(treeList, (node, index, items, path, parent, nodes) => {\n                    const childList = XEUtils.get(node, childrenField);\n                    if (!childList || !childList.length) {\n                        handleNodeCheckboxStatus(node, selectKeyMaps, indeterminateMaps);\n                    }\n                    if (index === items.length - 1) {\n                        for (let len = nodes.length - 2; len >= 0; len--) {\n                            const parentItem = nodes[len];\n                            handleNodeCheckboxStatus(parentItem, selectKeyMaps, indeterminateMaps);\n                        }\n                    }\n                });\n                reactData.selectCheckboxMaps = selectKeyMaps;\n                reactData.indeterminateCheckboxMaps = indeterminateMaps;\n            }\n        };\n        const changeCheckboxEvent = (evnt, node) => {\n            evnt.preventDefault();\n            evnt.stopPropagation();\n            const checkboxOpts = computeCheckboxOpts.value;\n            const { checkStrictly, checkMethod } = checkboxOpts;\n            let isDisabled = !!checkMethod;\n            if (checkMethod) {\n                isDisabled = !checkMethod({ node });\n            }\n            if (isDisabled) {\n                return;\n            }\n            const selectKeyMaps = Object.assign({}, reactData.selectCheckboxMaps);\n            const childrenField = computeChildrenField.value;\n            const nodeid = getNodeId(node);\n            let isChecked = false;\n            if (selectKeyMaps[nodeid]) {\n                delete selectKeyMaps[nodeid];\n            }\n            else {\n                isChecked = true;\n                selectKeyMaps[nodeid] = isChecked;\n            }\n            if (!checkStrictly) {\n                XEUtils.eachTree(XEUtils.get(node, childrenField), (childNode) => {\n                    const childNodeid = getNodeId(childNode);\n                    if (isChecked) {\n                        if (!selectKeyMaps[childNodeid]) {\n                            selectKeyMaps[childNodeid] = true;\n                        }\n                    }\n                    else {\n                        if (selectKeyMaps[childNodeid]) {\n                            delete selectKeyMaps[childNodeid];\n                        }\n                    }\n                }, { children: childrenField });\n            }\n            reactData.selectCheckboxMaps = selectKeyMaps;\n            updateCheckboxStatus();\n            const value = Object.keys(reactData.selectCheckboxMaps);\n            emitCheckboxMode(value);\n            dispatchEvent('checkbox-change', { node, value, checked: isChecked }, evnt);\n        };\n        const changeCurrentEvent = (evnt, node) => {\n            evnt.preventDefault();\n            const nodeOpts = computeNodeOpts.value;\n            const { currentMethod, trigger } = nodeOpts;\n            const childrenField = computeChildrenField.value;\n            const childList = XEUtils.get(node, childrenField);\n            const hasChild = childList && childList.length;\n            let isDisabled = !!currentMethod;\n            if (trigger === 'child') {\n                if (hasChild) {\n                    return;\n                }\n            }\n            else if (trigger === 'parent') {\n                if (!hasChild) {\n                    return;\n                }\n            }\n            if (currentMethod) {\n                isDisabled = !currentMethod({ node });\n            }\n            if (isDisabled) {\n                return;\n            }\n            const isChecked = true;\n            reactData.currentNode = node;\n            dispatchEvent('current-change', { node, checked: isChecked }, evnt);\n        };\n        const changeRadioEvent = (evnt, node) => {\n            evnt.preventDefault();\n            evnt.stopPropagation();\n            const radioOpts = computeRadioOpts.value;\n            const { checkMethod } = radioOpts;\n            let isDisabled = !!checkMethod;\n            if (checkMethod) {\n                isDisabled = !checkMethod({ node });\n            }\n            if (isDisabled) {\n                return;\n            }\n            const isChecked = true;\n            const value = getNodeId(node);\n            reactData.selectRadioKey = value;\n            emitRadioMode(value);\n            dispatchEvent('radio-change', { node, value, checked: isChecked }, evnt);\n        };\n        const treePrivateMethods = {};\n        Object.assign($xeTree, treeMethods, treePrivateMethods);\n        const renderRadio = (node, nodeid, isChecked) => {\n            const { showRadio } = props;\n            const radioOpts = computeRadioOpts.value;\n            const { showIcon, checkMethod, visibleMethod } = radioOpts;\n            const isVisible = !visibleMethod || visibleMethod({ node });\n            let isDisabled = !!checkMethod;\n            if (showRadio && showIcon && isVisible) {\n                if (checkMethod) {\n                    isDisabled = !checkMethod({ node });\n                }\n                return h('div', {\n                    class: ['vxe-tree--radio-option', {\n                            'is--checked': isChecked,\n                            'is--disabled': isDisabled\n                        }],\n                    onClick: (evnt) => {\n                        if (!isDisabled) {\n                            changeRadioEvent(evnt, node);\n                        }\n                    }\n                }, [\n                    h('span', {\n                        class: ['vxe-radio--icon', isChecked ? getIcon().RADIO_CHECKED : getIcon().RADIO_UNCHECKED]\n                    })\n                ]);\n            }\n            return createCommentVNode();\n        };\n        const renderCheckbox = (node, nodeid, isChecked) => {\n            const { showCheckbox } = props;\n            const checkboxOpts = computeCheckboxOpts.value;\n            const { showIcon, checkMethod, visibleMethod } = checkboxOpts;\n            const isIndeterminate = isIndeterminateByCheckboxNodeid(nodeid);\n            const isVisible = !visibleMethod || visibleMethod({ node });\n            let isDisabled = !!checkMethod;\n            if (showCheckbox && showIcon && isVisible) {\n                if (checkMethod) {\n                    isDisabled = !checkMethod({ node });\n                }\n                return h('div', {\n                    class: ['vxe-tree--checkbox-option', {\n                            'is--checked': isChecked,\n                            'is--indeterminate': isIndeterminate,\n                            'is--disabled': isDisabled\n                        }],\n                    onClick: (evnt) => {\n                        if (!isDisabled) {\n                            changeCheckboxEvent(evnt, node);\n                        }\n                    }\n                }, [\n                    h('span', {\n                        class: ['vxe-checkbox--icon', isIndeterminate ? getIcon().CHECKBOX_INDETERMINATE : (isChecked ? getIcon().CHECKBOX_CHECKED : getIcon().CHECKBOX_UNCHECKED)]\n                    })\n                ]);\n            }\n            return createCommentVNode();\n        };\n        const renderNode = (node) => {\n            const { lazy, showRadio, showCheckbox, showLine, indent, iconOpen, iconClose, iconLoaded, showIcon } = props;\n            const { nodeMaps, treeExpandedMaps, currentNode, selectRadioKey, treeExpandLazyLoadedMaps } = reactData;\n            const childrenField = computeChildrenField.value;\n            const titleField = computeTitleField.value;\n            const hasChildField = computeHasChildField.value;\n            const childList = XEUtils.get(node, childrenField);\n            const hasChild = childList && childList.length;\n            const iconSlot = slots.icon;\n            const titleSlot = slots.title;\n            const extraSlot = slots.extra;\n            const nodeid = getNodeId(node);\n            const isExpand = treeExpandedMaps[nodeid];\n            const nodeItem = nodeMaps[nodeid];\n            const nodeValue = XEUtils.get(node, titleField);\n            const childVns = [];\n            if (hasChild && treeExpandedMaps[nodeid]) {\n                if (showLine) {\n                    childVns.push(h('div', {\n                        key: 'line',\n                        class: 'vxe-tree--node-child-line',\n                        style: {\n                            height: `calc(${nodeItem.lineCount} * var(--vxe-ui-tree-node-height) - var(--vxe-ui-tree-node-height) / 2)`,\n                            left: `${(nodeItem.level + 1) * (indent || 1)}px`\n                        }\n                    }));\n                }\n                childList.forEach(childItem => {\n                    childVns.push(renderNode(childItem));\n                });\n            }\n            let isRadioChecked = false;\n            if (showRadio) {\n                // eslint-disable-next-line eqeqeq\n                isRadioChecked = nodeid == selectRadioKey;\n            }\n            let isCheckboxChecked = false;\n            if (showCheckbox) {\n                isCheckboxChecked = isCheckedByCheckboxNodeId(nodeid);\n            }\n            let hasLazyChilds = false;\n            let isLazyLoading = false;\n            let isLazyLoaded = false;\n            if (lazy) {\n                isLazyLoading = !!treeExpandLazyLoadedMaps[nodeid];\n                hasLazyChilds = node[hasChildField];\n                isLazyLoaded = !!nodeItem.treeLoaded;\n            }\n            return h('div', {\n                class: ['vxe-tree--node-wrapper', `node--level-${nodeItem.level}`],\n                nodeid\n            }, [\n                h('div', {\n                    class: ['vxe-tree--node-item', {\n                            'is--current': currentNode && nodeid === getNodeId(currentNode),\n                            'is-radio--checked': isRadioChecked,\n                            'is-checkbox--checked': isCheckboxChecked\n                        }],\n                    style: {\n                        paddingLeft: `${(nodeItem.level - 1) * (indent || 1)}px`\n                    },\n                    onClick(evnt) {\n                        handleNodeClickEvent(evnt, node);\n                    },\n                    onDblclick(evnt) {\n                        handleNodeDblclickEvent(evnt, node);\n                    }\n                }, [\n                    showIcon || showLine\n                        ? h('div', {\n                            class: 'vxe-tree--node-item-switcher'\n                        }, showIcon && (lazy ? (isLazyLoaded ? hasChild : hasLazyChilds) : hasChild)\n                            ? [\n                                h('div', {\n                                    class: 'vxe-tree--node-item-icon',\n                                    onClick(evnt) {\n                                        toggleExpandEvent(evnt, node);\n                                    }\n                                }, iconSlot\n                                    ? iconSlot({ node, isExpand })\n                                    : [\n                                        h('i', {\n                                            class: isLazyLoading ? (iconLoaded || getIcon().TREE_NODE_LOADED) : (isExpand ? (iconOpen || getIcon().TREE_NODE_OPEN) : (iconClose || getIcon().TREE_NODE_CLOSE))\n                                        })\n                                    ])\n                            ]\n                            : [])\n                        : createCommentVNode(),\n                    renderRadio(node, nodeid, isRadioChecked),\n                    renderCheckbox(node, nodeid, isCheckboxChecked),\n                    h('div', {\n                        class: 'vxe-tree--node-item-inner'\n                    }, [\n                        h('div', {\n                            class: 'vxe-tree--node-item-title'\n                        }, titleSlot ? getSlotVNs(titleSlot({ node, isExpand })) : `${nodeValue}`),\n                        extraSlot\n                            ? h('div', {\n                                class: 'vxe-tree--node-item-extra'\n                            }, getSlotVNs(extraSlot({ node, isExpand })))\n                            : createCommentVNode()\n                    ])\n                ]),\n                hasChild && treeExpandedMaps[nodeid]\n                    ? h('div', {\n                        class: 'vxe-tree--node-child-wrapper'\n                    }, childVns)\n                    : createCommentVNode()\n            ]);\n        };\n        const renderNodeList = () => {\n            const { treeList } = reactData;\n            return h('div', {\n                class: 'vxe-tree--node-list-wrapper'\n            }, treeList.map(node => renderNode(node)));\n        };\n        const renderVN = () => {\n            const { loading, trigger, showLine } = props;\n            const vSize = computeSize.value;\n            const radioOpts = computeRadioOpts.value;\n            const checkboxOpts = computeCheckboxOpts.value;\n            const treeStyle = computeTreeStyle.value;\n            const loadingOpts = computeLoadingOpts.value;\n            const isRowHover = computeIsRowHover.value;\n            const loadingSlot = slots.loading;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-tree', {\n                        [`size--${vSize}`]: vSize,\n                        'show--line': showLine,\n                        'checkbox--highlight': checkboxOpts.highlight,\n                        'radio--highlight': radioOpts.highlight,\n                        'node--hover': isRowHover,\n                        'node--trigger': trigger === 'node',\n                        'is--loading': loading\n                    }],\n                style: treeStyle\n            }, [\n                renderNodeList(),\n                /**\n                 * 加载中\n                 */\n                h(VxeLoadingComponent, {\n                    class: 'vxe-tree--loading',\n                    modelValue: loading,\n                    icon: loadingOpts.icon,\n                    text: loadingOpts.text\n                }, loadingSlot\n                    ? {\n                        default: () => loadingSlot({ $tree: $xeTree })\n                    }\n                    : {})\n            ]);\n        };\n        const dataFlag = ref(0);\n        watch(() => props.data ? props.data.length : 0, () => {\n            dataFlag.value++;\n        });\n        watch(() => props.data, () => {\n            dataFlag.value++;\n        });\n        watch(dataFlag, () => {\n            updateData(props.data || []);\n        });\n        watch(() => props.checkNodeKey, (val) => {\n            reactData.selectRadioKey = val;\n        });\n        const checkboxFlag = ref(0);\n        watch(() => props.checkNodeKeys ? props.checkNodeKeys.length : 0, () => {\n            checkboxFlag.value++;\n        });\n        watch(() => props.checkNodeKeys, () => {\n            checkboxFlag.value++;\n        });\n        watch(checkboxFlag, () => {\n            updateCheckboxChecked(props.checkNodeKeys || []);\n        });\n        onUnmounted(() => {\n            reactData.treeList = [];\n            reactData.treeExpandedMaps = {};\n            reactData.nodeMaps = {};\n        });\n        updateData(props.data || []);\n        updateCheckboxChecked(props.checkNodeKeys || []);\n        $xeTree.renderVN = renderVN;\n        return $xeTree;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { defineComponent, h, inject } from 'vue';\nimport { getI18n } from '@vxe-ui/core';\nimport { useWidgetName } from '../src/use';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeTreeSelectComponent from '../../tree-select/src/tree-select';\nexport const WidgetVxeTreeSelectViewComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const $xeFormView = inject('$xeFormView', null);\n        const { computeKebabCaseName } = useWidgetName(props);\n        const changeEvent = () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            if ($xeFormView) {\n                const itemValue = $xeFormView ? $xeFormView.getItemValue(widget) : null;\n                $xeFormView.updateWidgetStatus(widget, itemValue);\n            }\n        };\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const { options } = widget;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormItemComponent, {\n                class: ['vxe-form-design--widget-render-form-item', `widget-${kebabCaseName}`],\n                title: widget.title,\n                field: widget.field,\n                itemRender: {}\n            }, {\n                default() {\n                    return h(VxeTreeSelectComponent, {\n                        modelValue: $xeFormView ? $xeFormView.getItemValue(widget) : null,\n                        placeholder: options.placeholder || getI18n('vxe.base.pleaseSelect'),\n                        options: options.options,\n                        optionProps: { label: 'value', value: 'value' },\n                        onChange: changeEvent,\n                        'onUpdate:modelValue'(val) {\n                            if ($xeFormView) {\n                                $xeFormView.setItemValue(widget, val);\n                            }\n                        }\n                    });\n                }\n            });\n        };\n    }\n});\n", "import { handleGetFormDesignWidgetName } from '../render/util';\nimport { getI18n } from '@vxe-ui/core';\nimport XEUtils from 'xe-utils';\nexport const getWidgetVxeRadioGroupConfig = () => {\n    return {\n        title: handleGetFormDesignWidgetName,\n        icon: 'vxe-icon-radio-checked',\n        options: {\n            options: XEUtils.range(0, 3).map((v, i) => {\n                return {\n                    value: getI18n('vxe.formDesign.widgetProp.dataSource.defValue', [i + 1])\n                };\n            })\n        }\n    };\n};\n", "import { defineComponent, h } from 'vue';\nimport { getI18n } from '@vxe-ui/core';\nimport VxeFormComponent from '../../form/src/form';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeInputComponent from '../../input/src/input';\nimport VxeSwitchComponent from '../../switch/src/switch';\nimport { useWidgetName, useWidgetPropDataSource } from '../../form-design/src/use';\nexport const WidgetVxeRadioGroupFormComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const { renderDataSourceFormItem } = useWidgetPropDataSource(props, {\n            isSubOption: false\n        });\n        const { computeKebabCaseName } = useWidgetName(props);\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormComponent, {\n                class: ['vxe-form-design--widget-render-form-wrapper', `widget-${kebabCaseName}`],\n                vertical: true,\n                span: 24,\n                titleBold: true,\n                titleOverflow: true,\n                data: widget.options\n            }, {\n                default() {\n                    return [\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.name')\n                        }, {\n                            default() {\n                                return h(VxeInputComponent, {\n                                    modelValue: widget.title,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.title = val;\n                                    }\n                                });\n                            }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.placeholder'),\n                            field: 'placeholder',\n                            itemRender: { name: 'VxeInput' }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.required')\n                        }, {\n                            default() {\n                                return h(VxeSwitchComponent, {\n                                    modelValue: widget.required,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.required = val;\n                                    }\n                                });\n                            }\n                        }),\n                        renderDataSourceFormItem()\n                    ];\n                }\n            });\n        };\n    }\n});\n", "import { defineComponent, h, inject } from 'vue';\nimport { useWidgetName } from '../../form-design/src/use';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeRadioGroupComponent from '../../radio/src/group';\nexport const WidgetVxeRadioGroupViewComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const $xeFormView = inject('$xeFormView', null);\n        const { computeKebabCaseName } = useWidgetName(props);\n        const changeEvent = () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            if ($xeFormView) {\n                const itemValue = $xeFormView ? $xeFormView.getItemValue(widget) : null;\n                $xeFormView.updateWidgetStatus(widget, itemValue);\n            }\n        };\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const { options } = widget;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormItemComponent, {\n                class: ['vxe-form-design--widget-render-form-item', `widget-${kebabCaseName}`],\n                title: widget.title,\n                field: widget.field,\n                itemRender: {}\n            }, {\n                default() {\n                    return h(VxeRadioGroupComponent, {\n                        modelValue: $xeFormView ? $xeFormView.getItemValue(widget) : null,\n                        options: options.options,\n                        optionProps: { label: 'value', value: 'value' },\n                        onChange: changeEvent,\n                        'onUpdate:modelValue'(val) {\n                            if ($xeFormView) {\n                                $xeFormView.setItemValue(widget, val);\n                            }\n                        }\n                    });\n                }\n            });\n        };\n    }\n});\n", "import { handleGetFormDesignWidgetName } from '../render/util';\nimport { getI18n } from '@vxe-ui/core';\nimport XEUtils from 'xe-utils';\nexport const getWidgetVxeCheckboxGroupConfig = () => {\n    return {\n        title: handleGetFormDesignWidgetName,\n        icon: 'vxe-icon-checkbox-checked',\n        options: {\n            options: XEUtils.range(0, 3).map((v, i) => {\n                return {\n                    value: getI18n('vxe.formDesign.widgetProp.dataSource.defValue', [i + 1])\n                };\n            })\n        }\n    };\n};\n", "import { defineComponent, h } from 'vue';\nimport { getI18n } from '@vxe-ui/core';\nimport VxeFormComponent from '../../form/src/form';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeInputComponent from '../../input/src/input';\nimport VxeSwitchComponent from '../../switch/src/switch';\nimport { useWidgetName, useWidgetPropDataSource } from '../../form-design/src/use';\nexport const WidgetVxeCheckboxGroupFormComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const { renderDataSourceFormItem } = useWidgetPropDataSource(props, {\n            isSubOption: false\n        });\n        const { computeKebabCaseName } = useWidgetName(props);\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormComponent, {\n                class: ['vxe-form-design--widget-render-form-wrapper', `widget-${kebabCaseName}`],\n                vertical: true,\n                span: 24,\n                titleBold: true,\n                titleOverflow: true,\n                data: widget.options\n            }, {\n                default() {\n                    return [\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.name')\n                        }, {\n                            default() {\n                                return h(VxeInputComponent, {\n                                    modelValue: widget.title,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.title = val;\n                                    }\n                                });\n                            }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.placeholder'),\n                            field: 'placeholder',\n                            itemRender: { name: 'VxeInput' }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.required')\n                        }, {\n                            default() {\n                                return h(VxeSwitchComponent, {\n                                    modelValue: widget.required,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.required = val;\n                                    }\n                                });\n                            }\n                        }),\n                        renderDataSourceFormItem()\n                    ];\n                }\n            });\n        };\n    }\n});\n", "import { defineComponent, h, inject } from 'vue';\nimport { useWidgetName } from '../../form-design/src/use';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeCheckboxGroupComponent from '../../checkbox/src/group';\nexport const WidgetVxeCheckboxGroupViewComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const $xeFormView = inject('$xeFormView', null);\n        const { computeKebabCaseName } = useWidgetName(props);\n        const changeEvent = () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            if ($xeFormView) {\n                const itemValue = $xeFormView ? $xeFormView.getItemValue(widget) : null;\n                $xeFormView.updateWidgetStatus(widget, itemValue);\n            }\n        };\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const { options } = widget;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormItemComponent, {\n                class: ['vxe-form-design--widget-render-form-item', `widget-${kebabCaseName}`],\n                title: widget.title,\n                field: widget.field,\n                itemRender: {}\n            }, {\n                default() {\n                    return h(VxeCheckboxGroupComponent, {\n                        modelValue: $xeFormView ? $xeFormView.getItemValue(widget) : null,\n                        options: options.options,\n                        optionProps: { label: 'value', value: 'value' },\n                        onChange: changeEvent,\n                        'onUpdate:modelValue'(val) {\n                            if ($xeFormView) {\n                                $xeFormView.setItemValue(widget, val);\n                            }\n                        }\n                    });\n                }\n            });\n        };\n    }\n});\n", "import { handleGetFormDesignWidgetName } from '../render/util';\nexport function getLimitSizeOptions() {\n    const sizeOpts = [\n        { label: '无限制', value: '' }\n    ];\n    const sizeList = [1, 2, 5, 10, 20, 50, 100, 200, 500];\n    sizeList.forEach(num => {\n        sizeOpts.push({ label: `${num}M`, value: num });\n    });\n    return sizeOpts;\n}\nexport const getWidgetVxeUploadFileConfig = () => {\n    return {\n        title: handleGetFormDesignWidgetName,\n        icon: 'vxe-icon-file',\n        options: {\n            limitCount: '',\n            limitSize: 100,\n            multiple: false\n        }\n    };\n};\n", "import { defineComponent, h, ref, createCommentVNode } from 'vue';\nimport { getI18n } from '@vxe-ui/core';\nimport { getLimitSizeOptions } from './vxe-upload-file-data';\nimport { useWidgetName } from '../../form-design/src/use';\nimport VxeFormComponent from '../../form/src/form';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeInputComponent from '../../input/src/input';\nimport VxeSwitchComponent from '../../switch/src/switch';\nexport const WidgetVxeUploadFileFormComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const { computeKebabCaseName } = useWidgetName(props);\n        const limitSizeOptions = ref(getLimitSizeOptions());\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const { options } = widget;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormComponent, {\n                class: ['vxe-form-design--widget-render-form-wrapper', `widget-${kebabCaseName}`],\n                vertical: true,\n                span: 24,\n                titleBold: true,\n                titleOverflow: true,\n                data: options\n            }, {\n                default() {\n                    return [\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.name')\n                        }, {\n                            default() {\n                                return h(VxeInputComponent, {\n                                    modelValue: widget.title,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.title = val;\n                                    }\n                                });\n                            }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.uploadProp.multiFile'),\n                            field: 'multiple',\n                            itemRender: { name: 'VxeSwitch' }\n                        }),\n                        options.multiple\n                            ? h(VxeFormItemComponent, {\n                                title: getI18n('vxe.formDesign.widgetProp.uploadProp.limitFileCount'),\n                                field: 'limitCount',\n                                itemRender: { name: 'VxeInput', props: { type: 'integer', min: 1, clearable: true } }\n                            })\n                            : createCommentVNode(),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.uploadProp.limitFileSize'),\n                            field: 'limitSize',\n                            itemRender: { name: 'VxeSelect', options: limitSizeOptions.value }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.required')\n                        }, {\n                            default() {\n                                return h(VxeSwitchComponent, {\n                                    modelValue: widget.required,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.required = val;\n                                    }\n                                });\n                            }\n                        })\n                    ];\n                }\n            });\n        };\n    }\n});\n", "import { defineComponent, h, inject } from 'vue';\nimport { useWidgetName } from '../../form-design/src/use';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeUploadComponent from '../../upload/src/upload';\nexport const WidgetVxeUploadFileViewComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const $xeFormView = inject('$xeFormView', null);\n        const { computeKebabCaseName } = useWidgetName(props);\n        const changeEvent = () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            if ($xeFormView) {\n                const itemValue = $xeFormView ? $xeFormView.getItemValue(widget) : null;\n                $xeFormView.updateWidgetStatus(widget, itemValue);\n            }\n        };\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const { options } = widget;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormItemComponent, {\n                class: ['vxe-form-design--widget-render-form-item', `widget-${kebabCaseName}`],\n                title: widget.title,\n                field: widget.field,\n                itemRender: {}\n            }, {\n                default() {\n                    return h(VxeUploadComponent, {\n                        modelValue: $xeFormView ? $xeFormView.getItemValue(widget) : null,\n                        mode: 'all',\n                        multiple: options.multiple,\n                        limitCount: options.limitCount,\n                        limitSize: options.limitSize,\n                        onChange: changeEvent,\n                        'onUpdate:modelValue'(val) {\n                            if ($xeFormView) {\n                                $xeFormView.setItemValue(widget, val);\n                            }\n                        }\n                    });\n                }\n            });\n        };\n    }\n});\n", "import { handleGetFormDesignWidgetName } from '../render/util';\nexport const getWidgetVxeUploadImageConfig = () => {\n    return {\n        title: handleGetFormDesignWidgetName,\n        icon: 'vxe-icon-file-image',\n        options: {\n            limitCount: 9,\n            limitSize: 10,\n            multiple: false\n        }\n    };\n};\n", "import { createCommentVNode, defineComponent, h, ref } from 'vue';\nimport { getI18n } from '@vxe-ui/core';\nimport { getLimitSizeOptions } from '../widget-vxe-upload-file/vxe-upload-file-data';\nimport { useWidgetName } from '../../form-design/src/use';\nimport VxeFormComponent from '../../form/src/form';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeInputComponent from '../../input/src/input';\nimport VxeSwitchComponent from '../../switch/src/switch';\nexport const WidgetVxeUploadImageFormComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const { computeKebabCaseName } = useWidgetName(props);\n        const limitSizeOptions = ref(getLimitSizeOptions());\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const { options } = widget;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormComponent, {\n                class: ['vxe-form-design--widget-render-form-wrapper', `widget-${kebabCaseName}`],\n                vertical: true,\n                span: 24,\n                titleBold: true,\n                titleOverflow: true,\n                data: options\n            }, {\n                default() {\n                    return [\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.name')\n                        }, {\n                            default() {\n                                return h(VxeInputComponent, {\n                                    modelValue: widget.title,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.title = val;\n                                    }\n                                });\n                            }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.uploadProp.multiImg'),\n                            field: 'multiple',\n                            itemRender: { name: 'VxeSwitch' }\n                        }),\n                        options.multiple\n                            ? h(VxeFormItemComponent, {\n                                title: getI18n('vxe.formDesign.widgetProp.uploadProp.limitImgCount'),\n                                field: 'limitCount',\n                                itemRender: { name: 'VxeInput', props: { type: 'integer', min: 1, clearable: true } }\n                            })\n                            : createCommentVNode(),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.uploadProp.limitImgSize'),\n                            field: 'limitSize',\n                            itemRender: { name: 'VxeSelect', options: limitSizeOptions.value }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.required')\n                        }, {\n                            default() {\n                                return h(VxeSwitchComponent, {\n                                    modelValue: widget.required,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.required = val;\n                                    }\n                                });\n                            }\n                        })\n                    ];\n                }\n            });\n        };\n    }\n});\n", "import { defineComponent, h, inject } from 'vue';\nimport { useWidgetName } from '../../form-design/src/use';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeUploadComponent from '../../upload/src/upload';\nexport const WidgetVxeUploadImageViewComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const $xeFormView = inject('$xeFormView', null);\n        const { computeKebabCaseName } = useWidgetName(props);\n        const changeEvent = () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            if ($xeFormView) {\n                const itemValue = $xeFormView ? $xeFormView.getItemValue(widget) : null;\n                $xeFormView.updateWidgetStatus(widget, itemValue);\n            }\n        };\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const { options } = widget;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormItemComponent, {\n                class: ['vxe-form-design--widget-render-form-item', `widget-${kebabCaseName}`],\n                title: widget.title,\n                field: widget.field,\n                itemRender: {}\n            }, {\n                default() {\n                    return h(VxeUploadComponent, {\n                        modelValue: $xeFormView ? $xeFormView.getItemValue(widget) : null,\n                        mode: 'image',\n                        multiple: options.multiple,\n                        limitCount: options.limitCount,\n                        limitSize: options.limitSize,\n                        onChange: changeEvent,\n                        'onUpdate:modelValue'(val) {\n                            if ($xeFormView) {\n                                $xeFormView.setItemValue(widget, val);\n                            }\n                        }\n                    });\n                }\n            });\n        };\n    }\n});\n", "import { handleGetFormDesignWidgetName } from '../render/util';\nexport const getWidgetVxeRateConfig = () => {\n    return {\n        title: handleGetFormDesignWidgetName,\n        icon: 'vxe-icon-star',\n        query: true,\n        options: {}\n    };\n};\n", "import { defineComponent, h } from 'vue';\nimport { getI18n } from '@vxe-ui/core';\nimport { useWidgetName } from '../src/use';\nimport VxeFormComponent from '../../form/src/form';\nimport VxeInputComponent from '../../input/src/input';\nimport VxeFormItemComponent from '../../form/src/form-item';\nexport const WidgetVxeRateFormComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const { computeKebabCaseName } = useWidgetName(props);\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormComponent, {\n                class: ['vxe-form-design--widget-render-form-wrapper', `widget-${kebabCaseName}`],\n                vertical: true,\n                span: 24,\n                titleBold: true,\n                titleOverflow: true,\n                data: widget.options\n            }, {\n                default() {\n                    return [\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.name')\n                        }, {\n                            default() {\n                                return h(VxeInputComponent, {\n                                    modelValue: widget.title,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.title = val;\n                                    }\n                                });\n                            }\n                        })\n                    ];\n                }\n            });\n        };\n    }\n});\n", "import { defineComponent, ref, h, inject, reactive, computed } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getConfig, getIcon, createEvent, useSize } from '../../ui';\nexport default defineComponent({\n    name: 'VxeRate',\n    props: {\n        modelValue: [Number, String],\n        disabled: {\n            type: Boolean,\n            default: null\n        },\n        readonly: {\n            type: Boolean,\n            default: null\n        },\n        size: {\n            type: String,\n            default: () => getConfig().rate.size || getConfig().size\n        },\n        status: String\n    },\n    emits: [\n        'update:modelValue',\n        'change'\n    ],\n    setup(props, context) {\n        const { emit } = context;\n        const $xeForm = inject('$xeForm', null);\n        const formItemInfo = inject('xeFormItemInfo', null);\n        const xID = XEUtils.uniqueId();\n        const { computeSize } = useSize(props);\n        const refElem = ref();\n        const reactData = reactive({\n            activeValue: null\n        });\n        const refMaps = {\n            refElem\n        };\n        const computeIsDisabled = computed(() => {\n            const { disabled } = props;\n            if (disabled === null) {\n                if ($xeForm) {\n                    return $xeForm.props.readonly || $xeForm.props.disabled;\n                }\n                return false;\n            }\n            return disabled;\n        });\n        const computeIsReadonly = computed(() => {\n            const { readonly } = props;\n            if (readonly === null) {\n                if ($xeForm) {\n                    return $xeForm.props.readonly || $xeForm.props.disabled;\n                }\n                return false;\n            }\n            return readonly;\n        });\n        const computeNumVal = computed(() => {\n            const { modelValue } = props;\n            const { activeValue } = reactData;\n            return XEUtils.toNumber(activeValue === null ? modelValue : activeValue);\n        });\n        const computeItemList = computed(() => {\n            return [1, 2, 3, 4, 5].map(num => {\n                return {\n                    value: num,\n                    label: num\n                };\n            });\n        });\n        const computeMaps = {};\n        const $xeRate = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $rate: $xeRate }, params));\n        };\n        const collapsePaneMethods = {\n            dispatchEvent\n        };\n        const collapsePanePrivateMethods = {};\n        const emitModel = (value) => {\n            emit('update:modelValue', value);\n        };\n        const mouseenterEvent = (evnt, item) => {\n            const isDisabled = computeIsDisabled.value;\n            const isReadonly = computeIsReadonly.value;\n            if (!(isDisabled || isReadonly)) {\n                const value = item.value;\n                reactData.activeValue = value;\n            }\n        };\n        const mouseleaveEvent = () => {\n            reactData.activeValue = null;\n        };\n        const clickEvent = (evnt, item) => {\n            const isDisabled = computeIsDisabled.value;\n            const isReadonly = computeIsReadonly.value;\n            if (!(isDisabled || isReadonly)) {\n                const value = item.value;\n                emitModel(value);\n                dispatchEvent('change', { value }, evnt);\n                // 自动更新校验状态\n                if ($xeForm && formItemInfo) {\n                    $xeForm.triggerItemEvent(evnt, formItemInfo.itemConfig.field, value);\n                }\n            }\n        };\n        Object.assign($xeRate, collapsePaneMethods, collapsePanePrivateMethods);\n        const renderVN = () => {\n            const { status } = props;\n            const isDisabled = computeIsDisabled.value;\n            const isReadonly = computeIsReadonly.value;\n            const itemList = computeItemList.value;\n            const vSize = computeSize.value;\n            const numVal = computeNumVal.value;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-rate', {\n                        [`size--${vSize}`]: vSize,\n                        [`theme--${status}`]: status,\n                        'is--disabled': isDisabled,\n                        'is--readonly': isReadonly\n                    }]\n            }, itemList.map(item => {\n                const isChecked = numVal >= item.value;\n                return h('div', {\n                    class: ['vxe-rte--item', {\n                            'is--checked': isChecked\n                        }],\n                    onMouseenter(evnt) {\n                        if (!(isDisabled || isReadonly)) {\n                            mouseenterEvent(evnt, item);\n                        }\n                    },\n                    onMouseleave: mouseleaveEvent,\n                    onClick(evnt) {\n                        if (!(isDisabled || isReadonly)) {\n                            clickEvent(evnt, item);\n                        }\n                    }\n                }, [\n                    h('i', {\n                        class: isChecked ? getIcon().RATE_CHECKED : getIcon().RATE_UNCHECKED\n                    })\n                ]);\n            }));\n        };\n        $xeRate.renderVN = renderVN;\n        return $xeRate;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { defineComponent, h, inject } from 'vue';\nimport { useWidgetName } from '../src/use';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeRateComponent from '../../rate/src/rate';\nexport const WidgetVxeRateViewComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const $xeFormView = inject('$xeFormView', null);\n        const { computeKebabCaseName } = useWidgetName(props);\n        const changeEvent = () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            if ($xeFormView) {\n                const itemValue = $xeFormView ? $xeFormView.getItemValue(widget) : null;\n                $xeFormView.updateWidgetStatus(widget, itemValue);\n            }\n        };\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormItemComponent, {\n                class: ['vxe-form-design--widget-render-form-item', `widget-${kebabCaseName}`],\n                field: widget.field,\n                title: widget.title,\n                itemRender: {}\n            }, {\n                default() {\n                    return h(VxeRateComponent, {\n                        modelValue: $xeFormView ? $xeFormView.getItemValue(widget) : null,\n                        onChange: changeEvent,\n                        'onUpdate:modelValue'(val) {\n                            if ($xeFormView) {\n                                $xeFormView.setItemValue(widget, val);\n                            }\n                        }\n                    });\n                }\n            });\n        };\n    }\n});\n", "import { handleGetFormDesignWidgetName } from '../render/util';\nexport const getWidgetVxeSliderConfig = () => {\n    return {\n        title: handleGetFormDesignWidgetName,\n        icon: 'vxe-icon-slider',\n        query: true,\n        options: {}\n    };\n};\n", "import { defineComponent, h } from 'vue';\nimport { getI18n } from '@vxe-ui/core';\nimport { useWidgetName } from '../src/use';\nimport VxeFormComponent from '../../form/src/form';\nimport VxeInputComponent from '../../input/src/input';\nimport VxeFormItemComponent from '../../form/src/form-item';\nexport const WidgetVxeSliderFormComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const { computeKebabCaseName } = useWidgetName(props);\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormComponent, {\n                class: ['vxe-form-design--widget-render-form-wrapper', `widget-${kebabCaseName}`],\n                vertical: true,\n                span: 24,\n                titleBold: true,\n                titleOverflow: true,\n                data: widget.options\n            }, {\n                default() {\n                    return [\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.formDesign.widgetProp.name')\n                        }, {\n                            default() {\n                                return h(VxeInputComponent, {\n                                    modelValue: widget.title,\n                                    'onUpdate:modelValue'(val) {\n                                        widget.title = val;\n                                    }\n                                });\n                            }\n                        })\n                    ];\n                }\n            });\n        };\n    }\n});\n", "import { defineComponent, ref, h, reactive, watch, computed, inject, onMounted } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getConfig, createEvent, renderEmptyElement, useSize } from '../../ui';\nexport default defineComponent({\n    name: 'VxeSlider',\n    props: {\n        modelValue: [String, Number, Array],\n        vertical: Boolean,\n        max: {\n            type: [String, Number],\n            default: () => getConfig().slider.max\n        },\n        min: {\n            type: [String, Number],\n            default: () => getConfig().slider.min\n        },\n        step: {\n            type: [String, Number],\n            default: () => getConfig().slider.step\n        },\n        size: {\n            type: String,\n            default: () => getConfig().slider.size || getConfig().size\n        },\n        range: {\n            type: Boolean,\n            default: () => getConfig().slider.range\n        },\n        readonly: {\n            type: Boolean,\n            default: null\n        },\n        disabled: {\n            type: Boolean,\n            default: null\n        }\n    },\n    emits: [\n        'update:modelValue',\n        'change'\n    ],\n    setup(props, context) {\n        const { emit } = context;\n        const $xeForm = inject('$xeForm', null);\n        const formItemInfo = inject('xeFormItemInfo', null);\n        const xID = XEUtils.uniqueId();\n        const { computeSize } = useSize(props);\n        const refElem = ref();\n        const refBarElem = ref();\n        const refTrackElem = ref();\n        const refStartBtnElem = ref();\n        const refEndBtnElem = ref();\n        const reactData = reactive({\n            startValue: 0,\n            endValue: 0\n        });\n        const refMaps = {\n            refElem\n        };\n        const computeFormReadonly = computed(() => {\n            const { readonly } = props;\n            if (readonly === null) {\n                if ($xeForm) {\n                    return $xeForm.props.readonly;\n                }\n                return false;\n            }\n            return readonly;\n        });\n        const computeIsDisabled = computed(() => {\n            const { disabled } = props;\n            if (disabled === null) {\n                if ($xeForm) {\n                    return $xeForm.props.disabled;\n                }\n                return false;\n            }\n            return disabled;\n        });\n        const computeMaxNum = computed(() => {\n            return XEUtils.toNumber(props.max || 0);\n        });\n        const computeMinNum = computed(() => {\n            return XEUtils.toNumber(props.min || 0);\n        });\n        const computeMaps = {};\n        const $xeSlider = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const emitModel = (value) => {\n            emit('update:modelValue', value);\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $slider: $xeSlider }, params));\n        };\n        const collapsePaneMethods = {\n            dispatchEvent\n        };\n        const getStartPercent = (startValue) => {\n            const { range } = props;\n            const maxNum = computeMaxNum.value;\n            const minNum = computeMinNum.value;\n            return range ? XEUtils.floor((startValue - minNum) / XEUtils.toNumber(maxNum - minNum) * 100) : 0;\n        };\n        const getEndPercent = (startValue, endValue) => {\n            const { range } = props;\n            const maxNum = computeMaxNum.value;\n            const minNum = computeMinNum.value;\n            return XEUtils.floor((endValue - (range ? startValue : 0) - minNum) / XEUtils.toNumber(maxNum - minNum) * 100);\n        };\n        const updateModel = () => {\n            const { modelValue } = props;\n            if (XEUtils.isArray(modelValue)) {\n                const [sVal, eVal] = XEUtils.clone(modelValue, true).sort();\n                reactData.startValue = XEUtils.floor(XEUtils.toNumber(sVal || 0));\n                reactData.endValue = XEUtils.floor(XEUtils.toNumber(eVal || 0));\n            }\n            else {\n                reactData.startValue = 0;\n                reactData.endValue = XEUtils.floor(XEUtils.toNumber(modelValue || 0));\n            }\n        };\n        const updateBarStyle = () => {\n            const { startValue, endValue } = reactData;\n            const trackElem = refTrackElem.value;\n            const startBtnElem = refStartBtnElem.value;\n            const endBtnElem = refEndBtnElem.value;\n            let startPercent = 0;\n            let endPercent = 0;\n            if (startValue > endValue) {\n                startPercent = getStartPercent(endValue);\n                endPercent = getEndPercent(endValue, startValue);\n            }\n            else {\n                startPercent = getStartPercent(startValue);\n                endPercent = getEndPercent(startValue, endValue);\n            }\n            if (trackElem) {\n                trackElem.style.left = `${startPercent}%`;\n                trackElem.style.width = `${endPercent}%`;\n            }\n            if (startBtnElem) {\n                startBtnElem.style.left = `${startPercent}%`;\n            }\n            if (endBtnElem) {\n                endBtnElem.style.left = `${XEUtils.floor(startPercent + endPercent)}%`;\n            }\n        };\n        const changeEvent = (evnt) => {\n            const { range } = props;\n            const { startValue, endValue } = reactData;\n            const value = range ? [startValue, endValue].sort() : endValue;\n            emitModel(value);\n            dispatchEvent('change', { value }, evnt);\n            // 自动更新校验状态\n            if ($xeForm && formItemInfo) {\n                $xeForm.triggerItemEvent(evnt, formItemInfo.itemConfig.field, value);\n            }\n        };\n        const handleMousedownEvent = (evnt, isEnd) => {\n            const formReadonly = computeFormReadonly.value;\n            const isDisabled = computeIsDisabled.value;\n            const maxNum = computeMaxNum.value;\n            const minNum = computeMinNum.value;\n            if (!(formReadonly || isDisabled)) {\n                evnt.preventDefault();\n                document.onmousemove = evnt => {\n                    evnt.preventDefault();\n                    const el = refElem.value;\n                    const barElem = refBarElem.value;\n                    if (el && barElem) {\n                        const barRect = barElem.getBoundingClientRect();\n                        const trackWidth = (evnt.clientX - barRect.left) / barRect.width;\n                        if (isEnd) {\n                            reactData.endValue = XEUtils.floor(Math.max(minNum, Math.min(maxNum, trackWidth * (maxNum - minNum) + minNum)));\n                        }\n                        else {\n                            reactData.startValue = XEUtils.floor(Math.max(minNum, Math.min(maxNum, trackWidth * (maxNum - minNum))));\n                        }\n                    }\n                    updateBarStyle();\n                };\n                document.onmouseup = (evnt) => {\n                    document.onmousemove = null;\n                    document.onmouseup = null;\n                    changeEvent(evnt);\n                    updateBarStyle();\n                };\n            }\n        };\n        const handleStartMousedownEvent = (evnt) => {\n            const endBtnElem = refEndBtnElem.value;\n            const startBtnElem = evnt.currentTarget;\n            handleMousedownEvent(evnt, endBtnElem ? endBtnElem.offsetLeft < startBtnElem.offsetLeft : false);\n        };\n        const handleEndMousedownEvent = (evnt) => {\n            const startBtnElem = refStartBtnElem.value;\n            const endBtnElem = evnt.currentTarget;\n            handleMousedownEvent(evnt, startBtnElem ? endBtnElem.offsetLeft > startBtnElem.offsetLeft : true);\n        };\n        const collapsePanePrivateMethods = {};\n        Object.assign($xeSlider, collapsePaneMethods, collapsePanePrivateMethods);\n        const renderVN = () => {\n            const { vertical, range } = props;\n            const vSize = computeSize.value;\n            const formReadonly = computeFormReadonly.value;\n            const isDisabled = computeIsDisabled.value;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-slider', {\n                        [`size--${vSize}`]: vSize,\n                        'is--vertical': vertical,\n                        'is--readonly': formReadonly,\n                        'is--disabled': isDisabled\n                    }]\n            }, [\n                h('div', {\n                    class: 'vxe-slider--inner'\n                }, [\n                    h('div', {\n                        ref: refBarElem,\n                        class: 'vxe-slider--bar-wrapper'\n                    }),\n                    h('div', {\n                        ref: refTrackElem,\n                        class: 'vxe-slider--bar-track'\n                    }),\n                    formReadonly || !range\n                        ? renderEmptyElement($xeSlider)\n                        : h('div', {\n                            ref: refStartBtnElem,\n                            class: 'vxe-slider--bar-btn vxe-slider--start-btn',\n                            onMousedown: handleStartMousedownEvent\n                        }),\n                    formReadonly\n                        ? renderEmptyElement($xeSlider)\n                        : h('div', {\n                            ref: refEndBtnElem,\n                            class: 'vxe-slider--bar-btn vxe-slider--end-btn',\n                            onMousedown: handleEndMousedownEvent\n                        })\n                ])\n            ]);\n        };\n        watch(() => props.modelValue, () => {\n            updateModel();\n        });\n        onMounted(() => {\n            updateBarStyle();\n        });\n        updateModel();\n        $xeSlider.renderVN = renderVN;\n        return $xeSlider;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { defineComponent, h, inject } from 'vue';\nimport { useWidgetName } from '../src/use';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeSliderComponent from '../../slider/src/slider';\nexport const WidgetVxeSliderViewComponent = defineComponent({\n    props: {\n        renderOpts: {\n            type: Object,\n            default: () => ({})\n        },\n        renderParams: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    emits: [],\n    setup(props) {\n        const $xeFormView = inject('$xeFormView', null);\n        const { computeKebabCaseName } = useWidgetName(props);\n        const changeEvent = () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            if ($xeFormView) {\n                const itemValue = $xeFormView ? $xeFormView.getItemValue(widget) : null;\n                $xeFormView.updateWidgetStatus(widget, itemValue);\n            }\n        };\n        return () => {\n            const { renderParams } = props;\n            const { widget } = renderParams;\n            const kebabCaseName = computeKebabCaseName.value;\n            return h(VxeFormItemComponent, {\n                class: ['vxe-form-design--widget-render-form-item', `widget-${kebabCaseName}`],\n                field: widget.field,\n                title: widget.title,\n                itemRender: {}\n            }, {\n                default() {\n                    return h(VxeSliderComponent, {\n                        modelValue: $xeFormView ? $xeFormView.getItemValue(widget) : null,\n                        onChange: changeEvent,\n                        'onUpdate:modelValue'(val) {\n                            if ($xeFormView) {\n                                $xeFormView.setItemValue(widget, val);\n                            }\n                        }\n                    });\n                }\n            });\n        };\n    }\n});\n", "import { h } from 'vue';\nimport { renderer } from '@vxe-ui/core';\nimport { getWidgetTextConfig, WidgetTextViewComponent, WidgetTextFormComponent } from '../widget-text';\nimport { getWidgetRowConfig, WidgetRowEditComponent, WidgetRowViewComponent, WidgetRowFormComponent } from '../widget-row';\nimport { getWidgetSubtableConfig, WidgetSubtableEditComponent, WidgetSubtableViewComponent, WidgetSubtableFormComponent } from '../widget-subtable';\nimport { getWidgetInputConfig, WidgetInputViewComponent, WidgetInputFormComponent } from '../widget-input';\nimport { getWidgetTextareaConfig, WidgetTextareaViewComponent, WidgetTextareaFormComponent } from '../widget-textarea';\nimport { getWidgetSelectConfig, WidgetSelectViewComponent, WidgetSelectFormComponent } from '../widget-select';\nimport { getWidgetVxeInputConfig, WidgetVxeInputViewComponent, WidgetVxeInputFormComponent } from '../widget-vxe-input';\nimport { getWidgetVxeNumberInputConfig, WidgetVxeNumberInputViewComponent, WidgetVxeNumberInputFormComponent } from '../widget-vxe-number-input';\nimport { getWidgetVxeDatePickerConfig, WidgetVxeDatePickerViewComponent, WidgetVxeDatePickerFormComponent } from '../widget-vxe-date-picker';\nimport { getWidgetVxeTextareaConfig, WidgetVxeTextareaViewComponent, WidgetVxeTextareaFormComponent } from '../widget-vxe-textarea';\nimport { getWidgetVxeSwitchConfig, WidgetVxeSwitchViewComponent, WidgetVxeSwitchFormComponent } from '../widget-vxe-switch';\nimport { getWidgetVxeSelectConfig, WidgetVxeSelectViewComponent, WidgetVxeSelectFormComponent } from '../widget-vxe-select';\nimport { getWidgetVxeTreeSelectConfig, WidgetVxeTreeSelectViewComponent, WidgetVxeTreeSelectFormComponent } from '../widget-vxe-tree-select';\nimport { getWidgetVxeRadioGroupConfig, WidgetVxeRadioGroupViewComponent, WidgetVxeRadioGroupFormComponent } from '../widget-vxe-radio-group';\nimport { getWidgetVxeCheckboxGroupConfig, WidgetVxeCheckboxGroupViewComponent, WidgetVxeCheckboxGroupFormComponent } from '../widget-vxe-checkbox-group';\nimport { getWidgetVxeUploadFileConfig, WidgetVxeUploadFileViewComponent, WidgetVxeUploadFileFormComponent } from '../widget-vxe-upload-file';\nimport { getWidgetVxeUploadImageConfig, WidgetVxeUploadImageViewComponent, WidgetVxeUploadImageFormComponent } from '../widget-vxe-upload-image';\nimport { getWidgetVxeRateConfig, WidgetVxeRateViewComponent, WidgetVxeRateFormComponent } from '../widget-vxe-rate';\nimport { getWidgetVxeSliderConfig, WidgetVxeSliderViewComponent, WidgetVxeSliderFormComponent } from '../widget-vxe-slider';\n/**\n * 表单设计器 - 渲染器\n */\nrenderer.mixin({\n    text: {\n        createFormDesignWidgetConfig: getWidgetTextConfig,\n        renderFormDesignWidgetView(renderOpts, renderParams) {\n            return h(WidgetTextViewComponent, { renderOpts, renderParams });\n        },\n        renderFormDesignWidgetFormView(renderOpts, renderParams) {\n            return h(WidgetTextFormComponent, { renderOpts, renderParams });\n        }\n    },\n    /**\n     * 已废弃\n     */\n    title: {\n        createFormDesignWidgetConfig: getWidgetTextConfig,\n        renderFormDesignWidgetView(renderOpts, renderParams) {\n            return h(WidgetTextViewComponent, { renderOpts, renderParams });\n        },\n        renderFormDesignWidgetFormView(renderOpts, renderParams) {\n            return h(WidgetTextFormComponent, { renderOpts, renderParams });\n        }\n    },\n    row: {\n        createFormDesignWidgetConfig: getWidgetRowConfig,\n        renderFormDesignWidgetEdit(renderOpts, renderParams) {\n            return h(WidgetRowEditComponent, { renderOpts, renderParams });\n        },\n        renderFormDesignWidgetView(renderOpts, renderParams) {\n            return h(WidgetRowViewComponent, { renderOpts, renderParams });\n        },\n        renderFormDesignWidgetFormView(renderOpts, renderParams) {\n            return h(WidgetRowFormComponent, { renderOpts, renderParams });\n        }\n    },\n    subtable: {\n        createFormDesignWidgetConfig: getWidgetSubtableConfig,\n        renderFormDesignWidgetEdit(renderOpts, renderParams) {\n            return h(WidgetSubtableEditComponent, { renderOpts, renderParams });\n        },\n        renderFormDesignWidgetView(renderOpts, renderParams) {\n            return h(WidgetSubtableViewComponent, { renderOpts, renderParams });\n        },\n        renderFormDesignWidgetFormView(renderOpts, renderParams) {\n            return h(WidgetSubtableFormComponent, { renderOpts, renderParams });\n        }\n    },\n    input: {\n        createFormDesignWidgetConfig: getWidgetInputConfig,\n        renderFormDesignWidgetView(renderOpts, renderParams) {\n            return h(WidgetInputViewComponent, { renderOpts, renderParams });\n        },\n        renderFormDesignWidgetFormView(renderOpts, renderParams) {\n            return h(WidgetInputFormComponent, { renderOpts, renderParams });\n        }\n    },\n    textarea: {\n        createFormDesignWidgetConfig: getWidgetTextareaConfig,\n        renderFormDesignWidgetView(renderOpts, renderParams) {\n            return h(WidgetTextareaViewComponent, { renderOpts, renderParams });\n        },\n        renderFormDesignWidgetFormView(renderOpts, renderParams) {\n            return h(WidgetTextareaFormComponent, { renderOpts, renderParams });\n        }\n    },\n    select: {\n        createFormDesignWidgetConfig: getWidgetSelectConfig,\n        renderFormDesignWidgetView(renderOpts, renderParams) {\n            return h(WidgetSelectViewComponent, { renderOpts, renderParams });\n        },\n        renderFormDesignWidgetFormView(renderOpts, renderParams) {\n            return h(WidgetSelectFormComponent, { renderOpts, renderParams });\n        }\n    },\n    VxeInput: {\n        createFormDesignWidgetConfig: getWidgetVxeInputConfig,\n        renderFormDesignWidgetView(renderOpts, renderParams) {\n            return h(WidgetVxeInputViewComponent, { renderOpts, renderParams });\n        },\n        renderFormDesignWidgetFormView(renderOpts, renderParams) {\n            return h(WidgetVxeInputFormComponent, { renderOpts, renderParams });\n        }\n    },\n    VxeNumberInput: {\n        createFormDesignWidgetConfig: getWidgetVxeNumberInputConfig,\n        renderFormDesignWidgetView(renderOpts, renderParams) {\n            return h(WidgetVxeNumberInputViewComponent, { renderOpts, renderParams });\n        },\n        renderFormDesignWidgetFormView(renderOpts, renderParams) {\n            return h(WidgetVxeNumberInputFormComponent, { renderOpts, renderParams });\n        }\n    },\n    VxeDatePicker: {\n        createFormDesignWidgetConfig: getWidgetVxeDatePickerConfig,\n        renderFormDesignWidgetView(renderOpts, renderParams) {\n            return h(WidgetVxeDatePickerViewComponent, { renderOpts, renderParams });\n        },\n        renderFormDesignWidgetFormView(renderOpts, renderParams) {\n            return h(WidgetVxeDatePickerFormComponent, { renderOpts, renderParams });\n        }\n    },\n    VxeTextarea: {\n        createFormDesignWidgetConfig: getWidgetVxeTextareaConfig,\n        renderFormDesignWidgetView(renderOpts, renderParams) {\n            return h(WidgetVxeTextareaViewComponent, { renderOpts, renderParams });\n        },\n        renderFormDesignWidgetFormView(renderOpts, renderParams) {\n            return h(WidgetVxeTextareaFormComponent, { renderOpts, renderParams });\n        }\n    },\n    VxeSwitch: {\n        createFormDesignWidgetConfig: getWidgetVxeSwitchConfig,\n        renderFormDesignWidgetView(renderOpts, renderParams) {\n            return h(WidgetVxeSwitchViewComponent, { renderOpts, renderParams });\n        },\n        renderFormDesignWidgetFormView(renderOpts, renderParams) {\n            return h(WidgetVxeSwitchFormComponent, { renderOpts, renderParams });\n        }\n    },\n    VxeSelect: {\n        createFormDesignWidgetConfig: getWidgetVxeSelectConfig,\n        renderFormDesignWidgetView(renderOpts, renderParams) {\n            return h(WidgetVxeSelectViewComponent, { renderOpts, renderParams });\n        },\n        renderFormDesignWidgetFormView(renderOpts, renderParams) {\n            return h(WidgetVxeSelectFormComponent, { renderOpts, renderParams });\n        }\n    },\n    VxeTreeSelect: {\n        createFormDesignWidgetConfig: getWidgetVxeTreeSelectConfig,\n        renderFormDesignWidgetView(renderOpts, renderParams) {\n            return h(WidgetVxeTreeSelectViewComponent, { renderOpts, renderParams });\n        },\n        renderFormDesignWidgetFormView(renderOpts, renderParams) {\n            return h(WidgetVxeTreeSelectFormComponent, { renderOpts, renderParams });\n        }\n    },\n    VxeRadioGroup: {\n        createFormDesignWidgetConfig: getWidgetVxeRadioGroupConfig,\n        renderFormDesignWidgetView(renderOpts, renderParams) {\n            return h(WidgetVxeRadioGroupViewComponent, { renderOpts, renderParams });\n        },\n        renderFormDesignWidgetFormView(renderOpts, renderParams) {\n            return h(WidgetVxeRadioGroupFormComponent, { renderOpts, renderParams });\n        }\n    },\n    VxeCheckboxGroup: {\n        createFormDesignWidgetConfig: getWidgetVxeCheckboxGroupConfig,\n        renderFormDesignWidgetView(renderOpts, renderParams) {\n            return h(WidgetVxeCheckboxGroupViewComponent, { renderOpts, renderParams });\n        },\n        renderFormDesignWidgetFormView(renderOpts, renderParams) {\n            return h(WidgetVxeCheckboxGroupFormComponent, { renderOpts, renderParams });\n        }\n    },\n    VxeUploadFile: {\n        createFormDesignWidgetConfig: getWidgetVxeUploadFileConfig,\n        renderFormDesignWidgetView(renderOpts, renderParams) {\n            return h(WidgetVxeUploadFileViewComponent, { renderOpts, renderParams });\n        },\n        renderFormDesignWidgetFormView(renderOpts, renderParams) {\n            return h(WidgetVxeUploadFileFormComponent, { renderOpts, renderParams });\n        }\n    },\n    VxeUploadImage: {\n        createFormDesignWidgetConfig: getWidgetVxeUploadImageConfig,\n        renderFormDesignWidgetView(renderOpts, renderParams) {\n            return h(WidgetVxeUploadImageViewComponent, { renderOpts, renderParams });\n        },\n        renderFormDesignWidgetFormView(renderOpts, renderParams) {\n            return h(WidgetVxeUploadImageFormComponent, { renderOpts, renderParams });\n        }\n    },\n    VxeRate: {\n        createFormDesignWidgetConfig: getWidgetVxeRateConfig,\n        renderFormDesignWidgetView(renderOpts, renderParams) {\n            return h(WidgetVxeRateViewComponent, { renderOpts, renderParams });\n        },\n        renderFormDesignWidgetFormView(renderOpts, renderParams) {\n            return h(WidgetVxeRateFormComponent, { renderOpts, renderParams });\n        }\n    },\n    VxeSlider: {\n        createFormDesignWidgetConfig: getWidgetVxeSliderConfig,\n        renderFormDesignWidgetView(renderOpts, renderParams) {\n            return h(WidgetVxeSliderViewComponent, { renderOpts, renderParams });\n        },\n        renderFormDesignWidgetFormView(renderOpts, renderParams) {\n            return h(WidgetVxeSliderFormComponent, { renderOpts, renderParams });\n        }\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeFormDesignComponent from './src/form-design';\nimport { useWidgetView, useWidgetName, useSubtableView, useWidgetPropDataSource } from './src/use';\nimport { dynamicApp } from '../dynamics';\nimport './render';\nexport const VxeFormDesign = Object.assign({}, VxeFormDesignComponent, {\n    install(app) {\n        app.component(VxeFormDesignComponent.name, VxeFormDesignComponent);\n    }\n});\nconst formDesignHandle = {\n    useWidgetName,\n    useWidgetView,\n    useSubtableView,\n    useWidgetPropDataSource\n};\ndynamicApp.use(VxeFormDesign);\nVxeUI.component(VxeFormDesignComponent);\nVxeUI.formDesignHandle = formDesignHandle;\n/**\n * 已废弃，请使用 formDesignHandle\n * @deprecated\n */\nVxeUI.formDesign = formDesignHandle;\nexport const FormDesign = VxeFormDesign;\nexport default VxeFormDesign;\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeFormGroupComponent from '../form/src/form-group';\nimport { dynamicApp } from '../dynamics';\nconst VxeFormGatherComponent = Object.assign({}, VxeFormGroupComponent, { name: 'VxeFormGather' });\n/**\n * 已废弃，被 VxeFormGather 替换\n * @deprecated\n */\nexport const VxeFormGather = Object.assign(VxeFormGatherComponent, {\n    install(app) {\n        app.component(VxeFormGatherComponent.name, VxeFormGatherComponent);\n    }\n});\ndynamicApp.use(VxeFormGather);\nVxeUI.component(VxeFormGatherComponent);\n/**\n * 已废弃，被 FormGroup 替换\n * @deprecated\n */\nexport const FormGather = VxeFormGather;\nexport default VxeFormGather;\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeFormGroupComponent from '../form/src/form-group';\nimport { dynamicApp } from '../dynamics';\nexport const VxeFormGroup = Object.assign(VxeFormGroupComponent, {\n    install(app) {\n        app.component(VxeFormGroupComponent.name, VxeFormGroupComponent);\n    }\n});\ndynamicApp.use(VxeFormGroup);\nVxeUI.component(VxeFormGroupComponent);\nexport const FormGroup = VxeFormGroup;\nexport default VxeFormGroup;\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeFormItemComponent from '../form/src/form-item';\nimport { dynamicApp } from '../dynamics';\nexport const VxeFormItem = Object.assign(VxeFormItemComponent, {\n    install(app) {\n        app.component(VxeFormItemComponent.name, VxeFormItemComponent);\n    }\n});\ndynamicApp.use(VxeFormItem);\nVxeUI.component(VxeFormItemComponent);\nexport const FormItem = VxeFormItem;\nexport default VxeFormItem;\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeFormViewComponent from '../form-design/src/form-view';\nimport { dynamicApp } from '../dynamics';\nexport const VxeFormView = Object.assign(VxeFormViewComponent, {\n    install: function (app) {\n        app.component(VxeFormViewComponent.name, VxeFormViewComponent);\n    }\n});\ndynamicApp.use(VxeFormView);\nVxeUI.component(VxeFormViewComponent);\nexport const FormView = VxeFormView;\nexport default VxeFormView;\n", "import { defineComponent, h, Teleport, ref, inject, watch, computed, provide, onUnmounted, reactive, nextTick, onMounted, createCommentVNode } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getConfig, getIcon, getI18n, globalEvents, createEvent, useSize, GLOBAL_EVENT_KEYS } from '../../ui';\nimport { getEventTargetNode, getAbsolutePos } from '../../ui/src/dom';\nimport { getLastZIndex, nextZIndex, getFuncText } from '../../ui/src/utils';\nexport default defineComponent({\n    name: 'VxeIconPicker',\n    props: {\n        modelValue: String,\n        placeholder: String,\n        clearable: Boolean,\n        size: {\n            type: String,\n            default: () => getConfig().iconPicker.size || getConfig().size\n        },\n        className: [String, Function],\n        popupClassName: [String, Function],\n        showIconTitle: {\n            type: Boolean,\n            default: () => getConfig().iconPicker.showIconTitle\n        },\n        readonly: {\n            type: Boolean,\n            default: null\n        },\n        disabled: {\n            type: Boolean,\n            default: null\n        },\n        icons: Array,\n        placement: String,\n        transfer: {\n            type: Boolean,\n            default: null\n        }\n    },\n    emits: [\n        'update:modelValue',\n        'change',\n        'clear',\n        'click'\n    ],\n    setup(props, context) {\n        const { emit } = context;\n        const $xeModal = inject('$xeModal', null);\n        const $xeDrawer = inject('$xeDrawer', null);\n        const $xeTable = inject('$xeTable', null);\n        const $xeForm = inject('$xeForm', null);\n        const formItemInfo = inject('xeFormItemInfo', null);\n        const xID = XEUtils.uniqueId();\n        const { computeSize } = useSize(props);\n        const reactData = reactive({\n            initialized: false,\n            selectIcon: `${props.modelValue || ''}`,\n            panelIndex: 0,\n            panelStyle: {},\n            panelPlacement: null,\n            visiblePanel: false,\n            isAniVisible: false,\n            isActivated: false\n        });\n        const internalData = {\n        // hpTimeout: undefined\n        };\n        const refElem = ref();\n        const refInput = ref();\n        const refOptionPanel = ref();\n        const refMaps = {\n            refElem\n        };\n        const $xeIconPicker = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps\n        };\n        let iconPickerMethods = {};\n        const computeFormReadonly = computed(() => {\n            const { readonly } = props;\n            if (readonly === null) {\n                if ($xeForm) {\n                    return $xeForm.props.readonly;\n                }\n                return false;\n            }\n            return readonly;\n        });\n        const computeIsDisabled = computed(() => {\n            const { disabled } = props;\n            if (disabled === null) {\n                if ($xeForm) {\n                    return $xeForm.props.disabled;\n                }\n                return false;\n            }\n            return disabled;\n        });\n        const computeBtnTransfer = computed(() => {\n            const { transfer } = props;\n            if (transfer === null) {\n                const globalTransfer = getConfig().iconPicker.transfer;\n                if (XEUtils.isBoolean(globalTransfer)) {\n                    return globalTransfer;\n                }\n                if ($xeTable || $xeModal || $xeDrawer || $xeForm) {\n                    return true;\n                }\n            }\n            return transfer;\n        });\n        const computeInpPlaceholder = computed(() => {\n            const { placeholder } = props;\n            if (placeholder) {\n                return getFuncText(placeholder);\n            }\n            const globalPlaceholder = getConfig().select.placeholder;\n            if (globalPlaceholder) {\n                return getFuncText(globalPlaceholder);\n            }\n            return getI18n('vxe.base.pleaseSelect');\n        });\n        const computeIconList = computed(() => {\n            let { icons } = props;\n            if (!icons || !icons.length) {\n                icons = getConfig().iconPicker.icons || [];\n            }\n            return icons.map(item => {\n                if (XEUtils.isString(item)) {\n                    return {\n                        title: item,\n                        icon: `vxe-icon-${`${item || ''}`.replace(/^vxe-icon-/, '')}`\n                    };\n                }\n                return {\n                    title: `${item.title || ''}`,\n                    icon: item.icon || ''\n                };\n            });\n        });\n        const computeIconGroupList = computed(() => {\n            const iconList = computeIconList.value;\n            return XEUtils.chunk(iconList, 4);\n        });\n        const updateZindex = () => {\n            if (reactData.panelIndex < getLastZIndex()) {\n                reactData.panelIndex = nextZIndex();\n            }\n        };\n        const updatePlacement = () => {\n            return nextTick().then(() => {\n                const { placement } = props;\n                const { panelIndex } = reactData;\n                const el = refElem.value;\n                const panelElem = refOptionPanel.value;\n                const btnTransfer = computeBtnTransfer.value;\n                if (panelElem && el) {\n                    const targetHeight = el.offsetHeight;\n                    const targetWidth = el.offsetWidth;\n                    const panelHeight = panelElem.offsetHeight;\n                    const panelWidth = panelElem.offsetWidth;\n                    const marginSize = 5;\n                    const panelStyle = {\n                        zIndex: panelIndex\n                    };\n                    const { boundingTop, boundingLeft, visibleHeight, visibleWidth } = getAbsolutePos(el);\n                    let panelPlacement = 'bottom';\n                    if (btnTransfer) {\n                        let left = boundingLeft;\n                        let top = boundingTop + targetHeight;\n                        if (placement === 'top') {\n                            panelPlacement = 'top';\n                            top = boundingTop - panelHeight;\n                        }\n                        else if (!placement) {\n                            // 如果下面不够放，则向上\n                            if (top + panelHeight + marginSize > visibleHeight) {\n                                panelPlacement = 'top';\n                                top = boundingTop - panelHeight;\n                            }\n                            // 如果上面不够放，则向下（优先）\n                            if (top < marginSize) {\n                                panelPlacement = 'bottom';\n                                top = boundingTop + targetHeight;\n                            }\n                        }\n                        // 如果溢出右边\n                        if (left + panelWidth + marginSize > visibleWidth) {\n                            left -= left + panelWidth + marginSize - visibleWidth;\n                        }\n                        // 如果溢出左边\n                        if (left < marginSize) {\n                            left = marginSize;\n                        }\n                        Object.assign(panelStyle, {\n                            left: `${left}px`,\n                            top: `${top}px`,\n                            minWidth: `${targetWidth}px`\n                        });\n                    }\n                    else {\n                        if (placement === 'top') {\n                            panelPlacement = 'top';\n                            panelStyle.bottom = `${targetHeight}px`;\n                        }\n                        else if (!placement) {\n                            // 如果下面不够放，则向上\n                            if (boundingTop + targetHeight + panelHeight > visibleHeight) {\n                                // 如果上面不够放，则向下（优先）\n                                if (boundingTop - targetHeight - panelHeight > marginSize) {\n                                    panelPlacement = 'top';\n                                    panelStyle.bottom = `${targetHeight}px`;\n                                }\n                            }\n                        }\n                    }\n                    reactData.panelStyle = panelStyle;\n                    reactData.panelPlacement = panelPlacement;\n                    return nextTick();\n                }\n            });\n        };\n        const showOptionPanel = () => {\n            const { hpTimeout } = internalData;\n            const isDisabled = computeIsDisabled.value;\n            if (!isDisabled) {\n                if (hpTimeout) {\n                    clearTimeout(hpTimeout);\n                    internalData.hpTimeout = undefined;\n                }\n                if (!reactData.initialized) {\n                    reactData.initialized = true;\n                }\n                reactData.isActivated = true;\n                reactData.isAniVisible = true;\n                setTimeout(() => {\n                    reactData.visiblePanel = true;\n                }, 10);\n                updateZindex();\n                updatePlacement();\n            }\n        };\n        const hideOptionPanel = () => {\n            reactData.visiblePanel = false;\n            internalData.hpTimeout = setTimeout(() => {\n                reactData.isAniVisible = false;\n            }, 350);\n        };\n        const changeEvent = (evnt, selectValue) => {\n            reactData.selectIcon = selectValue;\n            if (selectValue !== props.modelValue) {\n                emit('update:modelValue', selectValue);\n                dispatchEvent('change', { value: selectValue }, evnt);\n                // 自动更新校验状态\n                if ($xeForm && formItemInfo) {\n                    $xeForm.triggerItemEvent(evnt, formItemInfo.itemConfig.field, selectValue);\n                }\n            }\n        };\n        const focusEvent = () => {\n            const isDisabled = computeIsDisabled.value;\n            if (!isDisabled) {\n                if (!reactData.visiblePanel) {\n                    showOptionPanel();\n                }\n            }\n        };\n        const blurEvent = () => {\n            reactData.isActivated = false;\n        };\n        const clearValueEvent = (evnt, selectValue) => {\n            changeEvent(evnt, selectValue);\n            dispatchEvent('clear', { value: selectValue }, evnt);\n        };\n        const clearEvent = (params, evnt) => {\n            clearValueEvent(evnt, null);\n            hideOptionPanel();\n        };\n        const togglePanelEvent = (evnt) => {\n            evnt.preventDefault();\n            if (reactData.visiblePanel) {\n                hideOptionPanel();\n            }\n            else {\n                showOptionPanel();\n            }\n        };\n        const clickEvent = (evnt) => {\n            togglePanelEvent(evnt);\n            dispatchEvent('click', {}, evnt);\n        };\n        const handleGlobalMousewheelEvent = (evnt) => {\n            const { visiblePanel } = reactData;\n            const isDisabled = computeIsDisabled.value;\n            if (!isDisabled) {\n                if (visiblePanel) {\n                    const panelElem = refOptionPanel.value;\n                    if (getEventTargetNode(evnt, panelElem).flag) {\n                        updatePlacement();\n                    }\n                    else {\n                        hideOptionPanel();\n                    }\n                }\n            }\n        };\n        const handleGlobalMousedownEvent = (evnt) => {\n            const { visiblePanel } = reactData;\n            const isDisabled = computeIsDisabled.value;\n            if (!isDisabled) {\n                const el = refElem.value;\n                const panelElem = refOptionPanel.value;\n                reactData.isActivated = getEventTargetNode(evnt, el).flag || getEventTargetNode(evnt, panelElem).flag;\n                if (visiblePanel && !reactData.isActivated) {\n                    hideOptionPanel();\n                }\n            }\n        };\n        const handleGlobalKeydownEvent = (evnt) => {\n            const { clearable } = props;\n            const { visiblePanel } = reactData;\n            const isDisabled = computeIsDisabled.value;\n            if (!isDisabled) {\n                const isTab = globalEvents.hasKey(evnt, GLOBAL_EVENT_KEYS.TAB);\n                const isEnter = globalEvents.hasKey(evnt, GLOBAL_EVENT_KEYS.ENTER);\n                const isEsc = globalEvents.hasKey(evnt, GLOBAL_EVENT_KEYS.ESCAPE);\n                const isUpArrow = globalEvents.hasKey(evnt, GLOBAL_EVENT_KEYS.ARROW_UP);\n                const isDwArrow = globalEvents.hasKey(evnt, GLOBAL_EVENT_KEYS.ARROW_DOWN);\n                const isDel = globalEvents.hasKey(evnt, GLOBAL_EVENT_KEYS.DELETE);\n                const isSpacebar = globalEvents.hasKey(evnt, GLOBAL_EVENT_KEYS.SPACEBAR);\n                if (isTab) {\n                    reactData.isActivated = false;\n                }\n                if (visiblePanel) {\n                    if (isEsc || isTab) {\n                        hideOptionPanel();\n                    }\n                    else if (isEnter) {\n                        evnt.preventDefault();\n                        evnt.stopPropagation();\n                        // changeOptionEvent(evnt, currentValue, currentOption)\n                    }\n                    else if (isUpArrow || isDwArrow) {\n                        evnt.preventDefault();\n                        // let { firstOption, offsetOption } = findOffsetOption(currentValue, isUpArrow)\n                        // if (!offsetOption && !findVisibleOption(currentValue)) {\n                        //   offsetOption = firstOption\n                        // }\n                        // setCurrentOption(offsetOption)\n                        // scrollToOption(offsetOption, isDwArrow)\n                    }\n                    else if (isSpacebar) {\n                        evnt.preventDefault();\n                    }\n                }\n                else if ((isUpArrow || isDwArrow || isEnter || isSpacebar) && reactData.isActivated) {\n                    evnt.preventDefault();\n                    showOptionPanel();\n                }\n                if (reactData.isActivated) {\n                    if (isDel && clearable) {\n                        clearValueEvent(evnt, null);\n                    }\n                }\n            }\n        };\n        const handleGlobalBlurEvent = () => {\n            hideOptionPanel();\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $iconPicker: $xeIconPicker }, params));\n        };\n        iconPickerMethods = {\n            dispatchEvent,\n            isPanelVisible() {\n                return reactData.visiblePanel;\n            },\n            togglePanel() {\n                if (reactData.visiblePanel) {\n                    hideOptionPanel();\n                }\n                else {\n                    showOptionPanel();\n                }\n                return nextTick();\n            },\n            hidePanel() {\n                if (reactData.visiblePanel) {\n                    hideOptionPanel();\n                }\n                return nextTick();\n            },\n            showPanel() {\n                if (!reactData.visiblePanel) {\n                    showOptionPanel();\n                }\n                return nextTick();\n            },\n            focus() {\n                const $input = refInput.value;\n                reactData.isActivated = true;\n                if ($input) {\n                    $input.blur();\n                }\n                return nextTick();\n            },\n            blur() {\n                const $input = refInput.value;\n                if ($input) {\n                    $input.blur();\n                }\n                reactData.isActivated = false;\n                return nextTick();\n            }\n        };\n        const handleClickIconEvent = (evnt, item) => {\n            const value = item.icon;\n            changeEvent(evnt, value);\n            hideOptionPanel();\n        };\n        Object.assign($xeIconPicker, iconPickerMethods);\n        const renderIconWrapper = () => {\n            const { showIconTitle } = props;\n            const iconGroupList = computeIconGroupList.value;\n            const isDisabled = computeIsDisabled.value;\n            return h('div', {\n                class: 'vxe-ico-picker--list-wrapper'\n            }, iconGroupList.map(list => {\n                return h('div', {\n                    class: 'vxe-ico-picker--list'\n                }, list.map(item => {\n                    return h('div', {\n                        class: 'vxe-ico-picker--item',\n                        onClick(evnt) {\n                            if (!isDisabled) {\n                                handleClickIconEvent(evnt, item);\n                            }\n                        }\n                    }, [\n                        h('div', {\n                            class: 'vxe-ico-picker--item-icon'\n                        }, [\n                            h('i', {\n                                class: item.icon || ''\n                            })\n                        ]),\n                        showIconTitle\n                            ? h('div', {\n                                class: 'vxe-ico-picker--item-title'\n                            }, `${item.title || ''}`)\n                            : createCommentVNode()\n                    ]);\n                }));\n            }));\n        };\n        const renderVN = () => {\n            const { className, popupClassName, clearable } = props;\n            const { initialized, isActivated, isAniVisible, visiblePanel, selectIcon } = reactData;\n            const vSize = computeSize.value;\n            const isDisabled = computeIsDisabled.value;\n            const btnTransfer = computeBtnTransfer.value;\n            const formReadonly = computeFormReadonly.value;\n            const inpPlaceholder = computeInpPlaceholder.value;\n            if (formReadonly) {\n                return h('div', {\n                    ref: refElem,\n                    class: ['vxe-ico-picker--readonly', className]\n                }, [\n                    h('i', {\n                        class: selectIcon\n                    })\n                ]);\n            }\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-ico-picker', className ? (XEUtils.isFunction(className) ? className({ $iconPicker: $xeIconPicker }) : className) : '', {\n                        [`size--${vSize}`]: vSize,\n                        'show--clear': clearable && !isDisabled && !!selectIcon,\n                        'is--visible': visiblePanel,\n                        'is--disabled': isDisabled,\n                        'is--active': isActivated\n                    }]\n            }, [\n                h('div', {\n                    class: 'vxe-ico-picker--inner',\n                    onClick: clickEvent\n                }, [\n                    h('input', {\n                        ref: refInput,\n                        class: 'vxe-ico-picker--input',\n                        onFocus: focusEvent,\n                        onBlur: blurEvent\n                    }),\n                    selectIcon\n                        ? h('div', {\n                            class: 'vxe-ico-picker--icon'\n                        }, [\n                            h('i', {\n                                class: selectIcon\n                            })\n                        ])\n                        : h('div', {\n                            class: 'vxe-ico-picker--placeholder'\n                        }, inpPlaceholder),\n                    h('div', {\n                        class: 'vxe-ico-picker--suffix'\n                    }, [\n                        h('div', {\n                            class: 'vxe-ico-picker--clear-icon',\n                            onClick: clearEvent\n                        }, [\n                            h('i', {\n                                class: getIcon().INPUT_CLEAR\n                            })\n                        ]),\n                        h('div', {\n                            class: 'vxe-ico-picker--suffix-icon'\n                        }, [\n                            h('i', {\n                                class: visiblePanel ? getIcon().ICON_PICKER_OPEN : getIcon().ICON_PICKER_CLOSE\n                            })\n                        ])\n                    ])\n                ]),\n                h(Teleport, {\n                    to: 'body',\n                    disabled: btnTransfer ? !initialized : true\n                }, [\n                    h('div', {\n                        ref: refOptionPanel,\n                        class: ['vxe-table--ignore-clear vxe-ico-picker--panel', popupClassName ? (XEUtils.isFunction(popupClassName) ? popupClassName({ $iconPicker: $xeIconPicker }) : popupClassName) : '', {\n                                [`size--${vSize}`]: vSize,\n                                'is--transfer': btnTransfer,\n                                'ani--leave': isAniVisible,\n                                'ani--enter': visiblePanel\n                            }],\n                        placement: reactData.panelPlacement,\n                        style: reactData.panelStyle\n                    }, [\n                        initialized && (visiblePanel || isAniVisible)\n                            ? h('div', {\n                                class: 'vxe-ico-picker--panel-wrapper'\n                            }, [\n                                renderIconWrapper()\n                            ])\n                            : createCommentVNode()\n                    ])\n                ])\n            ]);\n        };\n        watch(() => props.modelValue, (val) => {\n            reactData.selectIcon = `${val || ''}`;\n        });\n        onMounted(() => {\n            globalEvents.on($xeIconPicker, 'mousewheel', handleGlobalMousewheelEvent);\n            globalEvents.on($xeIconPicker, 'mousedown', handleGlobalMousedownEvent);\n            globalEvents.on($xeIconPicker, 'keydown', handleGlobalKeydownEvent);\n            globalEvents.on($xeIconPicker, 'blur', handleGlobalBlurEvent);\n        });\n        onUnmounted(() => {\n            globalEvents.off($xeIconPicker, 'mousewheel');\n            globalEvents.off($xeIconPicker, 'mousedown');\n            globalEvents.off($xeIconPicker, 'keydown');\n            globalEvents.off($xeIconPicker, 'blur');\n        });\n        provide('$xeIconPicker', $xeIconPicker);\n        $xeIconPicker.renderVN = renderVN;\n        return $xeIconPicker;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeIconPickerComponent from './src/icon-picker';\nimport { dynamicApp } from '../dynamics';\nexport const VxeIconPicker = Object.assign(VxeIconPickerComponent, {\n    install: function (app) {\n        app.component(VxeIconPickerComponent.name, VxeIconPickerComponent);\n    }\n});\ndynamicApp.use(VxeIconPicker);\nVxeUI.component(VxeIconPickerComponent);\nexport const IconPicker = VxeIconPicker;\nexport default VxeIconPicker;\n", "import { defineComponent, ref, h, inject, reactive, computed } from 'vue';\nimport { getConfig, createEvent, useSize } from '../../ui';\nimport XEUtils from 'xe-utils';\nimport { toCssUnit } from '../../ui/src/dom';\nimport { openPreviewImage } from './util';\nexport default defineComponent({\n    name: 'VxeImage',\n    props: {\n        src: [String, Array],\n        alt: [String, Number],\n        loading: String,\n        title: [String, Number],\n        width: [String, Number],\n        height: [String, Number],\n        circle: Boolean,\n        maskClosable: {\n            type: Boolean,\n            default: () => getConfig().image.maskClosable\n        },\n        showPreview: {\n            type: Boolean,\n            default: () => getConfig().image.showPreview\n        },\n        showPrintButton: {\n            type: Boolean,\n            default: () => getConfig().image.showPrintButton\n        },\n        showDownloadButton: {\n            type: Boolean,\n            default: () => getConfig().image.showDownloadButton\n        },\n        size: { type: String, default: () => getConfig().image.size || getConfig().size }\n    },\n    emits: [\n        'click'\n    ],\n    setup(props, context) {\n        const { emit } = context;\n        const xID = XEUtils.uniqueId();\n        const $xeImageGroup = inject('$xeImageGroup', null);\n        const refElem = ref();\n        const { computeSize } = useSize(props);\n        const reactData = reactive({});\n        const refMaps = {\n            refElem\n        };\n        const computeImgStyle = computed(() => {\n            const { width, height } = props;\n            const style = {};\n            if (width && height) {\n                style.maxWidth = toCssUnit(width);\n                style.maxHeight = toCssUnit(height);\n            }\n            else {\n                if (width) {\n                    style.width = toCssUnit(width);\n                }\n                if (height) {\n                    style.height = toCssUnit(height);\n                }\n            }\n            return style;\n        });\n        const computeImgList = computed(() => {\n            const { src } = props;\n            if (src) {\n                return (XEUtils.isArray(src) ? src : [src]).map(item => {\n                    if (XEUtils.isString(item)) {\n                        return {\n                            url: item,\n                            alt: ''\n                        };\n                    }\n                    return {\n                        url: item.url,\n                        alt: item.alt\n                    };\n                });\n            }\n            return [];\n        });\n        const computeImgItem = computed(() => {\n            const imgList = computeImgList.value;\n            return imgList[0];\n        });\n        const computeImgUrl = computed(() => {\n            const imgItem = computeImgItem.value;\n            return imgItem ? `${imgItem.url || ''}` : '';\n        });\n        const computeMaps = {\n            computeSize\n        };\n        const $xeImage = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const imageMethods = {\n            dispatchEvent(type, params, evnt) {\n                emit(type, createEvent(evnt, { $image: $xeImage }, params));\n            }\n        };\n        const clickEvent = (evnt) => {\n            const { showPreview, showPrintButton, showDownloadButton, maskClosable } = props;\n            const imgList = computeImgList.value;\n            const imgUrl = computeImgUrl.value;\n            if ($xeImageGroup) {\n                $xeImageGroup.handleClickImgEvent(evnt, { url: imgUrl });\n            }\n            else {\n                if (showPreview && imgUrl) {\n                    openPreviewImage({\n                        urlList: imgList,\n                        showPrintButton,\n                        showDownloadButton,\n                        maskClosable\n                    });\n                }\n                imageMethods.dispatchEvent('click', { url: imgUrl }, evnt);\n            }\n        };\n        const imagePrivateMethods = {};\n        Object.assign($xeImage, imageMethods, imagePrivateMethods);\n        const renderVN = () => {\n            const { alt, loading, circle } = props;\n            const imgStyle = computeImgStyle.value;\n            const imgUrl = computeImgUrl.value;\n            const vSize = computeSize.value;\n            return h('img', {\n                ref: refElem,\n                class: ['vxe-image', {\n                        [`size--${vSize}`]: vSize,\n                        'is--circle': circle\n                    }],\n                src: imgUrl,\n                alt,\n                loading,\n                style: imgStyle,\n                onClick: clickEvent\n            });\n        };\n        $xeImage.renderVN = renderVN;\n        return $xeImage;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { defineComponent, h, provide, ref, reactive, computed, watch, onMounted, onUnmounted, createCommentVNode, onBeforeUnmount } from 'vue';\nimport { VxeUI, getConfig, createEvent, getIcon, globalEvents, GLOBAL_EVENT_KEYS, getI18n } from '../../ui';\nimport XEUtils from 'xe-utils';\nimport { getDomNode, addClass, removeClass, hasControlKey } from '../../ui/src/dom';\nexport default defineComponent({\n    name: 'VxeImagePreview',\n    props: {\n        modelValue: Number,\n        urlList: Array,\n        urlField: {\n            type: String,\n            default: () => getConfig().imagePreview.urlField\n        },\n        maskClosable: {\n            type: Boolean,\n            default: () => getConfig().imagePreview.maskClosable\n        },\n        marginSize: {\n            type: String,\n            default: () => getConfig().imagePreview.marginSize\n        },\n        showPrintButton: {\n            type: Boolean,\n            default: () => getConfig().imagePreview.showPrintButton\n        },\n        showDownloadButton: {\n            type: Boolean,\n            default: () => getConfig().imagePreview.showDownloadButton\n        },\n        beforeDownloadMethod: Function,\n        downloadMethod: Function\n    },\n    emits: [\n        'update:modelValue',\n        'change',\n        'download',\n        'download-fail',\n        'close'\n    ],\n    setup(props, context) {\n        const { emit } = context;\n        const xID = XEUtils.uniqueId();\n        const refElem = ref();\n        const refMaps = {\n            refElem\n        };\n        const reactData = reactive({\n            activeIndex: props.modelValue || 0,\n            offsetPct11: false,\n            offsetScale: 0,\n            offsetRotate: 0,\n            offsetLeft: 0,\n            offsetTop: 0\n        });\n        const computeUrlProp = computed(() => {\n            return props.urlField || 'url';\n        });\n        const computeMarginSize = computed(() => {\n            return XEUtils.toNumber(props.marginSize || 0) || 16;\n        });\n        const computeRotateText = computed(() => {\n            const { offsetRotate } = reactData;\n            if (offsetRotate) {\n                return `${offsetRotate}°`;\n            }\n            return '0°';\n        });\n        const computeScaleText = computed(() => {\n            const { offsetScale } = reactData;\n            if (offsetScale) {\n                return `${XEUtils.ceil((1 + offsetScale) * 100)}%`;\n            }\n            return '100%';\n        });\n        const computeImgList = computed(() => {\n            const { urlList } = props;\n            const urlProp = computeUrlProp.value;\n            if (urlList && urlList.length) {\n                return urlList.map(item => {\n                    if (XEUtils.isString(item)) {\n                        return item;\n                    }\n                    if (item[urlProp]) {\n                        return item[urlProp];\n                    }\n                    return '';\n                });\n            }\n            return [];\n        });\n        const computeImgTransform = computed(() => {\n            let { offsetScale, offsetRotate, offsetLeft, offsetTop } = reactData;\n            const stys = [];\n            let targetScale = 1;\n            if (offsetScale) {\n                targetScale = 1 + offsetScale;\n                stys.push(`scale(${targetScale})`);\n            }\n            if (offsetRotate) {\n                stys.push(`rotate(${offsetRotate}deg)`);\n            }\n            if (offsetLeft || offsetTop) {\n                // 缩放与位移\n                offsetLeft /= targetScale;\n                offsetTop /= targetScale;\n                let targetOffsetLeft = offsetLeft;\n                let targetOffsetTop = offsetTop;\n                if (offsetRotate) {\n                    // 转向与位移\n                    switch (offsetRotate % 360) {\n                        case 90:\n                        case -270:\n                            targetOffsetLeft = offsetTop;\n                            targetOffsetTop = -offsetLeft;\n                            break;\n                        case 180:\n                        case -180:\n                            targetOffsetLeft = -offsetLeft;\n                            targetOffsetTop = -offsetTop;\n                            break;\n                        case 270:\n                        case -90:\n                            targetOffsetLeft = -offsetTop;\n                            targetOffsetTop = offsetLeft;\n                            break;\n                    }\n                }\n                stys.push(`translate(${targetOffsetLeft}px, ${targetOffsetTop}px)`);\n            }\n            return stys.length ? stys.join(' ') : '';\n        });\n        const computeMaps = {\n            computeImgList\n        };\n        const $xeImagePreview = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $imagePreview: $xeImagePreview }, params));\n        };\n        const imagePreviewMethods = {\n            dispatchEvent\n        };\n        const emitModel = (value) => {\n            reactData.activeIndex = value;\n            emit('update:modelValue', value);\n        };\n        const handleCloseEvent = (evnt) => {\n            dispatchEvent('close', {}, evnt);\n        };\n        const imagePreviewPrivateMethods = {};\n        const resetStyle = () => {\n            const elem = refElem.value;\n            removeClass(elem, 'is--move');\n            Object.assign(reactData, {\n                offsetPct11: false,\n                offsetScale: 0,\n                offsetRotate: 0,\n                offsetLeft: 0,\n                offsetTop: 0\n            });\n        };\n        const getOffsetZoomStep = () => {\n            const { offsetScale } = reactData;\n            let stepNum = 0.02;\n            if (offsetScale >= -0.6) {\n                stepNum = 0.04;\n                if (offsetScale >= -0.4) {\n                    stepNum = 0.07;\n                    if (offsetScale >= 0) {\n                        stepNum = 0.1;\n                        if (offsetScale >= 3) {\n                            stepNum = 0.25;\n                            if (offsetScale >= 8) {\n                                stepNum = 0.4;\n                                if (offsetScale >= 16) {\n                                    stepNum = 0.6;\n                                    if (offsetScale >= 24) {\n                                        stepNum = 0.9;\n                                        if (offsetScale >= 32) {\n                                            stepNum = 1.3;\n                                            if (offsetScale >= 39) {\n                                                stepNum = 1.9;\n                                                if (offsetScale >= 45) {\n                                                    stepNum = 2.5;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return stepNum;\n        };\n        const handleZoom = (isAdd) => {\n            const { offsetScale } = reactData;\n            const stepNum = getOffsetZoomStep();\n            if (isAdd) {\n                reactData.offsetScale = Number(Math.min(49, offsetScale + stepNum).toFixed(2));\n            }\n            else {\n                reactData.offsetScale = Number(Math.max(-0.9, offsetScale - stepNum).toFixed(2));\n            }\n        };\n        const handleChange = (isNext) => {\n            let activeIndex = reactData.activeIndex || 0;\n            const imgList = computeImgList.value;\n            if (isNext) {\n                if (activeIndex >= imgList.length - 1) {\n                    activeIndex = 0;\n                }\n                else {\n                    activeIndex++;\n                }\n            }\n            else {\n                if (activeIndex <= 0) {\n                    activeIndex = imgList.length - 1;\n                }\n                else {\n                    activeIndex--;\n                }\n            }\n            resetStyle();\n            reactData.activeIndex = activeIndex;\n            emitModel(activeIndex);\n        };\n        const handleRotateImg = (isRight) => {\n            let offsetRotate = reactData.offsetRotate;\n            if (isRight) {\n                offsetRotate += 90;\n            }\n            else {\n                offsetRotate -= 90;\n            }\n            reactData.offsetRotate = offsetRotate;\n        };\n        const handlePct11 = () => {\n            resetStyle();\n            reactData.offsetPct11 = true;\n        };\n        const handlePrintImg = () => {\n            const { activeIndex } = reactData;\n            const imgList = computeImgList.value;\n            const imgUrl = imgList[activeIndex || 0];\n            if (VxeUI.print) {\n                VxeUI.print({\n                    align: 'center',\n                    pageBreaks: [\n                        {\n                            bodyHtml: `<img src=\"${imgUrl}\" style=\"max-width:100%;max-height:100%;\">`\n                        }\n                    ]\n                });\n            }\n        };\n        const handleDownloadEvent = (evnt, imgUrl) => {\n            dispatchEvent('download', { url: imgUrl }, evnt);\n        };\n        const handleDefaultDownload = (evnt, imgUrl) => {\n            if (VxeUI.saveFile) {\n                fetch(imgUrl).then(res => {\n                    return res.blob().then(blob => {\n                        VxeUI.saveFile({\n                            filename: imgUrl,\n                            content: blob\n                        });\n                        handleDownloadEvent(evnt, imgUrl);\n                    });\n                }).catch(() => {\n                    if (VxeUI.modal) {\n                        VxeUI.modal.message({\n                            content: getI18n('vxe.error.downErr'),\n                            status: 'error'\n                        });\n                    }\n                });\n            }\n        };\n        const handleDownloadImg = (evnt) => {\n            const { activeIndex } = reactData;\n            const imgList = computeImgList.value;\n            const imgUrl = imgList[activeIndex || 0];\n            const beforeDownloadFn = props.beforeDownloadMethod || getConfig().imagePreview.beforeDownloadMethod;\n            const downloadFn = props.downloadMethod || getConfig().imagePreview.downloadMethod;\n            Promise.resolve(beforeDownloadFn\n                ? beforeDownloadFn({\n                    $imagePreview: $xeImagePreview,\n                    url: imgUrl,\n                    index: activeIndex || 0\n                })\n                : true).then(status => {\n                if (status) {\n                    if (downloadFn) {\n                        Promise.resolve(downloadFn({\n                            $imagePreview: $xeImagePreview,\n                            url: imgUrl,\n                            index: activeIndex || 0\n                        })).then(() => {\n                            handleDownloadEvent(evnt, imgUrl);\n                        }).catch(e => e);\n                    }\n                    else {\n                        handleDefaultDownload(evnt, imgUrl);\n                    }\n                }\n            });\n        };\n        const handleOperationBtn = (evnt, code) => {\n            const { activeIndex } = reactData;\n            const imgList = computeImgList.value;\n            const imgUrl = imgList[activeIndex || 0];\n            if (imgUrl) {\n                switch (code) {\n                    case 'zoomOut':\n                        handleZoom(false);\n                        break;\n                    case 'zoomIn':\n                        handleZoom(true);\n                        break;\n                    case 'pctFull':\n                        resetStyle();\n                        break;\n                    case 'pct11':\n                        handlePct11();\n                        break;\n                    case 'rotateLeft':\n                        handleRotateImg(false);\n                        break;\n                    case 'rotateRight':\n                        handleRotateImg(true);\n                        break;\n                    case 'print':\n                        handlePrintImg();\n                        break;\n                    case 'download':\n                        handleDownloadImg(evnt);\n                        break;\n                }\n            }\n        };\n        const wheelEvent = (evnt) => {\n            const delta = evnt.deltaY;\n            if (delta > 0) {\n                handleZoom(false);\n            }\n            else if (delta < 0) {\n                handleZoom(true);\n            }\n        };\n        const moveEvent = (evnt) => {\n            const { offsetTop, offsetLeft } = reactData;\n            const elem = refElem.value;\n            evnt.preventDefault();\n            const domMousemove = document.onmousemove;\n            const domMouseup = document.onmouseup;\n            const startX = evnt.pageX;\n            const startY = evnt.pageY;\n            const marginSize = computeMarginSize.value;\n            document.onmousemove = et => {\n                const { pageX, pageY } = et;\n                const { visibleHeight, visibleWidth } = getDomNode();\n                et.preventDefault();\n                addClass(elem, 'is--move');\n                // 限制边界值\n                if (pageX > marginSize && pageY > marginSize && pageX < (visibleWidth - marginSize) && pageY < (visibleHeight - marginSize)) {\n                    reactData.offsetLeft = offsetLeft + pageX - startX;\n                    reactData.offsetTop = offsetTop + pageY - startY;\n                }\n            };\n            document.onmouseup = () => {\n                document.onmousemove = domMousemove;\n                document.onmouseup = domMouseup;\n                removeClass(elem, 'is--move');\n            };\n        };\n        const handleGlobalKeydownEvent = (evnt) => {\n            const isControlKey = hasControlKey(evnt);\n            const hasShiftKey = evnt.shiftKey;\n            const isUpArrow = globalEvents.hasKey(evnt, GLOBAL_EVENT_KEYS.ARROW_UP);\n            const isDownArrow = globalEvents.hasKey(evnt, GLOBAL_EVENT_KEYS.ARROW_DOWN);\n            const isLeftArrow = globalEvents.hasKey(evnt, GLOBAL_EVENT_KEYS.ARROW_LEFT);\n            const isRightArrow = globalEvents.hasKey(evnt, GLOBAL_EVENT_KEYS.ARROW_RIGHT);\n            const isR = globalEvents.hasKey(evnt, GLOBAL_EVENT_KEYS.R);\n            const isP = globalEvents.hasKey(evnt, GLOBAL_EVENT_KEYS.P);\n            if (isUpArrow) {\n                evnt.preventDefault();\n                if (hasShiftKey) {\n                    reactData.offsetTop -= 1;\n                }\n                else {\n                    handleZoom(true);\n                }\n            }\n            else if (isDownArrow) {\n                evnt.preventDefault();\n                if (hasShiftKey) {\n                    reactData.offsetTop += 1;\n                }\n                else {\n                    handleZoom(false);\n                }\n            }\n            else if (isLeftArrow) {\n                evnt.preventDefault();\n                if (hasShiftKey) {\n                    reactData.offsetLeft -= 1;\n                }\n                else {\n                    handleChange(false);\n                }\n            }\n            else if (isRightArrow) {\n                evnt.preventDefault();\n                if (hasShiftKey) {\n                    reactData.offsetLeft += 1;\n                }\n                else {\n                    handleChange(true);\n                }\n            }\n            else if (isR && isControlKey) {\n                evnt.preventDefault();\n                if (hasShiftKey) {\n                    handleRotateImg(false);\n                }\n                else {\n                    handleRotateImg(true);\n                }\n            }\n            else if (isP && isControlKey) {\n                evnt.preventDefault();\n                handlePrintImg();\n            }\n        };\n        const handleClickMaskEvent = (evnt) => {\n            if (props.maskClosable) {\n                if (evnt.target === evnt.currentTarget) {\n                    dispatchEvent('close', {}, evnt);\n                }\n            }\n        };\n        Object.assign($xeImagePreview, imagePreviewMethods, imagePreviewPrivateMethods);\n        const renderImgWrapper = () => {\n            const { activeIndex } = reactData;\n            const imgList = computeImgList.value;\n            const imgTransform = computeImgTransform.value;\n            return h('div', {\n                class: 'vxe-image-preview--img-list',\n                onClick: handleClickMaskEvent\n            }, imgList.map((url, index) => {\n                const isActive = activeIndex === index;\n                return h('img', {\n                    class: ['vxe-image-preview--img-item', {\n                            'is--active': isActive\n                        }],\n                    src: url,\n                    style: isActive\n                        ? {\n                            transform: imgTransform\n                        }\n                        : null,\n                    onMousedown(evnt) {\n                        moveEvent(evnt);\n                    }\n                });\n            }));\n        };\n        const renderOperationBtn = (code, icon) => {\n            return h('div', {\n                class: 'vxe-image-preview--operation-btn',\n                title: getI18n(`vxe.imagePreview.operBtn.${code}`),\n                onClick(evnt) {\n                    handleOperationBtn(evnt, code);\n                }\n            }, [\n                h('i', {\n                    class: getIcon()[icon]\n                })\n            ]);\n        };\n        const renderBtnWrapper = () => {\n            const { showPrintButton, showDownloadButton } = props;\n            const { activeIndex } = reactData;\n            const imgList = computeImgList.value;\n            const rotateText = computeRotateText.value;\n            const scaleText = computeScaleText.value;\n            return h('div', {\n                class: 'vxe-image-preview--btn-wrapper'\n            }, [\n                h('div', {\n                    class: 'vxe-image-preview--close-wrapper'\n                }, [\n                    h('div', {\n                        class: 'vxe-image-preview--close-btn',\n                        onClick: handleCloseEvent\n                    }, [\n                        h('i', {\n                            class: getIcon().IMAGE_PREVIEW_CLOSE\n                        })\n                    ]),\n                    h('div', {\n                        class: 'vxe-image-preview--close-bg'\n                    })\n                ]),\n                imgList.length > 1\n                    ? h('div', {\n                        class: 'vxe-image-preview--previous-btn',\n                        onClick() {\n                            handleChange(false);\n                        }\n                    }, [\n                        h('i', {\n                            class: getIcon().IMAGE_PREVIEW_PREVIOUS\n                        })\n                    ])\n                    : createCommentVNode(),\n                imgList.length > 1\n                    ? h('div', {\n                        class: 'vxe-image-preview--next-btn',\n                        onClick() {\n                            handleChange(true);\n                        }\n                    }, [\n                        h('i', {\n                            class: getIcon().IMAGE_PREVIEW_NEXT\n                        })\n                    ])\n                    : createCommentVNode(),\n                h('div', {\n                    class: 'vxe-image-preview--operation-info'\n                }, [\n                    h('div', {\n                        class: 'vxe-image-preview--operation-deg'\n                    }, rotateText),\n                    h('div', {\n                        class: 'vxe-image-preview--operation-pct'\n                    }, scaleText)\n                ]),\n                h('div', {\n                    class: 'vxe-image-preview--operation-wrapper'\n                }, [\n                    h('div', {\n                        class: 'vxe-image-preview--operation-active-count'\n                    }, [\n                        h('span', {\n                            class: 'vxe-image-preview--operation-active-current'\n                        }, `${(activeIndex || 0) + 1}`),\n                        h('span', {\n                            class: 'vxe-image-preview--operation-active-total'\n                        }, `/${imgList.length}`)\n                    ]),\n                    renderOperationBtn('zoomOut', 'IMAGE_PREVIEW_ZOOM_OUT'),\n                    renderOperationBtn('zoomIn', 'IMAGE_PREVIEW_ZOOM_IN'),\n                    renderOperationBtn('pctFull', 'IMAGE_PREVIEW_PCT_FULL'),\n                    renderOperationBtn('pct11', 'IMAGE_PREVIEW_PCT_1_1'),\n                    renderOperationBtn('rotateLeft', 'IMAGE_PREVIEW_ROTATE_LEFT'),\n                    renderOperationBtn('rotateRight', 'IMAGE_PREVIEW_ROTATE_RIGHT'),\n                    showPrintButton ? renderOperationBtn('print', 'IMAGE_PREVIEW_PRINT') : createCommentVNode(),\n                    showDownloadButton ? renderOperationBtn('download', 'IMAGE_PREVIEW_DOWNLOAD') : createCommentVNode()\n                ])\n            ]);\n        };\n        const renderVN = () => {\n            const { offsetPct11 } = reactData;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-image-preview', {\n                        'is--pct11': offsetPct11\n                    }],\n                onWheel: wheelEvent\n            }, [\n                renderImgWrapper(),\n                renderBtnWrapper()\n            ]);\n        };\n        watch(() => props.modelValue, val => {\n            reactData.activeIndex = val;\n            resetStyle();\n        });\n        onMounted(() => {\n            globalEvents.on($xeImagePreview, 'keydown', handleGlobalKeydownEvent);\n        });\n        onBeforeUnmount(() => {\n            const elem = refElem.value;\n            if (elem) {\n                removeClass(elem, 'is--move');\n            }\n        });\n        onUnmounted(() => {\n            globalEvents.off($xeImagePreview, 'keydown');\n        });\n        provide('$xeImagePreview', $xeImagePreview);\n        $xeImagePreview.renderVN = renderVN;\n        return renderVN;\n    }\n});\n", "import { h } from 'vue';\nimport { VxeUI } from '@vxe-ui/core';\nimport VxeImagePreviewComponent from './preview';\nimport XEUtils from 'xe-utils';\nexport const openPreviewImage = (options) => {\n    if (VxeUI.modal) {\n        const opts = Object.assign({\n            escClosable: true\n        }, options);\n        const { urlList, activeIndex } = opts;\n        const modalId = XEUtils.uniqueId('image-preview');\n        VxeUI.modal.open({\n            id: modalId,\n            title: '预览',\n            width: '100%',\n            height: '100%',\n            showHeader: false,\n            showFooter: false,\n            padding: false,\n            escClosable: opts.escClosable,\n            className: 'vxe-image-preview-popup-wrapper',\n            slots: {\n                default() {\n                    return h(VxeImagePreviewComponent, {\n                        modelValue: activeIndex,\n                        urlList,\n                        urlField: opts.urlField,\n                        marginSize: opts.marginSize,\n                        maskClosable: opts.maskClosable,\n                        showPrintButton: opts.showPrintButton,\n                        showDownloadButton: opts.showDownloadButton,\n                        beforeDownloadMethod: opts.beforeDownloadMethod,\n                        downloadMethod: opts.downloadMethod,\n                        onClose() {\n                            VxeUI.modal.close(modalId);\n                        }\n                    });\n                }\n            }\n        });\n    }\n    return Promise.resolve();\n};\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeImageComponent from './src/image';\nimport { dynamicApp } from '../dynamics';\nexport const VxeImage = Object.assign({}, VxeImageComponent, {\n    install(app) {\n        app.component(VxeImageComponent.name, VxeImageComponent);\n    }\n});\ndynamicApp.use(VxeImage);\nVxeUI.component(VxeImageComponent);\nexport const Image = VxeImage;\nexport default VxeImage;\n", "import { defineComponent, computed, h, provide } from 'vue';\nimport { getConfig, createEvent, useSize } from '@vxe-ui/core';\nimport { openPreviewImage } from './util';\nimport XEUtils from 'xe-utils';\nimport VxeImageComponent from './image';\nexport default defineComponent({\n    name: 'VxeImageGroup',\n    props: {\n        urlList: [Array, String],\n        showPreview: {\n            type: Boolean,\n            default: () => getConfig().imageGroup.showPreview\n        },\n        imageStyle: Object,\n        size: { type: String, default: () => getConfig().imageGroup.size || getConfig().size },\n        showPrintButton: {\n            type: Boolean,\n            default: () => getConfig().imageGroup.showPrintButton\n        },\n        showDownloadButton: {\n            type: Boolean,\n            default: () => getConfig().imageGroup.showDownloadButton\n        }\n    },\n    emits: [\n        'click'\n    ],\n    setup(props, context) {\n        const { emit } = context;\n        const xID = XEUtils.uniqueId();\n        const { computeSize } = useSize(props);\n        const computeImgList = computed(() => {\n            const { urlList } = props;\n            if (urlList) {\n                return (XEUtils.isArray(urlList) ? urlList : [urlList]).map(item => {\n                    if (XEUtils.isString(item)) {\n                        return {\n                            url: item,\n                            alt: ''\n                        };\n                    }\n                    return {\n                        url: item.url,\n                        alt: item.alt\n                    };\n                });\n            }\n            return [];\n        });\n        const computeImgStyleOpts = computed(() => {\n            return Object.assign({}, getConfig().imageGroup.imageStyle, props.imageStyle);\n        });\n        const computeMaps = {\n            computeSize\n        };\n        const $xeImageGroup = {\n            xID,\n            props,\n            context,\n            getComputeMaps: () => computeMaps\n        };\n        const imageGroupMethods = {\n            dispatchEvent(type, params, evnt) {\n                emit(type, createEvent(evnt, { $imageGroup: $xeImageGroup }, params));\n            }\n        };\n        const imageGroupPrivateMethods = {\n            handleClickImgEvent(evnt, params) {\n                const { showPreview, showPrintButton, showDownloadButton } = props;\n                const { url } = params;\n                const imgList = computeImgList.value;\n                if (showPreview && url) {\n                    openPreviewImage({\n                        activeIndex: Math.max(0, XEUtils.findIndexOf(imgList, item => item.url === url)),\n                        urlList: imgList,\n                        showPrintButton,\n                        showDownloadButton\n                    });\n                }\n                imageGroupMethods.dispatchEvent('click', { url, urlList: imgList }, evnt);\n            }\n        };\n        Object.assign($xeImageGroup, imageGroupMethods, imageGroupPrivateMethods);\n        const renderVN = () => {\n            const imgList = computeImgList.value;\n            const vSize = computeSize.value;\n            const imgStyleOpts = computeImgStyleOpts.value;\n            return h('div', {\n                class: ['vxe-image-group', {\n                        [`size--${vSize}`]: vSize\n                    }]\n            }, imgList\n                ? imgList.map((item, index) => {\n                    return h(VxeImageComponent, {\n                        key: index,\n                        src: item.url,\n                        alt: item.alt,\n                        width: imgStyleOpts.width,\n                        height: imgStyleOpts.height\n                    });\n                })\n                : []);\n        };\n        $xeImageGroup.renderVN = renderVN;\n        provide('$xeImageGroup', $xeImageGroup);\n        return $xeImageGroup;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeImageGroupComponent from '../image/src/group';\nimport { dynamicApp } from '../dynamics';\nexport const VxeImageGroup = Object.assign({}, VxeImageGroupComponent, {\n    install(app) {\n        app.component(VxeImageGroupComponent.name, VxeImageGroupComponent);\n    }\n});\ndynamicApp.use(VxeImageGroup);\nVxeUI.component(VxeImageGroupComponent);\nexport const ImageGroup = VxeImageGroup;\nexport default VxeImageGroup;\n", "import VxeImagePreviewComponent from '../image/src/preview';\nimport { VxeUI } from '@vxe-ui/core';\nimport { dynamicApp } from '../dynamics';\nimport { openPreviewImage } from '../image/src/util';\nexport const VxeImagePreview = Object.assign(VxeImagePreviewComponent, {\n    install(app) {\n        app.component(VxeImagePreviewComponent.name, VxeImagePreviewComponent);\n        VxeUI.previewImage = openPreviewImage;\n    }\n});\ndynamicApp.use(VxeImagePreview);\nVxeUI.component(VxeImagePreviewComponent);\nexport const ImagePreview = VxeImagePreview;\nexport default VxeImagePreview;\n", "import { defineComponent, ref, h, reactive, computed, provide } from 'vue';\nimport { toCssUnit } from '../../ui/src/dom';\nimport { getConfig, useSize, createEvent } from '../../ui';\nimport VxeLoadingComponent from '../../loading/src/loading';\nimport XEUtils from 'xe-utils';\nexport default defineComponent({\n    name: 'VxeLayoutAside',\n    props: {\n        width: [String, Number],\n        collapsed: Boolean,\n        collapseWidth: [String, Number],\n        loading: Boolean,\n        padding: Boolean,\n        size: {\n            type: String,\n            default: () => getConfig().layoutAside.size || getConfig().size\n        }\n    },\n    emits: [],\n    setup(props, context) {\n        const { slots, emit } = context;\n        const xID = XEUtils.uniqueId();\n        const refElem = ref();\n        const { computeSize } = useSize(props);\n        const reactData = reactive({});\n        const refMaps = {\n            refElem\n        };\n        const computeWrapperWidth = computed(() => {\n            const { width, collapsed, collapseWidth } = props;\n            if (collapsed) {\n                if (collapseWidth) {\n                    return toCssUnit(collapseWidth);\n                }\n            }\n            else {\n                if (width) {\n                    return toCssUnit(width);\n                }\n            }\n            return '';\n        });\n        const computeMaps = {\n            computeSize\n        };\n        const $xeLayoutAside = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $layoutAside: $xeLayoutAside }, params));\n        };\n        const layoutAsideMethods = {\n            dispatchEvent\n        };\n        const layoutAsidePrivateMethods = {};\n        Object.assign($xeLayoutAside, layoutAsideMethods, layoutAsidePrivateMethods);\n        const renderVN = () => {\n            const { width, collapsed, loading, padding } = props;\n            const wrapperWidth = computeWrapperWidth.value;\n            const vSize = computeSize.value;\n            const defaultSlot = slots.default;\n            return h('aside', {\n                ref: refElem,\n                class: ['vxe-layout-aside', {\n                        [`size--${vSize}`]: vSize,\n                        'is--padding': padding,\n                        'is--default-width': !width,\n                        'is--collapse': collapsed,\n                        'is--loading': loading\n                    }],\n                style: wrapperWidth\n                    ? {\n                        width: wrapperWidth\n                    }\n                    : null\n            }, [\n                h('div', {\n                    class: 'vxe-layout-aside--inner'\n                }, defaultSlot ? defaultSlot({}) : []),\n                /**\n                 * 加载中\n                 */\n                h(VxeLoadingComponent, {\n                    class: 'vxe-list-view--loading',\n                    modelValue: loading\n                })\n            ]);\n        };\n        provide('$xeLayoutAside', $xeLayoutAside);\n        $xeLayoutAside.renderVN = renderVN;\n        return $xeLayoutAside;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeLayoutAsideComponent from './src/layout-aside';\nimport { dynamicApp } from '../dynamics';\nexport const VxeLayoutAside = Object.assign({}, VxeLayoutAsideComponent, {\n    install(app) {\n        app.component(VxeLayoutAsideComponent.name, VxeLayoutAsideComponent);\n    }\n});\ndynamicApp.use(VxeLayoutAside);\nVxeUI.component(VxeLayoutAsideComponent);\nexport const LayoutAside = VxeLayoutAside;\nexport default VxeLayoutAside;\n", "import { defineComponent, ref, h, reactive } from 'vue';\nimport { getConfig, useSize, createEvent } from '../../ui';\nimport VxeLoadingComponent from '../../loading/src/loading';\nimport XEUtils from 'xe-utils';\nexport default defineComponent({\n    name: 'VxeLayoutBody',\n    props: {\n        loading: Boolean,\n        padding: Boolean,\n        size: {\n            type: String,\n            default: () => getConfig().layoutBody.size || getConfig().size\n        }\n    },\n    emits: [],\n    setup(props, context) {\n        const { slots, emit } = context;\n        const xID = XEUtils.uniqueId();\n        const refElem = ref();\n        const { computeSize } = useSize(props);\n        const reactData = reactive({});\n        const refMaps = {\n            refElem\n        };\n        const computeMaps = {\n            computeSize\n        };\n        const $xeLayoutBody = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $layoutBody: $xeLayoutBody }, params));\n        };\n        const layoutBodyMethods = {\n            dispatchEvent\n        };\n        const layoutBodyPrivateMethods = {};\n        Object.assign($xeLayoutBody, layoutBodyMethods, layoutBodyPrivateMethods);\n        const renderVN = () => {\n            const { loading, padding } = props;\n            const vSize = computeSize.value;\n            const defaultSlot = slots.default;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-layout-body', {\n                        [`size--${vSize}`]: vSize,\n                        'is--loading': loading,\n                        'is--padding': padding\n                    }]\n            }, [\n                h('div', {\n                    class: 'vxe-layout-body--inner'\n                }, defaultSlot ? defaultSlot({}) : []),\n                /**\n                 * 加载中\n                 */\n                h(VxeLoadingComponent, {\n                    class: 'vxe-list-view--loading',\n                    modelValue: loading\n                })\n            ]);\n        };\n        $xeLayoutBody.renderVN = renderVN;\n        return $xeLayoutBody;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeLayoutBodyComponent from './src/layout-body';\nimport { dynamicApp } from '../dynamics';\nexport const VxeLayoutBody = Object.assign({}, VxeLayoutBodyComponent, {\n    install(app) {\n        app.component(VxeLayoutBodyComponent.name, VxeLayoutBodyComponent);\n    }\n});\ndynamicApp.use(VxeLayoutBody);\nVxeUI.component(VxeLayoutBodyComponent);\nexport const LayoutBody = VxeLayoutBody;\nexport default VxeLayoutBody;\n", "import { defineComponent, ref, h, reactive } from 'vue';\nimport { getConfig, useSize, createEvent } from '../../ui';\nimport XEUtils from 'xe-utils';\nexport default defineComponent({\n    name: 'VxeLayoutContainer',\n    props: {\n        vertical: Boolean,\n        size: {\n            type: String,\n            default: () => getConfig().layoutContainer.size || getConfig().size\n        }\n    },\n    emits: [],\n    setup(props, context) {\n        const { slots, emit } = context;\n        const xID = XEUtils.uniqueId();\n        const refElem = ref();\n        const { computeSize } = useSize(props);\n        const reactData = reactive({});\n        const refMaps = {\n            refElem\n        };\n        const computeMaps = {\n            computeSize\n        };\n        const $xeLayoutContainer = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $layoutContainer: $xeLayoutContainer }, params));\n        };\n        const layoutContainerMethods = {\n            dispatchEvent\n        };\n        const layoutContainerPrivateMethods = {};\n        Object.assign($xeLayoutContainer, layoutContainerMethods, layoutContainerPrivateMethods);\n        const renderVN = () => {\n            const { vertical } = props;\n            const vSize = computeSize.value;\n            const defaultSlot = slots.default;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-layout-container', {\n                        [`size--${vSize}`]: vSize,\n                        'is--vertical': vertical\n                    }]\n            }, defaultSlot ? defaultSlot({}) : []);\n        };\n        $xeLayoutContainer.renderVN = renderVN;\n        return $xeLayoutContainer;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeLayoutContainerComponent from './src/layout-container';\nimport { dynamicApp } from '../dynamics';\nexport const VxeLayoutContainer = Object.assign({}, VxeLayoutContainerComponent, {\n    install(app) {\n        app.component(VxeLayoutContainerComponent.name, VxeLayoutContainerComponent);\n    }\n});\ndynamicApp.use(VxeLayoutContainer);\nVxeUI.component(VxeLayoutContainerComponent);\nexport const LayoutContainer = VxeLayoutContainer;\nexport default VxeLayoutContainer;\n", "import { defineComponent, ref, h, reactive } from 'vue';\nimport { createEvent } from '../../ui';\nimport XEUtils from 'xe-utils';\nexport default defineComponent({\n    name: 'VxeLayoutFooter',\n    props: {\n        fixed: Boolean,\n        align: String\n    },\n    emits: [],\n    setup(props, context) {\n        const { slots, emit } = context;\n        const xID = XEUtils.uniqueId();\n        const refElem = ref();\n        const reactData = reactive({});\n        const refMaps = {\n            refElem\n        };\n        const computeMaps = {};\n        const $xeLayoutFooter = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $layoutFooter: $xeLayoutFooter }, params));\n        };\n        const layoutFooterMethods = {\n            dispatchEvent\n        };\n        const layoutFooterPrivateMethods = {};\n        Object.assign($xeLayoutFooter, layoutFooterMethods, layoutFooterPrivateMethods);\n        const renderVN = () => {\n            const { fixed, align } = props;\n            const defaultSlot = slots.default;\n            return h('footer', {\n                ref: refElem,\n                class: ['vxe-layout-footer', align ? `align--${align}` : '', {\n                        'is--fixed': fixed\n                    }]\n            }, defaultSlot ? defaultSlot({}) : []);\n        };\n        $xeLayoutFooter.renderVN = renderVN;\n        return $xeLayoutFooter;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeLayoutFooterComponent from './src/layout-footer';\nimport { dynamicApp } from '../dynamics';\nexport const VxeLayoutFooter = Object.assign({}, VxeLayoutFooterComponent, {\n    install(app) {\n        app.component(VxeLayoutFooterComponent.name, VxeLayoutFooterComponent);\n    }\n});\ndynamicApp.use(VxeLayoutFooter);\nVxeUI.component(VxeLayoutFooterComponent);\nexport const LayoutFooter = VxeLayoutFooter;\nexport default VxeLayoutFooter;\n", "import { defineComponent, ref, h, reactive } from 'vue';\nimport { createEvent } from '../../ui';\nimport XEUtils from 'xe-utils';\nexport default defineComponent({\n    name: 'VxeLayoutHeader',\n    props: {\n        fixed: Boolean\n    },\n    emits: [],\n    setup(props, context) {\n        const { slots, emit } = context;\n        const xID = XEUtils.uniqueId();\n        const refElem = ref();\n        const reactData = reactive({});\n        const refMaps = {\n            refElem\n        };\n        const computeMaps = {};\n        const $xeLayoutHeader = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $layoutHeader: $xeLayoutHeader }, params));\n        };\n        const layoutHeaderMethods = {\n            dispatchEvent\n        };\n        const layoutHeaderPrivateMethods = {};\n        Object.assign($xeLayoutHeader, layoutHeaderMethods, layoutHeaderPrivateMethods);\n        const renderVN = () => {\n            const { fixed } = props;\n            const defaultSlot = slots.default;\n            return h('header', {\n                ref: refElem,\n                class: ['vxe-layout-header', {\n                        'is--fixed': fixed\n                    }]\n            }, defaultSlot ? defaultSlot({}) : []);\n        };\n        $xeLayoutHeader.renderVN = renderVN;\n        return $xeLayoutHeader;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeLayoutHeaderComponent from './src/layout-header';\nimport { dynamicApp } from '../dynamics';\nexport const VxeLayoutHeader = Object.assign({}, VxeLayoutHeaderComponent, {\n    install(app) {\n        app.component(VxeLayoutHeaderComponent.name, VxeLayoutHeaderComponent);\n    }\n});\ndynamicApp.use(VxeLayoutHeader);\nVxeUI.component(VxeLayoutHeaderComponent);\nexport const LayoutHeader = VxeLayoutHeader;\nexport default VxeLayoutHeader;\n", "import { defineComponent, ref, h, reactive, resolveComponent } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getConfig, usePermission, useSize, createEvent, renderEmptyElement } from '../../ui';\nimport { getSlotVNs } from '../../ui/src/vn';\nexport default defineComponent({\n    name: 'VxeLink',\n    props: {\n        href: String,\n        target: String,\n        status: String,\n        title: [String, Number],\n        icon: String,\n        routerLink: Object,\n        underline: {\n            type: Boolean,\n            default: () => getConfig().link.underline\n        },\n        /**\n         * 权限码\n         */\n        permissionCode: [String, Number],\n        content: [String, Number],\n        size: {\n            type: String,\n            default: () => getConfig().link.size || getConfig().size\n        }\n    },\n    emits: [\n        'click'\n    ],\n    setup(props, context) {\n        const { slots, emit } = context;\n        const xID = XEUtils.uniqueId();\n        const { computeSize } = useSize(props);\n        const { computePermissionInfo } = usePermission(props);\n        const refElem = ref();\n        const reactData = reactive({});\n        const refMaps = {\n            refElem\n        };\n        const computeMaps = {};\n        const $xeLink = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $link: $xeLink }, params));\n        };\n        const linkMethods = {\n            dispatchEvent\n        };\n        const linkPrivateMethods = {};\n        const clickEvent = (evnt) => {\n            dispatchEvent('click', {}, evnt);\n        };\n        Object.assign($xeLink, linkMethods, linkPrivateMethods);\n        const renderContent = () => {\n            const { icon, content } = props;\n            const defaultSlot = slots.default;\n            const iconSlot = slots.icon;\n            const textContent = XEUtils.toValueString(content);\n            return [\n                iconSlot || icon\n                    ? h('span', {\n                        class: 'vxe-link--icon'\n                    }, iconSlot\n                        ? getSlotVNs(iconSlot({}))\n                        : [\n                            h('i', {\n                                class: icon\n                            })\n                        ])\n                    : renderEmptyElement($xeLink),\n                defaultSlot || textContent\n                    ? h('span', {\n                        class: 'vxe-link--content'\n                    }, defaultSlot ? defaultSlot({}) : textContent)\n                    : renderEmptyElement($xeLink)\n            ];\n        };\n        const renderVN = () => {\n            const { status, target, href, title, underline, routerLink } = props;\n            const permissionInfo = computePermissionInfo.value;\n            const vSize = computeSize.value;\n            if (!permissionInfo.visible) {\n                return renderEmptyElement($xeLink);\n            }\n            if (routerLink) {\n                return h(resolveComponent('router-link'), {\n                    class: ['vxe-link', {\n                            [`size--${vSize}`]: vSize,\n                            [`theme--${status}`]: status,\n                            'is--underline': underline\n                        }],\n                    title,\n                    target,\n                    to: routerLink,\n                    onClick: clickEvent\n                }, {\n                    default() {\n                        return renderContent();\n                    }\n                });\n            }\n            return h('a', {\n                ref: refElem,\n                class: ['vxe-link', {\n                        [`size--${vSize}`]: vSize,\n                        [`theme--${status}`]: status,\n                        'is--underline': underline\n                    }],\n                href,\n                target,\n                title,\n                onClick: clickEvent\n            }, renderContent());\n        };\n        $xeLink.renderVN = renderVN;\n        return $xeLink;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeLinkComponent from './src/link';\nimport { dynamicApp } from '../dynamics';\nexport const VxeLink = Object.assign({}, VxeLinkComponent, {\n    install(app) {\n        app.component(VxeLinkComponent.name, VxeLinkComponent);\n    }\n});\ndynamicApp.use(VxeLink);\nVxeUI.component(VxeLinkComponent);\nexport const Link = VxeLink;\nexport default VxeLink;\n", "import { defineComponent, ref, h, reactive, nextTick, provide, watch } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { toCssUnit } from '../../ui/src/dom';\nimport { getConfig, createEvent, renderer, useSize } from '../../ui';\nimport { createListDesignActionButton } from '../render/util';\nimport { getDefaultSettingFormData } from './default-setting-data';\nimport LayoutPreviewComponent from './layout-preview';\nimport LayoutSettingComponent from './layout-setting';\nexport default defineComponent({\n    name: 'VxeListDesign',\n    props: {\n        size: {\n            type: String,\n            default: () => getConfig().listDesign.size || getConfig().size\n        },\n        height: {\n            type: [String, Number],\n            default: () => getConfig().listDesign.height\n        },\n        config: Object,\n        showPc: {\n            type: Boolean,\n            default: () => getConfig().listDesign.showPc\n        },\n        showMobile: {\n            type: Boolean,\n            default: () => getConfig().listDesign.showMobile\n        },\n        actionCodes: Array,\n        formRender: Object\n    },\n    emits: [],\n    setup(props, context) {\n        const { emit, slots } = context;\n        const xID = XEUtils.uniqueId();\n        const refElem = ref();\n        const { computeSize } = useSize(props);\n        const reactData = reactive({\n            formData: {},\n            searchFormData: {},\n            searchFormItems: [],\n            listTableColumns: []\n        });\n        const refMaps = {\n            refElem\n        };\n        const computeMaps = {\n            computeSize\n        };\n        const $xeListDesign = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const systemConfigList = [];\n        const customConfigList = [];\n        renderer.forEach((item, name) => {\n            const { createListDesignSettingActionButtonConfig } = item;\n            if (createListDesignSettingActionButtonConfig) {\n                const params = { name };\n                const btnConfig = Object.assign(createListDesignActionButton({ code: name }), createListDesignSettingActionButtonConfig(params));\n                if (btnConfig.type === 'custom') {\n                    customConfigList.push(btnConfig);\n                }\n                else {\n                    systemConfigList.push(btnConfig);\n                }\n            }\n        });\n        const parseWidgetColumn = (widget) => {\n            return {\n                title: widget.title,\n                field: widget.field,\n                visible: !widget.hidden,\n                width: '',\n                cellRender: {\n                    name: widget.name,\n                    props: widget.options\n                }\n            };\n        };\n        /**\n         * 解析表单设计 JSON\n         */\n        const parseFormDesignColumns = (config) => {\n            const tableColumns = [];\n            if (config) {\n                const { widgetData } = config;\n                if (widgetData) {\n                    widgetData.forEach(item => {\n                        const { name } = item;\n                        if (name) {\n                            // 如果是行列\n                            if (name === 'row') {\n                                item.children.forEach(childItem => {\n                                    if (childItem.name) {\n                                        tableColumns.push(parseWidgetColumn(childItem));\n                                    }\n                                });\n                            }\n                            else if (name === 'subtable') {\n                                // 如果是子表\n                            }\n                            else {\n                                tableColumns.push(parseWidgetColumn(item));\n                            }\n                        }\n                    });\n                }\n            }\n            return tableColumns;\n        };\n        const configToSearchItems = (searchItems) => {\n            if (searchItems) {\n                const data = {};\n                const items = searchItems.map(item => {\n                    data[item.field] = null;\n                    return {\n                        field: item.field,\n                        title: item.title,\n                        folding: item.folding,\n                        itemRender: item.itemRender\n                    };\n                });\n                return {\n                    items,\n                    data\n                };\n            }\n            return { items: [], data: {} };\n        };\n        const configToListColumns = (listColumns) => {\n            if (listColumns) {\n                return listColumns.map(item => {\n                    return {\n                        field: item.field,\n                        title: item.title,\n                        visible: !!item.visible,\n                        width: item.width,\n                        cellRender: XEUtils.clone(item.cellRender)\n                    };\n                });\n            }\n            return [];\n        };\n        const loadConfig = (config) => {\n            const { formConfig, searchItems, listColumns } = config;\n            if (formConfig) {\n                loadFormConfig(formConfig);\n            }\n            if (searchItems) {\n                setSearchItems(searchItems);\n            }\n            if (listColumns) {\n                reactData.listTableColumns = parseColumnConfigs(listColumns);\n            }\n            return nextTick();\n        };\n        const parseColumnConfigs = (listColumns) => {\n            return configToListColumns(listColumns);\n        };\n        const loadFormConfig = (data) => {\n            reactData.formData = Object.assign({}, createSettingForm(), data);\n            return nextTick();\n        };\n        const getSearchItems = () => {\n            return reactData.searchFormItems;\n        };\n        const setSearchItems = (searchItems) => {\n            const { data, items } = configToSearchItems(searchItems);\n            reactData.searchFormData = data;\n            reactData.searchFormItems = items;\n            return nextTick();\n        };\n        const getListColumns = () => {\n            return reactData.listTableColumns;\n        };\n        const setListColumns = (listColumns) => {\n            reactData.listTableColumns = parseColumnConfigs(listColumns);\n            return nextTick();\n        };\n        const createSettingForm = () => {\n            const { actionCodes, formRender } = props;\n            let conf = getDefaultSettingFormData();\n            // 处理默认按钮\n            if (actionCodes && actionCodes.length) {\n                if (!conf.actionButtonList || !conf.actionButtonList.length) {\n                    const defActionBtnList = [];\n                    actionCodes.forEach(item => {\n                        if (XEUtils.isObject(item) && item.default) {\n                            const sysItem = systemConfigList.find(obj => obj.code === item.code);\n                            if (sysItem) {\n                                defActionBtnList.push(createListDesignActionButton({\n                                    type: sysItem.type,\n                                    code: sysItem.code\n                                }));\n                            }\n                        }\n                    });\n                    conf.actionButtonList = defActionBtnList;\n                }\n            }\n            // 如果为自定义渲染\n            if (formRender && formRender.name) {\n                const compConf = renderer.get(formRender.name);\n                const createFormConfig = compConf ? compConf.createListDesignSettingFormConfig : null;\n                const params = { name: formRender.name };\n                conf = ((createFormConfig ? createFormConfig(params) : {}) || {});\n            }\n            return conf;\n        };\n        const initSettingForm = () => {\n            reactData.formData = createSettingForm();\n        };\n        const clearConfig = () => {\n            loadConfig({\n                searchItems: [],\n                listColumns: []\n            });\n            initSettingForm();\n            return nextTick();\n        };\n        const listDesignMethods = {\n            dispatchEvent(type, params, evnt) {\n                emit(type, createEvent(evnt, { $listDesign: $xeListDesign }, params));\n            },\n            loadFormDesignConfig(config) {\n                const { listTableColumns } = reactData;\n                const oldMaps = {};\n                XEUtils.eachTree(listTableColumns, item => {\n                    oldMaps[item.field] = item;\n                }, { children: 'children' });\n                const columns = parseFormDesignColumns(config);\n                XEUtils.eachTree(columns, item => {\n                    const oldItem = oldMaps[item.field];\n                    if (oldItem) {\n                        if (oldItem.width) {\n                            item.width = oldItem.width;\n                        }\n                        item.visible = oldItem.visible;\n                    }\n                }, { children: 'children' });\n                reactData.listTableColumns = columns;\n                return nextTick();\n            },\n            reloadFormDesignConfig(config) {\n                reactData.listTableColumns = parseFormDesignColumns(config);\n                return nextTick();\n            },\n            getSearchItems,\n            setSearchItems,\n            getListColumns,\n            setListColumns,\n            getConfig() {\n                return {\n                    formConfig: reactData.formData,\n                    searchItems: getSearchItems(),\n                    listColumns: getListColumns()\n                };\n            },\n            loadConfig,\n            reloadConfig(config) {\n                clearConfig();\n                return loadConfig(config);\n            },\n            clearConfig\n        };\n        const listDesignPrivateMethods = {};\n        Object.assign($xeListDesign, listDesignMethods, listDesignPrivateMethods);\n        const renderVN = () => {\n            const { height } = props;\n            const vSize = computeSize.value;\n            const headerSlot = slots.header;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-list-design', {\n                        [`size--${vSize}`]: vSize\n                    }],\n                style: height\n                    ? {\n                        height: toCssUnit(height)\n                    }\n                    : null\n            }, [\n                h('div', {\n                    class: 'vxe-list-design--header'\n                }, headerSlot ? headerSlot({}) : []),\n                h('div', {\n                    class: 'vxe-list-design--body'\n                }, [\n                    h(LayoutPreviewComponent),\n                    h(LayoutSettingComponent)\n                ])\n            ]);\n        };\n        provide('$xeListDesign', $xeListDesign);\n        watch(() => props.config, (value) => {\n            loadConfig(value || {});\n        });\n        initSettingForm();\n        if (props.config) {\n            loadConfig(props.config);\n        }\n        $xeListDesign.renderVN = renderVN;\n        return $xeListDesign;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { getI18n } from '@vxe-ui/core';\nexport const getListDesignActionButtonName = (name) => {\n    return getI18n(`vxe.listDesign.activeBtn.${name}`);\n};\nexport const handleGetListDesignActionButtonName = (params) => {\n    return getListDesignActionButtonName(params.name);\n};\nexport const createListDesignActionButton = (btnObj) => {\n    return Object.assign({\n        name: '',\n        icon: '',\n        type: '',\n        classify: '',\n        code: '',\n        status: '',\n        permissionCode: ''\n    }, btnObj);\n};\n", "export const getDefaultSettingFormData = () => {\n    return {\n        listView: {\n            enabled: true\n        },\n        ganttView: {\n            enabled: false\n        },\n        chartView: {\n            enabled: false\n        },\n        autoFoldFilter: true,\n        showCheckbox: 'auto',\n        showSeq: true,\n        showStatistics: true,\n        mobileDefaultView: 'list',\n        pcDefaultView: 'list',\n        actionButtonList: []\n    };\n};\n", "import { defineComponent, h, inject, ref, watch, onMounted, createCommentVNode, nextTick, computed } from 'vue';\nimport { VxeUI, getI18n } from '../../ui';\nimport { errLog } from '../../ui/src/log';\nimport VxeFormComponent from '../../form/src/form';\nimport XEUtils from 'xe-utils';\nexport default defineComponent({\n    name: 'ListDesignLayoutView',\n    props: {},\n    emits: [],\n    setup() {\n        const VxeTableGridComponent = VxeUI.getComponent('VxeGrid');\n        const $xeListDesign = inject('$xeListDesign', null);\n        if (!$xeListDesign) {\n            return () => [];\n        }\n        const { reactData: listDesignReactData } = $xeListDesign;\n        const refGrid = ref();\n        const tableData = ref([]);\n        const computeFormItems = computed(() => {\n            const { searchFormItems } = listDesignReactData;\n            if (searchFormItems.length) {\n                return searchFormItems.concat([\n                    {\n                        field: 'active',\n                        title: '',\n                        folding: false,\n                        collapseNode: searchFormItems.some(item => item.folding),\n                        itemRender: {\n                            name: 'VxeButtonGroup',\n                            options: [\n                                { content: '查询', icon: 'vxe-icon-search', status: 'primary', type: 'submit' },\n                                { content: '重置', icon: 'vxe-icon-repeat', type: 'reset' }\n                            ]\n                        }\n                    }\n                ]);\n            }\n            return searchFormItems;\n        });\n        const computeTableColumn = computed(() => {\n            const { formData, listTableColumns } = listDesignReactData;\n            const { showSeq, actionButtonList } = formData;\n            const columns = [];\n            if (showSeq) {\n                columns.push({\n                    type: 'seq',\n                    field: '_seq',\n                    width: 70\n                });\n            }\n            listTableColumns.forEach(item => {\n                columns.push({\n                    field: item.field,\n                    title: item.title,\n                    visible: item.visible,\n                    width: item.width\n                });\n            });\n            if (actionButtonList && actionButtonList.length) {\n                columns.push({\n                    field: '_active',\n                    title: getI18n('vxe.table.actionTitle'),\n                    fixed: 'right',\n                    width: 'auto',\n                    cellRender: {\n                        name: 'VxeButtonGroup',\n                        options: []\n                    }\n                });\n            }\n            return columns;\n        });\n        const updateColumnWidthEvent = ({ column, resizeWidth }) => {\n            const { listTableColumns } = listDesignReactData;\n            const rest = XEUtils.findTree(listTableColumns, item => item.field === column.field, { children: 'children' });\n            if (rest) {\n                const { item } = rest;\n                item.width = resizeWidth;\n            }\n        };\n        const updateTableData = () => {\n            const { listTableColumns } = listDesignReactData;\n            const data = [{}, {}];\n            data.forEach(row => {\n                listTableColumns.forEach(column => {\n                    row[column.field] = '-';\n                });\n            });\n            tableData.value = data;\n        };\n        const dataFlag = ref(0);\n        watch(() => listDesignReactData.listTableColumns ? listDesignReactData.listTableColumns.length : -1, () => {\n            dataFlag.value++;\n        });\n        watch(() => listDesignReactData.listTableColumns, () => {\n            dataFlag.value++;\n        });\n        watch(dataFlag, () => {\n            updateTableData();\n        });\n        onMounted(() => {\n            updateTableData();\n        });\n        if (process.env.NODE_ENV === 'development') {\n            nextTick(() => {\n                if (!VxeTableGridComponent) {\n                    errLog('vxe.error.reqComp', ['vxe-grid']);\n                }\n            });\n        }\n        return () => {\n            const { searchFormData, searchFormItems } = listDesignReactData;\n            const formItems = computeFormItems.value;\n            const tableColumn = computeTableColumn.value;\n            return h('div', {\n                class: 'vxe-list-design--preview'\n            }, [\n                h('div', {\n                    class: 'vxe-list-design--preview-wrapper'\n                }, [\n                    h('div', {\n                        class: 'vxe-list-design--preview-search'\n                    }, [\n                        h('div', {\n                            class: 'vxe-list-design--preview-title'\n                        }, getI18n('vxe.listDesign.searchTitle')),\n                        searchFormItems.length\n                            ? h(VxeFormComponent, {\n                                data: searchFormData,\n                                items: formItems\n                            })\n                            : h('div', {\n                                class: 'vxe-list-design--field-configs-empty-data'\n                            }, [\n                                h('span', {}, getI18n('vxe.listDesign.search.emptyText'))\n                            ])\n                    ]),\n                    h('div', {\n                        class: 'vxe-list-design--preview-table'\n                    }, [\n                        h('div', {\n                            class: 'vxe-list-design--preview-title'\n                        }, getI18n('vxe.listDesign.listTitle')),\n                        VxeTableGridComponent\n                            ? h(VxeTableGridComponent, {\n                                ref: refGrid,\n                                columns: tableColumn,\n                                data: tableData.value,\n                                showOverflow: true,\n                                border: true,\n                                columnConfig: {\n                                    minWidth: 'auto',\n                                    resizable: true\n                                },\n                                rowConfig: {\n                                    isHover: true\n                                },\n                                scrollX: {\n                                    enabled: false\n                                },\n                                scrollY: {\n                                    enabled: false\n                                },\n                                onResizableChange: updateColumnWidthEvent\n                            })\n                            : createCommentVNode()\n                    ])\n                ])\n            ]);\n        };\n    }\n});\n", "import { h, defineComponent, ref, inject, createCommentVNode, computed, reactive } from 'vue';\nimport { VxeUI, getIcon, getI18n, renderer } from '@vxe-ui/core';\nimport { createListDesignActionButton } from '../render/util';\nimport VxeFormComponent from '../../form/src/form';\nimport VxeFormItemComponent from '../../form/src/form-item';\nimport VxeTextComponent from '../../text/src/text';\nimport VxeSelectComponent from '../../select/src/select';\nimport VxeSwitchComponent from '../../switch/src/switch';\nimport VxeRadioGroupComponent from '../../radio/src/group';\nimport VxeButtonComponent from '../../button/src/button';\nimport XEUtils from 'xe-utils';\n// 控件原始配置信息，带响应\nconst refWidgetReactConfigMaps = ref({});\nexport const DefaultFieldSettingFormComponent = defineComponent({\n    name: 'DefaultFieldSettingForm',\n    props: {},\n    emits: [],\n    setup() {\n        const $xeListDesign = inject('$xeListDesign', null);\n        if (!$xeListDesign) {\n            return () => [];\n        }\n        const { reactData: listDesignReactData } = $xeListDesign;\n        const refIsAllChecked = ref(false);\n        const refIsAllIndeterminate = ref(false);\n        const changeVisible = (item) => {\n            item.visible = !item.visible;\n            listDesignReactData.listTableColumns = listDesignReactData.listTableColumns.slice(0);\n        };\n        const removeSearchItem = (item) => {\n            const { searchFormItems } = listDesignReactData;\n            listDesignReactData.searchFormItems = searchFormItems.filter(obj => obj.field !== item.field);\n        };\n        const addSearchEvent = () => {\n            const { listTableColumns, searchFormItems } = listDesignReactData;\n            const widgetReactConfigMaps = refWidgetReactConfigMaps.value;\n            const allFormItemList = [];\n            listTableColumns.forEach(item => {\n                const { cellRender } = item;\n                if (cellRender) {\n                    const conf = searchFormItems.find(conf => conf.field === item.field);\n                    const name = cellRender.name || '';\n                    let widgetConfig = widgetReactConfigMaps[name];\n                    if (!widgetConfig) {\n                        const compConf = renderer.get(name);\n                        if (compConf) {\n                            const createWidgetFormConfig = compConf.createFormDesignWidgetConfig;\n                            if (createWidgetFormConfig) {\n                                const params = { name, $formDesign: null };\n                                widgetConfig = createWidgetFormConfig(params) || {};\n                                widgetReactConfigMaps[name] = widgetConfig;\n                            }\n                        }\n                    }\n                    if (widgetConfig.query) {\n                        allFormItemList.push(Object.assign(Object.assign({}, item), { checked: !!conf, isHalf: false, folding: conf ? !!conf.folding : false }));\n                    }\n                }\n            });\n            refWidgetReactConfigMaps.value = Object.assign({}, widgetReactConfigMaps);\n            const refAllFormItemList = ref(allFormItemList);\n            // const foldOptions = ref([\n            //   { label: '展开', value: false },\n            //   { label: '折叠', value: true }\n            // ])\n            const checkOptionStatus = () => {\n                const allFormItemList = refAllFormItemList.value;\n                refIsAllChecked.value = allFormItemList.every((item) => item.checked);\n                refIsAllIndeterminate.value = !refIsAllChecked.value && allFormItemList.some((item) => item.checked || item.isHalf);\n            };\n            const handleOptionCheck = (item) => {\n                const allFormItemList = refAllFormItemList.value;\n                const matchObj = XEUtils.findTree(allFormItemList, obj => obj === item);\n                if (matchObj && matchObj.parent) {\n                    const { parent } = matchObj;\n                    if (parent.children && parent.children.length) {\n                        parent.checked = parent.children.every((obj) => obj.checked);\n                        parent.isHalf = !parent.checked && parent.children.some((obj) => obj.checked || obj.isHalf);\n                        handleOptionCheck(parent);\n                    }\n                }\n            };\n            const changeCheckboxOption = (item) => {\n                const isChecked = !item.checked;\n                XEUtils.eachTree([item], (obj) => {\n                    obj.checked = isChecked;\n                    obj.isHalf = false;\n                });\n                handleOptionCheck(item);\n                checkOptionStatus();\n            };\n            const allOptionEvent = () => {\n                const allFormItemList = refAllFormItemList.value;\n                const isAll = !refIsAllChecked.value;\n                XEUtils.eachTree(allFormItemList, (item) => {\n                    item.checked = isAll;\n                    item.isHalf = false;\n                });\n                refIsAllChecked.value = isAll;\n                checkOptionStatus();\n            };\n            const confirmEvent = () => {\n                const allFormItemList = refAllFormItemList.value;\n                const searchItems = [];\n                allFormItemList.forEach(item => {\n                    if (item.checked) {\n                        searchItems.push({\n                            field: item.field,\n                            title: item.title,\n                            folding: item.folding,\n                            itemRender: Object.assign({}, item.cellRender)\n                        });\n                    }\n                });\n                $xeListDesign.setSearchItems(searchItems);\n            };\n            VxeUI.modal.open({\n                title: getI18n('vxe.listDesign.search.editPopupTitle'),\n                width: 680,\n                height: 500,\n                showFooter: true,\n                escClosable: true,\n                showCancelButton: true,\n                showConfirmButton: true,\n                confirmButtonText: getI18n('vxe.listDesign.searchPopup.saveBtn'),\n                showZoom: true,\n                resize: true,\n                onConfirm: confirmEvent,\n                slots: {\n                    default() {\n                        const isAllChecked = refIsAllChecked.value;\n                        const isAllIndeterminate = refIsAllIndeterminate.value;\n                        const allFormItemList = refAllFormItemList.value;\n                        return h('div', {\n                            class: 'vxe-list-design--field-search-popup'\n                        }, [\n                            h('table', {}, [\n                                h('colgroup', {}, [\n                                    h('col', {\n                                        style: {\n                                            width: '80px'\n                                        }\n                                    }),\n                                    h('col')\n                                    // h('col', {\n                                    //   style: {\n                                    //     width: '140px'\n                                    //   }\n                                    // })\n                                ]),\n                                h('thead', {}, [\n                                    h('th', {}, [\n                                        h('div', {\n                                            class: ['vxe-list-design--field-search-checkbox-option', {\n                                                    'is--checked': isAllChecked,\n                                                    'is--indeterminate': isAllIndeterminate\n                                                }],\n                                            title: getI18n('vxe.table.allTitle'),\n                                            onClick: allOptionEvent\n                                        }, [\n                                            h('span', {\n                                                class: ['vxe-checkbox--icon', isAllIndeterminate ? getIcon().CHECKBOX_INDETERMINATE : (isAllChecked ? getIcon().CHECKBOX_CHECKED : getIcon().CHECKBOX_UNCHECKED)]\n                                            }),\n                                            h('span', {\n                                                class: 'vxe-checkbox--label'\n                                            }, getI18n('vxe.toolbar.customAll'))\n                                        ])\n                                    ]),\n                                    h('th', {}, getI18n('vxe.listDesign.searchPopup.colTitle'))\n                                    // h('th', {}, '展开/折叠')\n                                ]),\n                                h('tbody', {}, allFormItemList.map(item => {\n                                    const isChecked = item.checked;\n                                    const isIndeterminate = item.isHalf;\n                                    return h('tr', {}, [\n                                        h('td', {\n                                            class: 'vxe-list-design--field-search-option-item col--visible'\n                                        }, [\n                                            h('div', {\n                                                class: ['vxe-list-design--field-search-checkbox-option', {\n                                                        'is--checked': isChecked,\n                                                        'is--indeterminate': isIndeterminate\n                                                    }],\n                                                title: getI18n('vxe.custom.setting.colVisible'),\n                                                onClick: () => {\n                                                    changeCheckboxOption(item);\n                                                }\n                                            }, [\n                                                h('span', {\n                                                    class: ['vxe-checkbox--icon', isIndeterminate ? getIcon().CHECKBOX_INDETERMINATE : (isChecked ? getIcon().CHECKBOX_CHECKED : getIcon().CHECKBOX_UNCHECKED)]\n                                                })\n                                            ])\n                                        ]),\n                                        h('td', {\n                                            class: 'vxe-list-design--field-search-option-item'\n                                        }, `${item.title || ''}`)\n                                        // h('td', {}, [\n                                        //   h(VxeRadioGroupComponent, {\n                                        //     modelValue: item.folding,\n                                        //     type: 'button',\n                                        //     options: foldOptions.value,\n                                        //     size: 'mini',\n                                        //     'onUpdate:modelValue' (val) {\n                                        //       item.folding = val\n                                        //     }\n                                        //   })\n                                        // ])\n                                    ]);\n                                }))\n                            ])\n                        ]);\n                    }\n                }\n            });\n        };\n        const renderChildOptions = (item) => {\n            const { children } = item;\n            if (children && children.length) {\n                return h('div', {\n                    class: 'vxe-list-design--field-option-inner'\n                }, [\n                    h('div', {\n                        class: 'vxe-list-design--field-sub-option',\n                        onClick() {\n                            changeVisible(item);\n                        }\n                    }, children.map(child => {\n                        const { title, visible: isChecked } = child;\n                        return h('div', {\n                            class: ['vxe-list-design--field-checkbox-option', {\n                                    'is--checked': isChecked\n                                }],\n                            onClick() {\n                                changeVisible(child);\n                            }\n                        }, [\n                            h('span', {\n                                class: ['vxe-checkbox--icon', isChecked ? getIcon().CHECKBOX_CHECKED : getIcon().CHECKBOX_UNCHECKED]\n                            }),\n                            h('span', {\n                                class: 'vxe-checkbox--label'\n                            }, `${title}`)\n                        ]);\n                    }))\n                ]);\n            }\n            return createCommentVNode();\n        };\n        const renderFieldOptions = () => {\n            const { listTableColumns } = listDesignReactData;\n            return listTableColumns.map(item => {\n                const { title, visible: isChecked } = item;\n                return h('div', {\n                    class: 'vxe-list-design--field-option'\n                }, [\n                    h('div', {\n                        class: 'vxe-list-design--field-option-inner'\n                    }, [\n                        h('div', {\n                            class: ['vxe-list-design--field-checkbox-option', {\n                                    'is--checked': isChecked\n                                }],\n                            onClick() {\n                                changeVisible(item);\n                            }\n                        }, [\n                            h('span', {\n                                class: ['vxe-checkbox--icon', isChecked ? getIcon().CHECKBOX_CHECKED : getIcon().CHECKBOX_UNCHECKED]\n                            }),\n                            h('span', {\n                                class: 'vxe-checkbox--label'\n                            }, `${title}`)\n                        ])\n                    ]),\n                    renderChildOptions(item)\n                ]);\n            });\n        };\n        return () => {\n            return h(VxeFormComponent, {\n                span: 24,\n                vertical: true,\n                titleBold: true\n            }, {\n                default() {\n                    return [\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.listDesign.searchField')\n                        }, {\n                            extra() {\n                                return h(VxeButtonComponent, {\n                                    mode: 'text',\n                                    status: 'primary',\n                                    icon: getIcon().FORM_DESIGN_PROPS_EDIT,\n                                    content: getI18n('vxe.listDesign.search.addBtn'),\n                                    onClick: addSearchEvent\n                                });\n                            },\n                            default() {\n                                const { searchFormItems } = listDesignReactData;\n                                return [\n                                    searchFormItems.length\n                                        ? h('div', {\n                                            class: 'vxe-list-design--search-item-wrapper'\n                                        }, [\n                                            h('div', {\n                                                class: 'vxe-list-design--search-item-list'\n                                            }, searchFormItems.map((item) => {\n                                                return h('div', {\n                                                    key: item.field,\n                                                    class: 'vxe-list-design--search-item'\n                                                }, [\n                                                    h('div', {\n                                                        class: 'vxe-list-design--search-item-title'\n                                                    }, `${item.title || ''}`),\n                                                    h('div', {\n                                                        class: 'vxe-list-design--search-item-btn'\n                                                    }, [\n                                                        h(VxeButtonComponent, {\n                                                            icon: getIcon().LIST_DESIGN_LIST_SETTING_SEARCH_DELETE,\n                                                            mode: 'text',\n                                                            status: 'error',\n                                                            onClick() {\n                                                                removeSearchItem(item);\n                                                            }\n                                                        })\n                                                    ])\n                                                ]);\n                                            }))\n                                        ])\n                                        : h('div', {\n                                            class: 'vxe-list-design--field-configs-empty-data'\n                                        }, [\n                                            h('span', {}, getI18n('vxe.listDesign.search.emptyText'))\n                                        ])\n                                ];\n                            }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: getI18n('vxe.listDesign.listField')\n                        }, {\n                            default() {\n                                return renderFieldOptions();\n                            }\n                        })\n                    ];\n                }\n            });\n        };\n    }\n});\nexport const DefaultParameterSettingFormComponent = defineComponent({\n    name: 'DefaultListSettingTabComponent',\n    props: {},\n    emits: [],\n    setup() {\n        const $xeListDesign = inject('$xeListDesign', null);\n        if (!$xeListDesign) {\n            return () => [];\n        }\n        const { props: listDesignProps, reactData: listDesignReactData } = $xeListDesign;\n        const systemConfigList = [];\n        const customConfigList = [];\n        renderer.forEach((item, name) => {\n            const { createListDesignSettingActionButtonConfig } = item;\n            if (createListDesignSettingActionButtonConfig) {\n                const params = { name };\n                const btnConfig = Object.assign(createListDesignActionButton({ code: name }), createListDesignSettingActionButtonConfig(params));\n                if (btnConfig.type === 'custom') {\n                    customConfigList.push(btnConfig);\n                }\n                else {\n                    systemConfigList.push(btnConfig);\n                }\n            }\n        });\n        const renderViewList = ref([\n            { label: '列表视图', value: 'list', isExpand: false }\n        ]);\n        // const refFoldOpts = ref([\n        //   { label: '显示', value: true },\n        //   { label: '隐藏', value: false }\n        // ])\n        const refSeqOpts = ref([\n            { label: '显示', value: true },\n            { label: '隐藏', value: false }\n        ]);\n        const refCheckboxOpts = ref([\n            { label: '默认', value: 'auto' },\n            { label: '允许', value: true },\n            { label: '不允许', value: false }\n        ]);\n        const disableView = computed(() => {\n            const { formData } = listDesignReactData;\n            return [formData.listView.enabled, formData.ganttView.enabled, formData.chartView.enabled].filter(enabled => enabled).length <= 1;\n        });\n        const openActiveBtnPopup = (activeBtnObj) => {\n            const { formData } = listDesignReactData;\n            const { actionCodes } = listDesignProps;\n            let btnList = formData.actionButtonList;\n            if (!btnList) {\n                btnList = [];\n            }\n            const activeBtnItem = reactive(createListDesignActionButton(activeBtnObj));\n            const systemBtnList = systemConfigList.filter(item => {\n                if (actionCodes && actionCodes.length) {\n                    if (!actionCodes.some(conf => XEUtils.isString(conf) ? item.code === conf : conf.code === item.code)) {\n                        return false;\n                    }\n                }\n                return !btnList.some(obj => obj.code === item.code);\n            });\n            const customBtnList = customConfigList.filter(item => !btnList.some(obj => obj.code === item.code));\n            const btOptions = [];\n            if (systemBtnList.length) {\n                if (!activeBtnItem.type) {\n                    activeBtnItem.type = '';\n                }\n                btOptions.push({ value: '', label: '系统按钮' });\n            }\n            if (customBtnList.length) {\n                if (!activeBtnItem.type) {\n                    activeBtnItem.type = 'custom';\n                }\n                btOptions.push({ value: 'custom', label: '自定义按钮' });\n            }\n            const refSystemConfigOptions = computed(() => {\n                return systemBtnList.map(item => {\n                    const nameConfig = item.name;\n                    return {\n                        label: XEUtils.toValueString(XEUtils.isFunction(nameConfig) ? nameConfig({ name: item.code || '' }) : nameConfig),\n                        value: item.code\n                    };\n                });\n            });\n            const refBtnTypeOptions = ref(btOptions);\n            VxeUI.modal.open({\n                title: '添加按钮',\n                width: 600,\n                height: 400,\n                showFooter: true,\n                showCancelButton: true,\n                showConfirmButton: true,\n                confirmButtonText: '保存',\n                onConfirm() {\n                    if (activeBtnItem.type === 'custom') {\n                        btnList.push(activeBtnItem);\n                    }\n                    else {\n                        btnList.push(activeBtnItem);\n                    }\n                    formData.actionButtonList = [...btnList];\n                },\n                slots: {\n                    default() {\n                        return h(VxeFormComponent, {\n                            vertical: true,\n                            titleBold: true\n                        }, {\n                            default() {\n                                return [\n                                    h(VxeFormItemComponent, {\n                                        title: '按钮类型',\n                                        span: 24\n                                    }, {\n                                        default() {\n                                            return h(VxeSelectComponent, {\n                                                modelValue: activeBtnItem.type,\n                                                options: refBtnTypeOptions.value,\n                                                'onUpdate:modelValue'(val) {\n                                                    activeBtnItem.type = val;\n                                                }\n                                            });\n                                        }\n                                    }),\n                                    h(VxeFormItemComponent, {\n                                        title: '选择系统按钮',\n                                        span: 24\n                                    }, {\n                                        default() {\n                                            return h(VxeSelectComponent, {\n                                                modelValue: activeBtnItem.code,\n                                                options: refSystemConfigOptions.value,\n                                                'onUpdate:modelValue'(val) {\n                                                    activeBtnItem.code = val;\n                                                }\n                                            });\n                                        }\n                                    })\n                                    // h(VxeFormItemComponent, {\n                                    //   title: '按钮位置',\n                                    //   span: 24\n                                    // }, {\n                                    //   default () {\n                                    //     return h(VxeSelectComponent, {\n                                    //       modelValue: activeBtnItem.classify,\n                                    //       options: refBtnClassifyOptions.value,\n                                    //       'onUpdate:modelValue' (val) {\n                                    //         activeBtnItem.classify = val\n                                    //       }\n                                    //     })\n                                    //   }\n                                    // })\n                                ];\n                            }\n                        });\n                    }\n                }\n            });\n        };\n        const renderDefaultCellActionButton = () => {\n            return h(VxeFormItemComponent, {\n                title: '功能按钮'\n            }, {\n                extra() {\n                    return h(VxeButtonComponent, {\n                        mode: 'text',\n                        status: 'primary',\n                        icon: getIcon().FORM_DESIGN_PROPS_ADD,\n                        content: '新增',\n                        onClick() {\n                            openActiveBtnPopup();\n                        }\n                    });\n                },\n                default() {\n                    const { formData } = listDesignReactData;\n                    const btnList = formData.actionButtonList;\n                    return btnList && btnList.length\n                        ? h('div', {\n                            class: 'vxe-list-design--field-configs-wrapper'\n                        }, btnList.map(btnItem => {\n                            let btnIcon = '';\n                            let btnName = '';\n                            if (btnItem.type === 'custom') {\n                                btnIcon = btnItem.icon;\n                                btnName = btnItem.name;\n                            }\n                            else {\n                                const btnConfig = systemConfigList.find(item => item.code === btnItem.code);\n                                if (btnConfig) {\n                                    const nameConfig = btnConfig.name;\n                                    btnIcon = btnConfig.icon || '';\n                                    btnName = XEUtils.toValueString(XEUtils.isFunction(nameConfig) ? nameConfig({ name: btnConfig.code || '' }) : nameConfig);\n                                }\n                            }\n                            return h('div', {\n                                class: 'vxe-list-design--field-configs-item'\n                            }, [\n                                btnIcon\n                                    ? h('div', {\n                                        class: 'vxe-list-design--field-configs-item-icon'\n                                    }, [\n                                        h('i', {\n                                            class: btnIcon\n                                        })\n                                    ])\n                                    : createCommentVNode(),\n                                h('div', {\n                                    class: 'vxe-list-design--field-configs-item-title'\n                                }, `${btnName || ''}`),\n                                h('div', {\n                                    class: 'vxe-list-design--field-configs-item-btn'\n                                }, [\n                                    h(VxeButtonComponent, {\n                                        icon: getIcon().LIST_DESIGN_LIST_SETTING_ACTIVE_DELETE,\n                                        mode: 'text',\n                                        status: 'error',\n                                        onClick() {\n                                            formData.actionButtonList = btnList.filter(item => item !== btnItem);\n                                        }\n                                    })\n                                ])\n                            ]);\n                        }))\n                        : h('div', {\n                            class: 'vxe-list-design--field-configs-empty-data'\n                        }, [\n                            h('span', {}, '无操作按钮')\n                        ]);\n                }\n            });\n        };\n        return () => {\n            const { showPc, showMobile } = listDesignProps;\n            const { formData } = listDesignReactData;\n            return h(VxeFormComponent, {\n                span: 24,\n                vertical: true,\n                titleBold: true\n            }, {\n                default() {\n                    return [\n                        h(VxeFormItemComponent, {\n                            title: '视图配置'\n                        }, {\n                            default() {\n                                return h('div', {\n                                    class: 'vxe-form-design--widget-form-item-render-view'\n                                }, renderViewList.value.map(item => {\n                                    return h('div', {\n                                        key: item.value,\n                                        class: 'vxe-form-design--widget-form-item-render-view-item'\n                                    }, [\n                                        h(VxeSwitchComponent, {\n                                            modelValue: formData.listView.enabled,\n                                            disabled: disableView.value,\n                                            'onUpdate:modelValue'(val) {\n                                                formData.listView.enabled = val;\n                                            }\n                                        }),\n                                        h(VxeTextComponent, {\n                                            content: item.label,\n                                            icon: 'vxe-icon-table'\n                                        })\n                                    ]);\n                                }));\n                            }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: '默认视图'\n                        }, {\n                            default() {\n                                return [\n                                    h('div', {\n                                        class: 'vxe-form-design--widget-form-item-devices'\n                                    }, [\n                                        showPc\n                                            ? h('div', {\n                                                class: 'vxe-form-design--widget-form-item-devices-item'\n                                            }, [\n                                                h('div', {\n                                                    class: 'vxe-form-design--widget-form-item-devices-left'\n                                                }, [\n                                                    h(VxeTextComponent, {\n                                                        icon: getIcon().FORM_DESIGN_PROPS_PC,\n                                                        content: getI18n('vxe.formDesign.widgetProp.displaySetting.pc')\n                                                    })\n                                                ]),\n                                                h(VxeSelectComponent, {\n                                                    modelValue: formData.pcDefaultView,\n                                                    className: 'vxe-form-design--widget-form-item-devices-select',\n                                                    options: renderViewList.value,\n                                                    'onUpdate:modelValue'(val) {\n                                                        formData.pcDefaultView = val;\n                                                    }\n                                                })\n                                            ])\n                                            : createCommentVNode(),\n                                        showMobile\n                                            ? h('div', {\n                                                class: 'vxe-form-design--widget-form-item-devices-item'\n                                            }, [\n                                                h('div', {\n                                                    class: 'vxe-form-design--widget-form-item-devices-left'\n                                                }, [\n                                                    h(VxeTextComponent, {\n                                                        icon: getIcon().FORM_DESIGN_PROPS_MOBILE,\n                                                        content: getI18n('vxe.formDesign.widgetProp.displaySetting.mobile')\n                                                    })\n                                                ]),\n                                                h(VxeSelectComponent, {\n                                                    modelValue: formData.mobileDefaultView,\n                                                    className: 'vxe-form-design--widget-form-item-devices-select',\n                                                    options: renderViewList.value,\n                                                    'onUpdate:modelValue'(val) {\n                                                        formData.mobileDefaultView = val;\n                                                    }\n                                                })\n                                            ])\n                                            : createCommentVNode()\n                                    ])\n                                ];\n                            }\n                        }),\n                        // h(VxeFormItemComponent, {\n                        //   title: '查询配置'\n                        // }, {\n                        //   default () {\n                        //     const { formData } = listDesignReactData\n                        //     return [\n                        //       h('div', {\n                        //         class: 'vxe-list-design--widget-form-item-prop-list'\n                        //       }, [\n                        //         h('span', {}, '折叠字段'),\n                        //         h(VxeRadioGroupComponent, {\n                        //           modelValue: formData.autoFoldFilter,\n                        //           options: refFoldOpts.value,\n                        //           'onUpdate:modelValue' (val) {\n                        //             formData.autoFoldFilter = val\n                        //           }\n                        //         })\n                        //       ])\n                        //     ]\n                        //   }\n                        // }),\n                        h(VxeFormItemComponent, {\n                            title: '列配置'\n                        }, {\n                            default() {\n                                const { formData } = listDesignReactData;\n                                return [\n                                    h('div', {\n                                        class: 'vxe-list-design--widget-form-item-prop-list'\n                                    }, [\n                                        h('span', {}, '显示序号'),\n                                        h(VxeRadioGroupComponent, {\n                                            modelValue: formData.showSeq,\n                                            options: refSeqOpts.value,\n                                            'onUpdate:modelValue'(val) {\n                                                formData.showSeq = val;\n                                            }\n                                        })\n                                    ]),\n                                    h('div', {\n                                        class: 'vxe-list-design--widget-form-item-prop-list'\n                                    }, [\n                                        h('span', {}, '表尾统计'),\n                                        h(VxeRadioGroupComponent, {\n                                            modelValue: formData.showStatistics,\n                                            options: refSeqOpts.value,\n                                            'onUpdate:modelValue'(val) {\n                                                formData.showStatistics = val;\n                                            }\n                                        })\n                                    ])\n                                ];\n                            }\n                        }),\n                        h(VxeFormItemComponent, {\n                            title: '批量操作'\n                        }, {\n                            default() {\n                                const { formData } = listDesignReactData;\n                                return h(VxeRadioGroupComponent, {\n                                    modelValue: formData.showCheckbox,\n                                    options: refCheckboxOpts.value,\n                                    'onUpdate:modelValue'(val) {\n                                        formData.showCheckbox = val;\n                                    }\n                                });\n                            }\n                        }),\n                        systemConfigList.length || customConfigList.length ? renderDefaultCellActionButton() : createCommentVNode()\n                    ];\n                }\n            });\n        };\n    }\n});\n", "import { defineComponent, h, ref } from 'vue';\nimport { getI18n, getIcon } from '@vxe-ui/core';\nimport VxeTabsComponent from '../../tabs/src/tabs';\nimport VxeTabPaneComponent from '../../tabs/src/tab-pane';\nimport { DefaultFieldSettingFormComponent, DefaultParameterSettingFormComponent } from './default-setting-form';\nexport default defineComponent({\n    name: 'ListDesignLayoutSetting',\n    props: {},\n    emits: [],\n    setup() {\n        const activeTab = ref(1);\n        return () => {\n            return h('div', {\n                class: 'vxe-list-design--setting'\n            }, [\n                h('div', {\n                    class: 'vxe-list-design--setting-form'\n                }, [\n                    h(VxeTabsComponent, {\n                        modelValue: activeTab.value,\n                        titleWidth: '50%',\n                        titleAlign: 'center',\n                        padding: true,\n                        class: 'vxe-list-design--setting-form-tabs',\n                        'onUpdate:modelValue'(val) {\n                            activeTab.value = val;\n                        }\n                    }, {\n                        default() {\n                            return [\n                                h(VxeTabPaneComponent, {\n                                    title: getI18n('vxe.listDesign.fieldSettingTab'),\n                                    icon: getIcon().LIST_DESIGN_FIELD_SETTING,\n                                    name: 1\n                                }, {\n                                    default() {\n                                        return h(DefaultFieldSettingFormComponent);\n                                    }\n                                }),\n                                h(VxeTabPaneComponent, {\n                                    title: getI18n('vxe.listDesign.listSettingTab'),\n                                    icon: getIcon().LIST_DESIGN_LIST_SETTING,\n                                    name: 2\n                                }, {\n                                    default() {\n                                        return h(DefaultParameterSettingFormComponent);\n                                    }\n                                })\n                            ];\n                        }\n                    })\n                ])\n            ]);\n        };\n    }\n});\n", "import { renderer } from '@vxe-ui/core';\n// import { handleGetListDesignActionButtonName } from './util'\n/**\n * 列表设计器 - 渲染器\n */\nrenderer.mixin({\n// ActionButtonUpdate: {\n//   createListDesignSettingActionButtonConfig () {\n//     return {\n//       name: handleGetListDesignActionButtonName,\n//       icon: 'vxe-icon-edit',\n//       status: 'primary'\n//     }\n//   }\n// },\n// ActionButtonDelete: {\n//   createListDesignSettingActionButtonConfig () {\n//     return {\n//       name: handleGetListDesignActionButtonName,\n//       icon: 'vxe-icon-delete',\n//       status: 'error'\n//     }\n//   }\n// }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeListDesignComponent from './src/list-design';\nimport { dynamicApp } from '../dynamics';\nimport './render';\nexport const VxeListDesign = Object.assign({}, VxeListDesignComponent, {\n    install(app) {\n        app.component(VxeListDesignComponent.name, VxeListDesignComponent);\n    }\n});\nconst listDesignHandle = {};\ndynamicApp.use(VxeListDesign);\nVxeUI.component(VxeListDesignComponent);\nVxeUI.listDesignHandle = listDesignHandle;\nexport const ListDesign = VxeListDesign;\nexport default VxeListDesign;\n", "import { defineComponent, ref, h, reactive, provide, watch, nextTick, computed, createCommentVNode } from 'vue';\nimport { VxeUI, getConfig, createEvent, getI18n, renderer, useSize } from '../../ui';\nimport { errLog } from '../../ui/src/log';\nimport { toCssUnit } from '../../ui/src/dom';\nimport { getSlotVNs } from '../../ui/src/vn';\nimport { createListDesignActionButton } from '../render/util';\nimport VxeLoadingComponent from '../../loading/src/loading';\nimport XEUtils from 'xe-utils';\nexport default defineComponent({\n    name: 'VxeListView',\n    props: {\n        size: {\n            type: String,\n            default: () => getConfig().listView.size || getConfig().size\n        },\n        config: Object,\n        height: {\n            type: [String, Number],\n            default: () => getConfig().listView.height\n        },\n        loading: Boolean,\n        formData: Object,\n        actionButtons: Array,\n        gridOptions: Object,\n        gridEvents: Object,\n        viewRender: Object\n    },\n    emits: [\n        'cell-action',\n        'update:formData',\n        'update:actionButtons'\n    ],\n    setup(props, context) {\n        const VxeTableGridComponent = VxeUI.getComponent('VxeGrid');\n        const { emit, slots } = context;\n        const xID = XEUtils.uniqueId();\n        const refElem = ref();\n        const refGrid = ref();\n        const { computeSize } = useSize(props);\n        const reactData = reactive({\n            formConfig: {},\n            searchFormData: {},\n            searchFormItems: [],\n            listTableColumns: [],\n            tableColumns: [],\n            footerData: [\n                {} // 默认一行合计\n            ]\n        });\n        const computeGridOptions = computed(() => {\n            const { gridOptions } = props;\n            const { formConfig, tableColumns, searchFormData, searchFormItems, footerData } = reactData;\n            const { showStatistics } = formConfig;\n            const gridOpts = gridOptions || {};\n            const columnOpts = Object.assign({\n                minWidth: 120\n            }, gridOpts.columnConfig);\n            let proxyOpts;\n            if (gridOpts.proxyConfig) {\n                proxyOpts = Object.assign({ autoLoad: false }, gridOpts.proxyConfig);\n            }\n            return Object.assign({}, gridOpts, {\n                columns: tableColumns,\n                columnConfig: columnOpts,\n                showFooter: showStatistics,\n                footerData: showStatistics ? footerData : null,\n                formConfig: {\n                    data: searchFormData,\n                    items: searchFormItems\n                },\n                proxyConfig: proxyOpts\n            });\n        });\n        const computeGridEvents = computed(() => {\n            const { gridEvents } = props;\n            const ons = {};\n            XEUtils.each(gridEvents, (fn, key) => {\n                ons[XEUtils.camelCase(`on-${key}`)] = fn;\n            });\n            return ons;\n        });\n        const refMaps = {\n            refElem,\n            refGrid\n        };\n        const computeMaps = {\n            computeSize\n        };\n        const $xeListView = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const systemConfigList = [];\n        const customConfigList = [];\n        renderer.forEach((item, name) => {\n            const { createListDesignSettingActionButtonConfig } = item;\n            if (createListDesignSettingActionButtonConfig) {\n                const params = { name };\n                const btnConfig = Object.assign(createListDesignActionButton({ code: name }), createListDesignSettingActionButtonConfig(params));\n                if (btnConfig.type === 'custom') {\n                    customConfigList.push(btnConfig);\n                }\n                else {\n                    systemConfigList.push(btnConfig);\n                }\n            }\n        });\n        const configToSearchItems = (searchItems) => {\n            if (searchItems && searchItems.length) {\n                const data = {};\n                const items = searchItems.map(item => {\n                    data[item.field] = null;\n                    return {\n                        field: item.field,\n                        title: item.title,\n                        folding: item.folding,\n                        itemRender: item.itemRender\n                    };\n                });\n                items.push({\n                    field: 'active',\n                    title: '',\n                    folding: false,\n                    collapseNode: searchItems.some(item => item.folding),\n                    itemRender: {\n                        name: 'VxeButtonGroup',\n                        options: [\n                            { content: '查询', icon: 'vxe-icon-search', status: 'primary', type: 'submit' },\n                            { content: '重置', icon: 'vxe-icon-repeat', type: 'reset' }\n                        ]\n                    }\n                });\n                return {\n                    items,\n                    data\n                };\n            }\n            return { items: [], data: {} };\n        };\n        const configToListColumns = (listColumns) => {\n            if (listColumns) {\n                return listColumns.map(item => {\n                    return {\n                        field: item.field,\n                        title: item.title,\n                        visible: !!item.visible,\n                        width: item.width,\n                        cellRender: XEUtils.clone(item.cellRender)\n                    };\n                });\n            }\n            return [];\n        };\n        const clearConfig = () => {\n            emit('update:formData', {});\n            Object.assign(reactData, {\n                formConfig: {},\n                searchFormData: {},\n                searchFormItems: [],\n                listTableColumns: [],\n                tableColumns: [],\n                footerData: [\n                    {} // 默认一行合计\n                ]\n            });\n            return nextTick();\n        };\n        const loadConfig = (config) => {\n            if (config) {\n                const { formConfig, searchItems, listColumns } = config;\n                reactData.formConfig = formConfig || {};\n                setSearchItems(searchItems || []);\n                loadListColumns(listColumns || []);\n            }\n            return nextTick();\n        };\n        const parseForm = (searchItems) => {\n            return configToSearchItems(searchItems || []);\n        };\n        const parseTableColumn = (listColumns, formConfig) => {\n            const formOpts = Object.assign({}, formConfig);\n            const { showSeq, actionButtonList } = formOpts;\n            const columns = [];\n            const rowRecord = {};\n            const cellActionSlot = slots.cellAction;\n            const footerCellSlot = slots.footerCell;\n            if (showSeq) {\n                columns.push({\n                    type: 'seq',\n                    field: '_seq',\n                    fixed: 'left',\n                    width: 70\n                });\n            }\n            configToListColumns(listColumns || []).forEach(conf => {\n                const columnConf = Object.assign({}, conf);\n                if (formOpts.showStatistics && footerCellSlot) {\n                    columnConf.slots = {\n                        footer: (params) => {\n                            return footerCellSlot(Object.assign({}, params));\n                        }\n                    };\n                }\n                if (columnConf.field) {\n                    rowRecord[columnConf.field] = null;\n                }\n                columns.push(columnConf);\n            });\n            if (actionButtonList && actionButtonList.length) {\n                const actionColumn = {\n                    field: '_active',\n                    title: getI18n('vxe.table.actionTitle'),\n                    fixed: 'right',\n                    width: 'auto'\n                };\n                const btnOptions = [];\n                actionButtonList.forEach(btnItem => {\n                    if (btnItem.type === 'custom') {\n                        return {\n                            content: btnItem.name,\n                            name: btnItem.code,\n                            icon: btnItem.icon\n                        };\n                    }\n                    const btnConfig = systemConfigList.find(item => item.code === btnItem.code);\n                    let btnName = btnItem.name;\n                    let btnIcon = btnItem.icon;\n                    let btnStatus = btnItem.status;\n                    let btnPermissionCode = btnItem.permissionCode;\n                    let btnClassify = btnItem.classify;\n                    if (btnConfig) {\n                        const nameConfig = btnConfig.name;\n                        btnIcon = btnConfig.icon || '';\n                        btnStatus = btnConfig.status || '';\n                        btnPermissionCode = btnConfig.permissionCode || '';\n                        btnClassify = btnConfig.classify || '';\n                        btnName = XEUtils.toValueString(XEUtils.isFunction(nameConfig) ? nameConfig({ name: btnConfig.code || '' }) : nameConfig);\n                    }\n                    if (!btnClassify || btnClassify === 'cellButton') {\n                        btnOptions.push({\n                            content: btnName,\n                            name: btnItem.code,\n                            icon: btnIcon,\n                            status: btnStatus,\n                            permissionCode: btnPermissionCode\n                        });\n                    }\n                });\n                if (cellActionSlot) {\n                    actionColumn.slots = {\n                        default(params) {\n                            return cellActionSlot(Object.assign(Object.assign({}, params), { buttons: btnOptions }));\n                        }\n                    };\n                }\n                else {\n                    actionColumn.cellRender = {\n                        name: 'VxeButtonGroup',\n                        props: {\n                            mode: 'text'\n                        },\n                        options: btnOptions,\n                        events: {\n                            click(params, btnParams) {\n                                const { option } = btnParams;\n                                dispatchEvent('cell-action', Object.assign(Object.assign({}, params), { button: option }), btnParams.$event);\n                            }\n                        }\n                    };\n                }\n                columns.push(actionColumn);\n            }\n            return { rowRecord, columns, actionButtons: actionButtonList };\n        };\n        const parseConfig = (config) => {\n            const { formConfig, searchItems, listColumns } = config || {};\n            const { columns, rowRecord, actionButtons } = parseTableColumn(listColumns || [], formConfig || reactData.formConfig);\n            const { data, items } = parseForm(searchItems || []);\n            return {\n                formData: data,\n                formItems: items,\n                tableColumns: columns,\n                tableRecord: rowRecord,\n                actionButtons\n            };\n        };\n        const getTableRecord = (configOrListColumns) => {\n            if (XEUtils.isArray(configOrListColumns)) {\n                const { rowRecord } = parseTableColumn(configOrListColumns, reactData.formConfig);\n                return rowRecord;\n            }\n            if (configOrListColumns) {\n                const { formConfig, listColumns } = configOrListColumns;\n                const { rowRecord } = parseTableColumn(listColumns || [], formConfig || reactData.formConfig);\n                return rowRecord;\n            }\n            return {};\n        };\n        const getQueryFilter = () => {\n            const { searchFormData, searchFormItems } = reactData;\n            const items = [];\n            const rest = {\n                items,\n                type: 'and'\n            };\n            const $grid = refGrid.value;\n            if (!$grid) {\n                return rest;\n            }\n            searchFormItems.forEach(item => {\n                const { field } = item;\n                const itemValue = searchFormData[field];\n                if (itemValue) {\n                    const condition = [];\n                    condition.push({\n                        field,\n                        value: itemValue,\n                        match: 'exact',\n                        type: XEUtils.isArray(itemValue) ? 'array' : ''\n                    });\n                    items.push({\n                        condition,\n                        type: 'and'\n                    });\n                }\n            });\n            return rest;\n        };\n        const commitProxy = (code, ...args) => {\n            const $grid = refGrid.value;\n            if ($grid) {\n                return $grid.commitProxy(code, ...args);\n            }\n            return Promise.resolve();\n        };\n        const loadListColumns = (listColumns) => {\n            const { formConfig } = reactData;\n            const listTableColumns = listColumns || [];\n            const { columns, actionButtons } = parseTableColumn(listTableColumns, formConfig);\n            reactData.listTableColumns = listTableColumns;\n            reactData.tableColumns = columns;\n            emit('update:actionButtons', actionButtons);\n            nextTick(() => {\n                const gridOptions = computeGridOptions.value;\n                if (gridOptions.proxyConfig) {\n                    commitProxy('reload');\n                }\n            });\n        };\n        const setSearchItems = (searchItems) => {\n            const { data, items } = configToSearchItems(searchItems);\n            reactData.searchFormData = data;\n            reactData.searchFormItems = items;\n            emit('update:formData', data);\n            return nextTick();\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $listView: $xeListView }, params));\n        };\n        const listViewMethods = {\n            dispatchEvent,\n            clearConfig,\n            loadConfig,\n            parseConfig,\n            getTableRecord,\n            getQueryFilter,\n            commitProxy\n        };\n        const listViewPrivateMethods = {};\n        Object.assign($xeListView, listViewMethods, listViewPrivateMethods);\n        const renderVN = () => {\n            const { height, loading } = props;\n            const vSize = computeSize.value;\n            const gridSlot = slots.grid;\n            const gridOptions = computeGridOptions.value;\n            const gridEvents = computeGridEvents.value;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-list-view', {\n                        [`size--${vSize}`]: vSize,\n                        'is--loading': loading\n                    }],\n                style: height\n                    ? {\n                        height: toCssUnit(height)\n                    }\n                    : null\n            }, [\n                h('div', {\n                    class: 'vxe-list-view--body'\n                }, [\n                    gridSlot\n                        ? h('div', {\n                            class: 'vxe-list-view--grid-wrapper'\n                        }, getSlotVNs(gridSlot({ $listView: $xeListView })))\n                        : (VxeTableGridComponent\n                            ? h(VxeTableGridComponent, Object.assign({}, gridOptions, gridEvents, {\n                                ref: refGrid\n                            }), Object.assign({}, slots, {\n                                default: undefined\n                            }))\n                            : createCommentVNode())\n                ]),\n                /**\n                 * 加载中\n                 */\n                h(VxeLoadingComponent, {\n                    class: 'vxe-list-view--loading',\n                    modelValue: loading\n                })\n            ]);\n        };\n        watch(() => props.config, (value) => {\n            loadConfig(value || {});\n        });\n        if (props.config) {\n            loadConfig(props.config);\n        }\n        provide('$xeListView', $xeListView);\n        if (process.env.NODE_ENV === 'development') {\n            nextTick(() => {\n                if (!VxeTableGridComponent) {\n                    errLog('vxe.error.reqComp', ['vxe-grid']);\n                }\n            });\n        }\n        $xeListView.renderVN = renderVN;\n        return $xeListView;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeListViewComponent from '../list-design/src/list-view';\nimport { dynamicApp } from '../dynamics';\nexport const VxeListView = Object.assign(VxeListViewComponent, {\n    install: function (app) {\n        app.component(VxeListViewComponent.name, VxeListViewComponent);\n    }\n});\ndynamicApp.use(VxeListView);\nVxeUI.component(VxeListViewComponent);\nexport const ListView = VxeListView;\nexport default VxeListView;\n", "import { defineComponent, h, ref, computed, onUnmounted, watch, reactive, nextTick, onActivated, onMounted } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getConfig, globalEvents, globalResize, createEvent, useSize } from '../../ui';\nimport { isScale } from '../../ui/src/dom';\nimport VxeLoadingComponent from '../../loading/src/loading';\nexport default defineComponent({\n    name: 'VxeList',\n    props: {\n        data: Array,\n        height: [Number, String],\n        maxHeight: [Number, String],\n        loading: Boolean,\n        className: [String, Function],\n        size: { type: String, default: () => getConfig().list.size || getConfig().size },\n        autoResize: { type: Boolean, default: () => getConfig().list.autoResize },\n        syncResize: [Boolean, String, Number],\n        virtualYConfig: Object,\n        scrollY: Object\n    },\n    emits: [\n        'scroll'\n    ],\n    setup(props, context) {\n        const { slots, emit } = context;\n        const xID = XEUtils.uniqueId();\n        const browseObj = XEUtils.browse();\n        const { computeSize } = useSize(props);\n        const reactData = reactive({\n            scrollYLoad: false,\n            bodyHeight: 0,\n            customHeight: 0,\n            customMaxHeight: 0,\n            parentHeight: 0,\n            topSpaceHeight: 0,\n            items: []\n        });\n        const internalData = {\n            resizeObserver: undefined,\n            fullData: [],\n            lastScrollLeft: 0,\n            lastScrollTop: 0,\n            scrollYStore: {\n                startIndex: 0,\n                endIndex: 0,\n                visibleSize: 0,\n                offsetSize: 0,\n                rowHeight: 0\n            }\n        };\n        const refElem = ref();\n        const refVirtualWrapper = ref();\n        const refVirtualBody = ref();\n        const refMaps = {\n            refElem\n        };\n        const $xeList = {\n            xID,\n            props,\n            context,\n            reactData,\n            internalData,\n            getRefMaps: () => refMaps\n        };\n        const computeSYOpts = computed(() => {\n            return Object.assign({}, getConfig().list.virtualYConfig || getConfig().list.scrollY, props.virtualYConfig || props.scrollY);\n        });\n        const computeStyles = computed(() => {\n            const { height, maxHeight } = props;\n            const { customHeight, customMaxHeight } = reactData;\n            const style = {};\n            if (height) {\n                style.height = `${customHeight}px`;\n            }\n            else if (maxHeight) {\n                style.height = 'auto';\n                style.maxHeight = `${customMaxHeight}px`;\n            }\n            return style;\n        });\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $list: $xeList }, params));\n        };\n        const calcTableHeight = (key) => {\n            const { parentHeight } = reactData;\n            const val = props[key];\n            let num = 0;\n            if (val) {\n                if (val === '100%' || val === 'auto') {\n                    num = parentHeight;\n                }\n                else {\n                    if (isScale(val)) {\n                        num = Math.floor((XEUtils.toInteger(val) || 1) / 100 * parentHeight);\n                    }\n                    else {\n                        num = XEUtils.toNumber(val);\n                    }\n                    num = Math.max(40, num);\n                }\n            }\n            return num;\n        };\n        const updateHeight = () => {\n            reactData.customHeight = calcTableHeight('height');\n            reactData.customMaxHeight = calcTableHeight('maxHeight');\n        };\n        const updateYSpace = () => {\n            const { scrollYLoad } = reactData;\n            const { scrollYStore, fullData } = internalData;\n            reactData.bodyHeight = scrollYLoad ? fullData.length * scrollYStore.rowHeight : 0;\n            reactData.topSpaceHeight = scrollYLoad ? Math.max(scrollYStore.startIndex * scrollYStore.rowHeight, 0) : 0;\n        };\n        const handleData = () => {\n            const { scrollYLoad } = reactData;\n            const { fullData, scrollYStore } = internalData;\n            reactData.items = scrollYLoad ? fullData.slice(scrollYStore.startIndex, scrollYStore.endIndex) : fullData.slice(0);\n            return nextTick();\n        };\n        const updateYData = () => {\n            handleData();\n            updateYSpace();\n        };\n        const computeScrollLoad = () => {\n            return nextTick().then(() => {\n                const { scrollYLoad } = reactData;\n                const { scrollYStore } = internalData;\n                const virtualBodyElem = refVirtualBody.value;\n                const sYOpts = computeSYOpts.value;\n                let rowHeight = 0;\n                let firstItemElem;\n                if (virtualBodyElem) {\n                    if (sYOpts.sItem) {\n                        firstItemElem = virtualBodyElem.querySelector(sYOpts.sItem);\n                    }\n                    if (!firstItemElem) {\n                        firstItemElem = virtualBodyElem.children[0];\n                    }\n                }\n                if (firstItemElem) {\n                    rowHeight = firstItemElem.offsetHeight;\n                }\n                rowHeight = Math.max(12, rowHeight);\n                scrollYStore.rowHeight = rowHeight;\n                // 计算 Y 逻辑\n                if (scrollYLoad) {\n                    const scrollBodyElem = refVirtualWrapper.value;\n                    const visibleYSize = Math.max(8, Math.ceil(scrollBodyElem.clientHeight / rowHeight));\n                    const offsetYSize = sYOpts.oSize ? XEUtils.toNumber(sYOpts.oSize) : (browseObj.edge ? 10 : 0);\n                    scrollYStore.offsetSize = offsetYSize;\n                    scrollYStore.visibleSize = visibleYSize;\n                    scrollYStore.endIndex = Math.max(scrollYStore.startIndex + visibleYSize + offsetYSize, scrollYStore.endIndex);\n                    updateYData();\n                }\n                else {\n                    updateYSpace();\n                }\n            });\n        };\n        /**\n         * 清除滚动条\n         */\n        const clearScroll = () => {\n            const scrollBodyElem = refVirtualWrapper.value;\n            if (scrollBodyElem) {\n                scrollBodyElem.scrollTop = 0;\n            }\n            return nextTick();\n        };\n        /**\n         * 如果有滚动条，则滚动到对应的位置\n         * @param {Number} scrollLeft 左距离\n         * @param {Number} scrollTop 上距离\n         */\n        const scrollTo = (scrollLeft, scrollTop) => {\n            const scrollBodyElem = refVirtualWrapper.value;\n            if (XEUtils.isNumber(scrollLeft)) {\n                scrollBodyElem.scrollLeft = scrollLeft;\n            }\n            if (XEUtils.isNumber(scrollTop)) {\n                scrollBodyElem.scrollTop = scrollTop;\n            }\n            if (reactData.scrollYLoad) {\n                return new Promise(resolve => {\n                    setTimeout(() => {\n                        nextTick(() => {\n                            resolve();\n                        });\n                    }, 50);\n                });\n            }\n            return nextTick();\n        };\n        /**\n         * 刷新滚动条\n         */\n        const refreshScroll = () => {\n            const { lastScrollLeft, lastScrollTop } = internalData;\n            return clearScroll().then(() => {\n                if (lastScrollLeft || lastScrollTop) {\n                    internalData.lastScrollLeft = 0;\n                    internalData.lastScrollTop = 0;\n                    return scrollTo(lastScrollLeft, lastScrollTop);\n                }\n            });\n        };\n        /**\n         * 重新计算列表\n         */\n        const recalculate = () => {\n            const el = refElem.value;\n            if (el) {\n                const parentEl = el.parentElement;\n                reactData.parentHeight = parentEl ? parentEl.clientHeight : 0;\n                updateHeight();\n                if (el.clientWidth && el.clientHeight) {\n                    return computeScrollLoad();\n                }\n            }\n            return nextTick();\n        };\n        const loadYData = (evnt) => {\n            const { scrollYStore } = internalData;\n            const { startIndex, endIndex, visibleSize, offsetSize, rowHeight } = scrollYStore;\n            const scrollBodyElem = evnt.target;\n            const scrollTop = scrollBodyElem.scrollTop;\n            const toVisibleIndex = Math.floor(scrollTop / rowHeight);\n            const offsetStartIndex = Math.max(0, toVisibleIndex - 1 - offsetSize);\n            const offsetEndIndex = toVisibleIndex + visibleSize + offsetSize;\n            if (toVisibleIndex <= startIndex || toVisibleIndex >= endIndex - visibleSize - 1) {\n                if (startIndex !== offsetStartIndex || endIndex !== offsetEndIndex) {\n                    scrollYStore.startIndex = offsetStartIndex;\n                    scrollYStore.endIndex = offsetEndIndex;\n                    updateYData();\n                }\n            }\n        };\n        const scrollEvent = (evnt) => {\n            const scrollBodyElem = evnt.target;\n            const scrollTop = scrollBodyElem.scrollTop;\n            const scrollLeft = scrollBodyElem.scrollLeft;\n            const isX = scrollLeft !== internalData.lastScrollLeft;\n            const isY = scrollTop !== internalData.lastScrollTop;\n            internalData.lastScrollTop = scrollTop;\n            internalData.lastScrollLeft = scrollLeft;\n            if (reactData.scrollYLoad) {\n                loadYData(evnt);\n            }\n            dispatchEvent('scroll', { scrollLeft, scrollTop, isX, isY }, evnt);\n        };\n        /**\n         * 加载数据\n         * @param {Array} datas 数据\n         */\n        const loadData = (datas) => {\n            const { scrollYStore } = internalData;\n            const sYOpts = computeSYOpts.value;\n            const fullData = datas || [];\n            Object.assign(scrollYStore, {\n                startIndex: 0,\n                endIndex: 1,\n                visibleSize: 0\n            });\n            internalData.fullData = fullData;\n            // 如果gt为0，则总是启用\n            reactData.scrollYLoad = !!sYOpts.enabled && sYOpts.gt > -1 && (sYOpts.gt === 0 || sYOpts.gt <= fullData.length);\n            handleData();\n            return computeScrollLoad().then(() => {\n                refreshScroll();\n            });\n        };\n        const listMethods = {\n            dispatchEvent,\n            loadData,\n            /**\n             * 重新加载数据\n             * @param {Array} datas 数据\n             */\n            reloadData(datas) {\n                clearScroll();\n                return loadData(datas);\n            },\n            recalculate,\n            scrollTo,\n            refreshScroll,\n            clearScroll\n        };\n        Object.assign($xeList, listMethods);\n        const dataFlag = ref(0);\n        watch(() => props.data ? props.data.length : -1, () => {\n            dataFlag.value++;\n        });\n        watch(() => props.data, () => {\n            dataFlag.value++;\n        });\n        watch(dataFlag, () => {\n            loadData(props.data || []);\n        });\n        watch(() => props.height, () => {\n            recalculate();\n        });\n        watch(() => props.maxHeight, () => {\n            recalculate();\n        });\n        watch(() => props.syncResize, (value) => {\n            if (value) {\n                recalculate();\n                nextTick(() => setTimeout(() => recalculate()));\n            }\n        });\n        onActivated(() => {\n            recalculate().then(() => refreshScroll());\n        });\n        nextTick(() => {\n            loadData(props.data || []);\n        });\n        onMounted(() => {\n            recalculate();\n            if (props.autoResize) {\n                const el = refElem.value;\n                const resizeObserver = globalResize.create(() => recalculate());\n                resizeObserver.observe(el);\n                if (el) {\n                    resizeObserver.observe(el.parentElement);\n                }\n                internalData.resizeObserver = resizeObserver;\n            }\n            globalEvents.on($xeList, 'resize', recalculate);\n        });\n        onUnmounted(() => {\n            const { resizeObserver } = internalData;\n            if (resizeObserver) {\n                resizeObserver.disconnect();\n            }\n            globalEvents.off($xeList, 'resize');\n        });\n        const renderVN = () => {\n            const { className, loading } = props;\n            const { bodyHeight, topSpaceHeight, items } = reactData;\n            const defaultSlot = slots.default;\n            const vSize = computeSize.value;\n            const styles = computeStyles.value;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-list', className ? (XEUtils.isFunction(className) ? className({ $list: $xeList }) : className) : '', {\n                        [`size--${vSize}`]: vSize,\n                        'is--loading': loading\n                    }]\n            }, [\n                h('div', {\n                    ref: refVirtualWrapper,\n                    class: 'vxe-list--virtual-wrapper',\n                    style: styles,\n                    onScroll: scrollEvent\n                }, [\n                    h('div', {\n                        class: 'vxe-list--y-space',\n                        style: {\n                            height: bodyHeight ? `${bodyHeight}px` : ''\n                        }\n                    }),\n                    h('div', {\n                        ref: refVirtualBody,\n                        class: 'vxe-list--body',\n                        style: {\n                            marginTop: topSpaceHeight ? `${topSpaceHeight}px` : ''\n                        }\n                    }, defaultSlot ? defaultSlot({ items, $list: $xeList }) : [])\n                ]),\n                /**\n                 * 加载中\n                 */\n                h(VxeLoadingComponent, {\n                    class: 'vxe-list--loading',\n                    modelValue: loading\n                })\n            ]);\n        };\n        $xeList.renderVN = renderVN;\n        return $xeList;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeListComponent from './src/list';\nimport { dynamicApp } from '../dynamics';\nexport const VxeList = Object.assign(VxeListComponent, {\n    install(app) {\n        app.component(VxeListComponent.name, VxeListComponent);\n    }\n});\ndynamicApp.use(VxeList);\nVxeUI.component(VxeListComponent);\nexport const List = VxeList;\nexport default VxeList;\n", "import { defineComponent, ref, h, reactive, inject, resolveComponent, createCommentVNode, watch, computed, nextTick, onBeforeUnmount, onMounted } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getConfig, getIcon, createEvent, permission, useSize, globalEvents } from '../../ui';\nimport { toCssUnit } from '../../ui/src/dom';\nimport { getLastZIndex, nextZIndex } from '../../ui/src/utils';\nimport { getSlotVNs } from '../../ui/src/vn';\nimport VxeLoadingComponent from '../../loading/src/loading';\nexport default defineComponent({\n    name: 'VxeMenu',\n    props: {\n        modelValue: [String, Number],\n        expandAll: Boolean,\n        collapsed: {\n            type: Boolean,\n            default: null\n        },\n        collapseFixed: Boolean,\n        loading: Boolean,\n        options: {\n            type: Array,\n            default: () => []\n        },\n        size: {\n            type: String,\n            default: () => getConfig().image.size || getConfig().size\n        }\n    },\n    emits: [\n        'update:modelValue',\n        'click'\n    ],\n    setup(props, context) {\n        const { emit, slots } = context;\n        const xID = XEUtils.uniqueId();\n        const $xeLayoutAside = inject('$xeLayoutAside', null);\n        const refElem = ref();\n        const refCollapseElem = ref();\n        const { computeSize } = useSize(props);\n        const reactData = reactive({\n            initialized: !!props.collapsed,\n            isEnterCollapse: false,\n            collapseStyle: {},\n            collapseZindex: 0,\n            activeName: props.modelValue,\n            menuList: [],\n            itemHeight: 1\n        });\n        const refMaps = {\n            refElem\n        };\n        const computeIsCollapsed = computed(() => {\n            const { collapsed } = props;\n            if (XEUtils.isBoolean(collapsed)) {\n                return collapsed;\n            }\n            if ($xeLayoutAside) {\n                return !!$xeLayoutAside.props.collapsed;\n            }\n            return false;\n        });\n        const computeCollapseWidth = computed(() => {\n            let collapseWidth = '';\n            if ($xeLayoutAside) {\n                collapseWidth = $xeLayoutAside.props.collapseWidth || '';\n            }\n            return collapseWidth;\n        });\n        const computeCollapseEnterWidth = computed(() => {\n            let width = '';\n            if ($xeLayoutAside) {\n                width = $xeLayoutAside.props.width || '';\n            }\n            return width;\n        });\n        const computeMaps = {\n            computeSize\n        };\n        const $xeMenu = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const getMenuTitle = (item) => {\n            return `${item.title || item.name}`;\n        };\n        const updateZindex = () => {\n            if (reactData.collapseZindex < getLastZIndex()) {\n                reactData.collapseZindex = nextZIndex();\n            }\n        };\n        const updateActiveMenu = (isDefExpand) => {\n            const { activeName } = reactData;\n            XEUtils.eachTree(reactData.menuList, (item, index, items, path, parent, nodes) => {\n                if (item.itemKey === activeName) {\n                    nodes.forEach(obj => {\n                        obj.isActive = true;\n                        if (isDefExpand) {\n                            obj.isExpand = true;\n                        }\n                    });\n                    item.isExactActive = true;\n                }\n                else {\n                    item.isExactActive = false;\n                    item.isActive = false;\n                }\n            }, { children: 'childList' });\n        };\n        const updateMenuConfig = () => {\n            const { options, expandAll } = props;\n            reactData.menuList = XEUtils.mapTree(options, (item, index, items, path, parent) => {\n                const objItem = Object.assign(Object.assign({}, item), { parentKey: parent ? (parent.name || path.slice(0, path.length - 1).join(',')) : '', level: path.length, itemKey: item.name || path.join(','), isExactActive: false, isActive: false, isExpand: XEUtils.isBoolean(item.expanded) ? item.expanded : !!expandAll, hasChild: item.children && item.children.length > 0 });\n                return objItem;\n            }, { children: 'children', mapChildren: 'childList' });\n        };\n        const updateCollapseStyle = () => {\n            const { collapseFixed } = props;\n            if (collapseFixed) {\n                nextTick(() => {\n                    const { isEnterCollapse } = reactData;\n                    const isCollapsed = computeIsCollapsed.value;\n                    const collapseEnterWidth = computeCollapseEnterWidth.value;\n                    const collapseWidth = computeCollapseWidth.value;\n                    const el = refElem.value;\n                    if (el) {\n                        const clientRect = el.getBoundingClientRect();\n                        const parentNode = el.parentNode;\n                        reactData.collapseStyle = isCollapsed\n                            ? {\n                                top: toCssUnit(clientRect.top),\n                                left: toCssUnit(clientRect.left),\n                                height: toCssUnit(parentNode.clientHeight),\n                                width: isEnterCollapse ? (collapseEnterWidth ? toCssUnit(collapseEnterWidth) : '') : (collapseWidth ? toCssUnit(collapseWidth) : ''),\n                                zIndex: reactData.collapseZindex\n                            }\n                            : {};\n                    }\n                });\n            }\n        };\n        const handleCollapseMenu = () => {\n            const { collapseFixed } = props;\n            if (collapseFixed) {\n                const { initialized } = reactData;\n                const isCollapsed = computeIsCollapsed.value;\n                if (isCollapsed) {\n                    if (!initialized) {\n                        reactData.initialized = true;\n                        nextTick(() => {\n                            const collapseEl = refCollapseElem.value;\n                            if (collapseEl) {\n                                document.body.appendChild(collapseEl);\n                            }\n                        });\n                    }\n                }\n                reactData.isEnterCollapse = false;\n                updateZindex();\n                updateCollapseStyle();\n            }\n        };\n        const handleClickIconCollapse = (evnt, item) => {\n            const { hasChild, isExpand } = item;\n            if (hasChild) {\n                evnt.stopPropagation();\n                evnt.preventDefault();\n                item.isExpand = !isExpand;\n            }\n        };\n        const emitModel = (value) => {\n            reactData.activeName = value;\n            emit('update:modelValue', value);\n        };\n        const handleClickMenu = (evnt, item) => {\n            const { itemKey, routerLink, hasChild } = item;\n            if (routerLink) {\n                emitModel(itemKey);\n                handleMenuMouseleave();\n            }\n            else {\n                if (hasChild) {\n                    handleClickIconCollapse(evnt, item);\n                }\n                else {\n                    emitModel(itemKey);\n                    handleMenuMouseleave();\n                }\n            }\n            dispatchEvent('click', { menu: item }, evnt);\n        };\n        const handleMenuMouseenter = () => {\n            const { collapseStyle } = reactData;\n            const collapseEnterWidth = computeCollapseEnterWidth.value;\n            reactData.collapseStyle = Object.assign({}, collapseStyle, {\n                width: collapseEnterWidth ? toCssUnit(collapseEnterWidth) : ''\n            });\n            reactData.isEnterCollapse = true;\n        };\n        const handleMenuMouseleave = () => {\n            const { collapseStyle } = reactData;\n            const el = refElem.value;\n            reactData.collapseStyle = Object.assign({}, collapseStyle, {\n                width: el ? toCssUnit(el.offsetWidth) : ''\n            });\n            reactData.isEnterCollapse = false;\n        };\n        const callSlot = (slotFunc, params) => {\n            if (slotFunc) {\n                if (XEUtils.isString(slotFunc)) {\n                    slotFunc = slots[slotFunc] || null;\n                }\n                if (XEUtils.isFunction(slotFunc)) {\n                    return getSlotVNs(slotFunc(params));\n                }\n            }\n            return [];\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $menu: $xeMenu }, params));\n        };\n        const menuMethods = {\n            dispatchEvent\n        };\n        const menuPrivateMethods = {};\n        Object.assign($xeMenu, menuMethods, menuPrivateMethods);\n        const renderMenuTitle = (item) => {\n            const { icon, isExpand, hasChild, slots: itemSlots } = item;\n            const optionSlot = itemSlots ? itemSlots.default : slots.option;\n            const title = getMenuTitle(item);\n            const isCollapsed = computeIsCollapsed.value;\n            return [\n                h('div', {\n                    class: 'vxe-menu--item-link-icon'\n                }, icon\n                    ? [\n                        h('i', {\n                            class: icon\n                        })\n                    ]\n                    : []),\n                optionSlot\n                    ? h('div', {\n                        class: 'vxe-menu--item-custom-title'\n                    }, callSlot(optionSlot, {\n                        option: item,\n                        collapsed: isCollapsed\n                    }))\n                    : h('div', {\n                        class: 'vxe-menu--item-link-title',\n                        title\n                    }, title),\n                hasChild\n                    ? h('div', {\n                        class: 'vxe-menu--item-link-collapse',\n                        onClick(evnt) {\n                            handleClickIconCollapse(evnt, item);\n                        }\n                    }, [\n                        h('i', {\n                            class: isExpand ? getIcon().MENU_ITEM_EXPAND_OPEN : getIcon().MENU_ITEM_EXPAND_CLOSE\n                        })\n                    ])\n                    : createCommentVNode()\n            ];\n        };\n        const renderDefaultChildren = (item) => {\n            const { itemKey, level, hasChild, isActive, isExactActive, isExpand, routerLink, childList } = item;\n            const { isEnterCollapse } = reactData;\n            const isCollapsed = computeIsCollapsed.value;\n            if (item.permissionCode) {\n                if (!permission.checkVisible(item.permissionCode)) {\n                    return createCommentVNode();\n                }\n            }\n            return h('div', {\n                key: itemKey,\n                class: ['vxe-menu--item-wrapper', `vxe-menu--item-level${level}`, {\n                        'is--exact-active': isExactActive,\n                        'is--active': isActive,\n                        'is--expand': (!isCollapsed || isEnterCollapse) && isExpand\n                    }]\n            }, [\n                routerLink\n                    ? h(resolveComponent('router-link'), {\n                        class: 'vxe-menu--item-link',\n                        to: routerLink,\n                        onClick(evnt) {\n                            handleClickMenu(evnt, item);\n                        }\n                    }, {\n                        default: () => renderMenuTitle(item)\n                    })\n                    : h('div', {\n                        class: 'vxe-menu--item-link',\n                        onClick(evnt) {\n                            handleClickMenu(evnt, item);\n                        }\n                    }, renderMenuTitle(item)),\n                hasChild\n                    ? h('div', {\n                        class: 'vxe-menu--item-group'\n                    }, childList.map(child => renderDefaultChildren(child)))\n                    : createCommentVNode()\n            ]);\n        };\n        const renderCollapseChildren = (item) => {\n            const { itemKey, level, hasChild, isActive, isExactActive, routerLink, childList } = item;\n            if (item.permissionCode) {\n                if (!permission.checkVisible(item.permissionCode)) {\n                    return createCommentVNode();\n                }\n            }\n            return h('div', {\n                key: itemKey,\n                class: ['vxe-menu--item-wrapper', `vxe-menu--item-level${level}`, {\n                        'is--exact-active': isExactActive,\n                        'is--active': isActive\n                    }]\n            }, [\n                routerLink\n                    ? h(resolveComponent('router-link'), {\n                        class: 'vxe-menu--item-link',\n                        to: routerLink,\n                        onClick(evnt) {\n                            handleClickMenu(evnt, item);\n                        }\n                    }, {\n                        default: () => renderMenuTitle(item)\n                    })\n                    : h('div', {\n                        class: 'vxe-menu--item-link',\n                        onClick(evnt) {\n                            handleClickMenu(evnt, item);\n                        }\n                    }, renderMenuTitle(item)),\n                hasChild\n                    ? h('div', {\n                        class: 'vxe-menu--item-group'\n                    }, childList.map(child => renderDefaultChildren(child)))\n                    : createCommentVNode()\n            ]);\n        };\n        const renderVN = () => {\n            const { loading } = props;\n            const { initialized, menuList, collapseStyle, isEnterCollapse } = reactData;\n            const vSize = computeSize.value;\n            const isCollapsed = computeIsCollapsed.value;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-menu', {\n                        [`size--${vSize}`]: vSize,\n                        'is--collapsed': isCollapsed,\n                        'is--loading': loading\n                    }]\n            }, [\n                h('div', {\n                    class: 'vxe-menu--item-list'\n                }, menuList.map(child => isCollapsed ? renderCollapseChildren(child) : renderDefaultChildren(child))),\n                initialized\n                    ? h('div', {\n                        ref: refCollapseElem,\n                        class: ['vxe-menu--collapse-wrapper', {\n                                [`size--${vSize}`]: vSize,\n                                'is--collapsed': isCollapsed,\n                                'is--enter': isEnterCollapse,\n                                'is--loading': loading\n                            }],\n                        style: collapseStyle,\n                        onMouseenter: handleMenuMouseenter,\n                        onMouseleave: handleMenuMouseleave\n                    }, [\n                        isCollapsed\n                            ? h('div', {\n                                class: 'vxe-menu--item-list'\n                            }, menuList.map(child => renderDefaultChildren(child)))\n                            : createCommentVNode()\n                    ])\n                    : createCommentVNode(),\n                /**\n                 * 加载中\n                 */\n                h(VxeLoadingComponent, {\n                    class: 'vxe-list-view--loading',\n                    modelValue: loading\n                })\n            ]);\n        };\n        const optFlag = ref(0);\n        watch(() => props.options ? props.options.length : -1, () => {\n            optFlag.value++;\n        });\n        watch(() => props.options, () => {\n            optFlag.value++;\n        });\n        watch(optFlag, () => {\n            updateMenuConfig();\n            updateActiveMenu(true);\n        });\n        watch(() => props.modelValue, (val) => {\n            reactData.activeName = val;\n        });\n        watch(() => reactData.activeName, () => {\n            updateActiveMenu(true);\n        });\n        watch(computeIsCollapsed, () => {\n            handleCollapseMenu();\n        });\n        onMounted(() => {\n            globalEvents.on($xeMenu, 'resize', updateCollapseStyle);\n            updateCollapseStyle();\n        });\n        onBeforeUnmount(() => {\n            globalEvents.off($xeMenu, 'resize');\n            const collapseEl = refCollapseElem.value;\n            if (collapseEl) {\n                const parentNode = collapseEl.parentNode;\n                if (parentNode) {\n                    parentNode.removeChild(collapseEl);\n                }\n            }\n        });\n        updateMenuConfig();\n        updateActiveMenu(true);\n        $xeMenu.renderVN = renderVN;\n        return $xeMenu;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeMenuComponent from './src/menu';\nimport { dynamicApp } from '../dynamics';\nexport const VxeMenu = Object.assign({}, VxeMenuComponent, {\n    install(app) {\n        app.component(VxeMenuComponent.name, VxeMenuComponent);\n    }\n});\ndynamicApp.use(VxeMenu);\nVxeUI.component(VxeMenuComponent);\nexport const Menu = VxeMenu;\nexport default VxeMenu;\n", "import { defineComponent, ref, h, reactive, computed, onMounted, onBeforeUnmount } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getConfig, useSize, createEvent, globalEvents, renderEmptyElement } from '../../ui';\nimport { toCssUnit } from '../../ui/src/dom';\nexport default defineComponent({\n    name: 'VxeNoticeBar',\n    props: {\n        duration: [String, Number],\n        direction: {\n            type: String,\n            default: () => getConfig().noticeBar.direction\n        },\n        speed: {\n            type: String,\n            default: () => getConfig().noticeBar.speed\n        },\n        content: String,\n        vertical: Boolean,\n        loop: {\n            type: Boolean\n        },\n        size: {\n            type: String,\n            default: () => getConfig().noticeBar.size || getConfig().size\n        }\n    },\n    emits: [],\n    setup(props, context) {\n        const { slots, emit } = context;\n        const xID = XEUtils.uniqueId();\n        const { computeSize } = useSize(props);\n        const refElem = ref();\n        const refContentElem = ref();\n        const reactData = reactive({\n            animationDuration: 0\n        });\n        const refMaps = {\n            refElem\n        };\n        const computeNoticeText = computed(() => {\n            const { content } = props;\n            return `${content || ''}`;\n        });\n        const computeMaps = {};\n        const $xeNoticeBar = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $noticeBar: $xeNoticeBar }, params));\n        };\n        const noticeBarMethods = {\n            dispatchEvent\n        };\n        const noticeBarPrivateMethods = {};\n        const updateAnimationStyle = () => {\n            const { speed } = props;\n            const contEl = refContentElem.value;\n            if (contEl) {\n                let sRate = 46;\n                if (speed === 'fast') {\n                    sRate = 118;\n                }\n                else if (speed === 'slow') {\n                    sRate = 18;\n                }\n                reactData.animationDuration = Math.ceil(contEl.scrollWidth / sRate);\n            }\n        };\n        Object.assign($xeNoticeBar, noticeBarMethods, noticeBarPrivateMethods);\n        const renderVN = () => {\n            const { vertical, duration, direction } = props;\n            const { animationDuration } = reactData;\n            const vSize = computeSize.value;\n            const noticeText = computeNoticeText.value;\n            const defaultSlot = slots.default;\n            const prefixSlot = slots.prefix;\n            const suffixSlot = slots.suffix;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-notice-bar', `is--${vertical ? 'vertical' : 'horizontal'}`, `dir--${direction || 'left'}`, {\n                        [`size--${vSize}`]: vSize\n                    }]\n            }, [\n                prefixSlot\n                    ? h('div', {\n                        class: 'vxe-notice-bar--prefix'\n                    }, prefixSlot({}))\n                    : renderEmptyElement($xeNoticeBar),\n                h('div', {\n                    class: 'vxe-notice-bar--content'\n                }, [\n                    h('div', {\n                        ref: refContentElem,\n                        class: 'vxe-notice-bar--inner'\n                    }, [\n                        h('div', {\n                            class: 'vxe-notice-bar--wrapper',\n                            style: {\n                                animationDuration: `${duration ? toCssUnit(duration, 's') : animationDuration}s`\n                            }\n                        }, defaultSlot ? defaultSlot({}) : noticeText)\n                    ])\n                ]),\n                suffixSlot\n                    ? h('div', {\n                        class: 'vxe-notice-bar--suffix'\n                    }, suffixSlot({}))\n                    : renderEmptyElement($xeNoticeBar)\n            ]);\n        };\n        $xeNoticeBar.renderVN = renderVN;\n        onMounted(() => {\n            globalEvents.on($xeNoticeBar, 'resize', updateAnimationStyle);\n            updateAnimationStyle();\n        });\n        onBeforeUnmount(() => {\n            globalEvents.off($xeNoticeBar, 'resize');\n        });\n        return $xeNoticeBar;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeNoticeBarComponent from './src/notice-bar';\nimport { dynamicApp } from '../dynamics';\nexport const VxeNoticeBar = Object.assign({}, VxeNoticeBarComponent, {\n    install(app) {\n        app.component(VxeNoticeBarComponent.name, VxeNoticeBarComponent);\n    }\n});\ndynamicApp.use(VxeNoticeBar);\nVxeUI.component(VxeNoticeBarComponent);\nexport const NoticeBar = VxeNoticeBar;\nexport default VxeNoticeBar;\n", "import { watch } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { OptionInfo } from './option-info';\nexport function isOption(option) {\n    return option instanceof OptionInfo;\n}\nexport function createOption($xeSelect, _vm) {\n    return isOption(_vm) ? _vm : new OptionInfo($xeSelect, _vm);\n}\nexport function watchOption(props, option) {\n    Object.keys(props).forEach(name => {\n        watch(() => props[name], (value) => {\n            option.update(name, value);\n        });\n    });\n}\nexport function assembleOption($xeSelect, el, option, $xeOptgroup) {\n    const { reactData } = $xeSelect;\n    const { staticOptions } = reactData;\n    const parentElem = el.parentNode;\n    const parentOption = $xeOptgroup ? $xeOptgroup.optionConfig : null;\n    const parentCols = parentOption ? parentOption.options : staticOptions;\n    if (parentElem && parentCols) {\n        parentCols.splice(XEUtils.arrayIndexOf(parentElem.children, el), 0, option);\n        reactData.staticOptions = staticOptions.slice(0);\n    }\n}\nexport function destroyOption($xeSelect, option) {\n    const { reactData } = $xeSelect;\n    const { staticOptions } = reactData;\n    const matchObj = XEUtils.findTree(staticOptions, (item) => item.id === option.id, { children: 'options' });\n    if (matchObj) {\n        matchObj.items.splice(matchObj.index, 1);\n    }\n    reactData.staticOptions = staticOptions.slice(0);\n}\n", "import XEUtils from 'xe-utils';\nexport class OptionInfo {\n    constructor($xeselect, _vm) {\n        Object.assign(this, {\n            id: XEUtils.uniqueId('option_'),\n            value: _vm.value,\n            label: _vm.label,\n            visible: _vm.visible,\n            className: _vm.className,\n            disabled: _vm.disabled\n        });\n    }\n    update(name, value) {\n        this[name] = value;\n    }\n}\n", "import { defineComponent, h, onUnmounted, provide, inject, ref, onMounted } from 'vue';\nimport { createOption, watchOption, destroyOption, assembleOption } from './util';\nexport default defineComponent({\n    name: 'VxeOptgroup',\n    props: {\n        label: {\n            type: [String, Number, Boolean],\n            default: ''\n        },\n        visible: {\n            type: Boolean,\n            default: null\n        },\n        className: [String, Function],\n        disabled: Boolean\n    },\n    emits: [],\n    setup(props, { slots }) {\n        const elem = ref();\n        const $xeSelect = inject('$xeSelect', {});\n        const optionConfig = createOption($xeSelect, props);\n        const $xeOptgroup = { optionConfig };\n        optionConfig.options = [];\n        provide('$xeOptgroup', $xeOptgroup);\n        watchOption(props, optionConfig);\n        onMounted(() => {\n            const el = elem.value;\n            assembleOption($xeSelect, el, optionConfig);\n        });\n        onUnmounted(() => {\n            destroyOption($xeSelect, optionConfig);\n        });\n        return () => {\n            const defaultSlot = slots.default;\n            return h('div', {\n                ref: elem\n            }, defaultSlot ? defaultSlot({}) : []);\n        };\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeOptgroupComponent from '../select/src/optgroup';\nimport { dynamicApp } from '../dynamics';\nexport const VxeOptgroup = Object.assign(VxeOptgroupComponent, {\n    install: function (app) {\n        app.component(VxeOptgroupComponent.name, VxeOptgroupComponent);\n    }\n});\ndynamicApp.use(VxeOptgroup);\nVxeUI.component(VxeOptgroupComponent);\nexport const Optgroup = VxeOptgroup;\nexport default VxeOptgroup;\n", "import { defineComponent, h, onUnmounted, inject, ref, onMounted } from 'vue';\nimport { createOption, watchOption, destroyOption, assembleOption } from './util';\nexport default defineComponent({\n    name: 'VxeOption',\n    props: {\n        value: [String, Number, Boolean],\n        label: {\n            type: [String, Number, Boolean],\n            default: ''\n        },\n        visible: {\n            type: Boolean,\n            default: null\n        },\n        className: [String, Function],\n        disabled: Boolean\n    },\n    emits: [],\n    setup(props, { slots }) {\n        const elem = ref();\n        const $xeSelect = inject('$xeSelect', {});\n        const $xeOptgroup = inject('$xeOptgroup', null);\n        const optionConfig = createOption($xeSelect, props);\n        optionConfig.slots = slots;\n        watchOption(props, optionConfig);\n        onMounted(() => {\n            const el = elem.value;\n            assembleOption($xeSelect, el, optionConfig, $xeOptgroup);\n        });\n        onUnmounted(() => {\n            destroyOption($xeSelect, optionConfig);\n        });\n        return () => {\n            return h('div', {\n                ref: elem\n            });\n        };\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeOptionComponent from '../select/src/option';\nimport { dynamicApp } from '../dynamics';\nexport const VxeOption = Object.assign(VxeOptionComponent, {\n    install: function (app) {\n        app.component(VxeOptionComponent.name, VxeOptionComponent);\n    }\n});\ndynamicApp.use(VxeOption);\nVxeUI.component(VxeOptionComponent);\nexport const Option = VxeOption;\nexport default VxeOption;\n", "import { defineComponent, h, ref, computed, reactive, inject, nextTick, watch, createCommentVNode } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getConfig, getIcon, getI18n, createEvent, useSize } from '../../ui';\nimport { getFuncText } from '../../ui/src/utils';\nimport { getSlotVNs } from '../../ui/src/vn';\nexport default defineComponent({\n    name: 'VxePasswordInput',\n    props: {\n        modelValue: String,\n        immediate: {\n            type: Boolean,\n            default: true\n        },\n        name: String,\n        clearable: {\n            type: Boolean,\n            default: () => getConfig().passwordInput.clearable\n        },\n        readonly: Boolean,\n        disabled: Boolean,\n        maxLength: [String, Number],\n        placeholder: String,\n        autoComplete: {\n            type: String,\n            default: 'off'\n        },\n        className: String,\n        size: {\n            type: String,\n            default: () => getConfig().passwordInput.size || getConfig().size\n        },\n        prefixIcon: String,\n        suffixIcon: String,\n        controls: {\n            type: Boolean,\n            default: () => getConfig().passwordInput.controls\n        },\n        // 已废弃\n        autocomplete: String\n    },\n    emits: [\n        'update:modelValue',\n        'input',\n        'change',\n        'click',\n        'focus',\n        'blur',\n        'clear',\n        'toggle-visible',\n        'prefix-click',\n        'suffix-click'\n    ],\n    setup(props, context) {\n        const { emit, slots } = context;\n        const $xeForm = inject('$xeForm', null);\n        const formItemInfo = inject('xeFormItemInfo', null);\n        const xID = XEUtils.uniqueId();\n        const { computeSize } = useSize(props);\n        const reactData = reactive({\n            showPwd: false,\n            isActivated: false,\n            inputValue: props.modelValue\n        });\n        const refElem = ref();\n        const refInputTarget = ref();\n        const refMaps = {\n            refElem,\n            refInput: refInputTarget\n        };\n        const $xePasswordInput = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps\n        };\n        let passwordInputMethods = {};\n        const computeIsClearable = computed(() => {\n            return props.clearable;\n        });\n        const computeInpReadonly = computed(() => {\n            const { readonly } = props;\n            return readonly;\n        });\n        const computeInpPlaceholder = computed(() => {\n            const { placeholder } = props;\n            if (placeholder) {\n                return getFuncText(placeholder);\n            }\n            const globalPlaceholder = getConfig().passwordInput.placeholder;\n            if (globalPlaceholder) {\n                return getFuncText(globalPlaceholder);\n            }\n            return getI18n('vxe.base.pleaseInput');\n        });\n        const computeInputType = computed(() => {\n            const { showPwd } = reactData;\n            if (showPwd) {\n                return 'text';\n            }\n            return 'password';\n        });\n        const computeInpImmediate = computed(() => {\n            const { immediate } = props;\n            return immediate;\n        });\n        const triggerEvent = (evnt) => {\n            const { inputValue } = reactData;\n            passwordInputMethods.dispatchEvent(evnt.type, { value: inputValue }, evnt);\n        };\n        const emitInputEvent = (value, evnt) => {\n            const inpImmediate = computeInpImmediate.value;\n            reactData.inputValue = value;\n            if (inpImmediate) {\n                handleChange(value, evnt);\n            }\n            else {\n                passwordInputMethods.dispatchEvent('input', { value }, evnt);\n            }\n        };\n        const inputEvent = (evnt) => {\n            const inputElem = evnt.target;\n            const value = inputElem.value;\n            emitInputEvent(value, evnt);\n        };\n        const handleChange = (value, evnt) => {\n            reactData.inputValue = value;\n            emit('update:modelValue', value);\n            passwordInputMethods.dispatchEvent('input', { value }, evnt);\n            if (XEUtils.toValueString(props.modelValue) !== value) {\n                passwordInputMethods.dispatchEvent('change', { value }, evnt);\n                // 自动更新校验状态\n                if ($xeForm && formItemInfo) {\n                    $xeForm.triggerItemEvent(evnt, formItemInfo.itemConfig.field, value);\n                }\n            }\n        };\n        const changeEvent = (evnt) => {\n            triggerEvent(evnt);\n            const { inputValue } = reactData;\n            // 自动更新校验状态\n            if ($xeForm && formItemInfo) {\n                $xeForm.triggerItemEvent(evnt, formItemInfo.itemConfig.field, inputValue);\n            }\n        };\n        const focusEvent = (evnt) => {\n            reactData.isActivated = true;\n            triggerEvent(evnt);\n        };\n        const blurEvent = (evnt) => {\n            const { inputValue } = reactData;\n            const value = inputValue;\n            passwordInputMethods.dispatchEvent('blur', { value }, evnt);\n            // 自动更新校验状态\n            if ($xeForm && formItemInfo) {\n                $xeForm.triggerItemEvent(evnt, formItemInfo.itemConfig.field, value);\n            }\n        };\n        const passwordToggleEvent = (evnt) => {\n            const { readonly, disabled } = props;\n            const { showPwd } = reactData;\n            if (!disabled && !readonly) {\n                reactData.showPwd = !showPwd;\n            }\n            passwordInputMethods.dispatchEvent('toggle-visible', { visible: reactData.showPwd }, evnt);\n        };\n        const clickEvent = (evnt) => {\n            triggerEvent(evnt);\n        };\n        const clearValueEvent = (evnt, value) => {\n            focus();\n            handleChange('', evnt);\n            passwordInputMethods.dispatchEvent('clear', { value }, evnt);\n        };\n        const clickSuffixEvent = (evnt) => {\n            const { disabled } = props;\n            if (!disabled) {\n                const { inputValue } = reactData;\n                passwordInputMethods.dispatchEvent('suffix-click', { value: inputValue }, evnt);\n            }\n        };\n        const clickPrefixEvent = (evnt) => {\n            const { disabled } = props;\n            if (!disabled) {\n                const { inputValue } = reactData;\n                passwordInputMethods.dispatchEvent('prefix-click', { value: inputValue }, evnt);\n            }\n        };\n        const renderPasswordIcon = () => {\n            const { showPwd } = reactData;\n            return h('div', {\n                class: 'vxe-password-input--control-icon',\n                onClick: passwordToggleEvent\n            }, [\n                h('i', {\n                    class: ['vxe-password-input--password-icon', showPwd ? getIcon().PASSWORD_INPUT_SHOW_PWD : getIcon().PASSWORD_INPUT_HIDE_PWD]\n                })\n            ]);\n        };\n        const renderPrefixIcon = () => {\n            const { prefixIcon } = props;\n            const prefixSlot = slots.prefix;\n            return prefixSlot || prefixIcon\n                ? h('div', {\n                    class: 'vxe-password-input--prefix',\n                    onClick: clickPrefixEvent\n                }, [\n                    h('div', {\n                        class: 'vxe-password-input--prefix-icon'\n                    }, prefixSlot\n                        ? getSlotVNs(prefixSlot({}))\n                        : [\n                            h('i', {\n                                class: prefixIcon\n                            })\n                        ])\n                ])\n                : null;\n        };\n        const renderSuffixIcon = () => {\n            const { disabled, suffixIcon, controls } = props;\n            const { inputValue } = reactData;\n            const suffixSlot = slots.suffix;\n            const isClearable = computeIsClearable.value;\n            return isClearable || controls || suffixSlot || suffixIcon\n                ? h('div', {\n                    class: ['vxe-password-input--suffix', {\n                            'is--clear': isClearable && !disabled && !(inputValue === '' || XEUtils.eqNull(inputValue))\n                        }]\n                }, [\n                    isClearable\n                        ? h('div', {\n                            class: 'vxe-password-input--clear-icon',\n                            onClick: clearValueEvent\n                        }, [\n                            h('i', {\n                                class: getIcon().INPUT_CLEAR\n                            })\n                        ])\n                        : createCommentVNode(),\n                    controls ? renderPasswordIcon() : createCommentVNode(),\n                    suffixSlot || suffixIcon\n                        ? h('div', {\n                            class: 'vxe-password-input--suffix-icon',\n                            onClick: clickSuffixEvent\n                        }, suffixSlot\n                            ? getSlotVNs(suffixSlot({}))\n                            : [\n                                h('i', {\n                                    class: suffixIcon\n                                })\n                            ])\n                        : createCommentVNode()\n                ])\n                : null;\n        };\n        passwordInputMethods = {\n            dispatchEvent(type, params, evnt) {\n                emit(type, createEvent(evnt, { $passwordInput: $xePasswordInput }, params));\n            },\n            focus() {\n                const inputElem = refInputTarget.value;\n                reactData.isActivated = true;\n                inputElem.focus();\n                return nextTick();\n            },\n            blur() {\n                const inputElem = refInputTarget.value;\n                inputElem.blur();\n                reactData.isActivated = false;\n                return nextTick();\n            },\n            select() {\n                const inputElem = refInputTarget.value;\n                inputElem.select();\n                reactData.isActivated = false;\n                return nextTick();\n            }\n        };\n        Object.assign($xePasswordInput, passwordInputMethods);\n        watch(() => props.modelValue, (val) => {\n            reactData.inputValue = val;\n        });\n        const renderVN = () => {\n            const { className, name, disabled, readonly, autocomplete, autoComplete, maxLength } = props;\n            const { inputValue, isActivated } = reactData;\n            const vSize = computeSize.value;\n            const inpReadonly = computeInpReadonly.value;\n            const inputType = computeInputType.value;\n            const inpPlaceholder = computeInpPlaceholder.value;\n            const isClearable = computeIsClearable.value;\n            const prefix = renderPrefixIcon();\n            const suffix = renderSuffixIcon();\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-password-input', className, {\n                        [`size--${vSize}`]: vSize,\n                        'is--prefix': !!prefix,\n                        'is--suffix': !!suffix,\n                        'is--readonly': readonly,\n                        'is--disabled': disabled,\n                        'is--active': isActivated,\n                        'show--clear': isClearable && !disabled && !(inputValue === '' || XEUtils.eqNull(inputValue))\n                    }],\n                spellcheck: false\n            }, [\n                prefix || createCommentVNode(),\n                h('div', {\n                    class: 'vxe-password-input--wrapper'\n                }, [\n                    h('input', {\n                        ref: refInputTarget,\n                        class: 'vxe-password-input--inner',\n                        value: inputValue,\n                        name,\n                        type: inputType,\n                        placeholder: inpPlaceholder,\n                        readonly: inpReadonly,\n                        disabled,\n                        autocomplete: autocomplete || autoComplete,\n                        maxlength: maxLength,\n                        onClick: clickEvent,\n                        onInput: inputEvent,\n                        onChange: changeEvent,\n                        onFocus: focusEvent,\n                        onBlur: blurEvent\n                    })\n                ]),\n                suffix || createCommentVNode()\n            ]);\n        };\n        $xePasswordInput.renderVN = renderVN;\n        return $xePasswordInput;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxePasswordInputComponent from './src/password-input';\nimport { dynamicApp } from '../dynamics';\nexport const VxePasswordInput = Object.assign({}, VxePasswordInputComponent, {\n    install(app) {\n        app.component(VxePasswordInputComponent.name, VxePasswordInputComponent);\n    }\n});\ndynamicApp.use(VxePasswordInput);\nVxeUI.component(VxePasswordInputComponent);\nexport const PasswordInput = VxePasswordInput;\nexport default VxePasswordInput;\n", "import { defineComponent, ref, h, reactive, inject, onMounted, onUnmounted, createCommentVNode } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { createEvent } from '../../ui';\nimport { assemblePageBreak, destroyPageBreak } from './util';\nexport default defineComponent({\n    name: 'VxePrintPageBreak',\n    props: {},\n    emits: [],\n    setup(props, context) {\n        const { slots, emit } = context;\n        const xID = XEUtils.uniqueId();\n        const $xePrint = inject('$xePrint', null);\n        const refElem = ref();\n        const reactData = reactive({});\n        const refMaps = {\n            refElem\n        };\n        const computeMaps = {};\n        const pageBreakConfig = reactive({\n            id: xID,\n            slots\n        });\n        const $xePrintPageBreak = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $print: $xePrint }, params));\n        };\n        const printPageBreakMethods = {\n            dispatchEvent\n        };\n        const printPageBreakPrivateMethods = {};\n        Object.assign($xePrintPageBreak, printPageBreakMethods, printPageBreakPrivateMethods);\n        if (!$xePrint) {\n            $xePrintPageBreak.renderVN = () => {\n                return createCommentVNode();\n            };\n            return $xePrintPageBreak;\n        }\n        const renderVN = () => {\n            return h('div', {\n                ref: refElem\n            });\n        };\n        onMounted(() => {\n            const elem = refElem.value;\n            if ($xePrint && elem) {\n                assemblePageBreak($xePrint, elem, pageBreakConfig);\n            }\n        });\n        onUnmounted(() => {\n            if ($xePrint) {\n                destroyPageBreak($xePrint, pageBreakConfig);\n            }\n        });\n        $xePrintPageBreak.renderVN = renderVN;\n        return $xePrintPageBreak;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import XEUtils from 'xe-utils';\nconst browseObj = XEUtils.browse();\n// 打印\nlet printFrame;\n// 默认导出或打印的 HTML 样式\nconst defaultHtmlStyle = 'body{margin:0;padding:0;color:#000000;font-size:14px;font-family:\"Microsoft YaHei\",微软雅黑,\"MicrosoftJhengHei\",华文细黑,STHeiti,MingLiu}body *{-webkit-box-sizing:border-box;box-sizing:border-box}.vxe-table{border-collapse:collapse;text-align:left;border-spacing:0}.vxe-table:not(.is--print){table-layout:fixed}.vxe-table,.vxe-table th,.vxe-table td,.vxe-table td{border-color:#D0D0D0;border-style:solid;border-width:0}.vxe-table.is--print{width:100%}.border--default,.border--full,.border--outer{border-top-width:1px}.border--default,.border--full,.border--outer{border-left-width:1px}.border--outer,.border--default th,.border--default td,.border--full th,.border--full td,.border--outer th,.border--inner th,.border--inner td{border-bottom-width:1px}.border--default,.border--outer,.border--full th,.border--full td{border-right-width:1px}.border--default th,.border--full th,.border--outer th{background-color:#f8f8f9}.vxe-table td>div,.vxe-table th>div{padding:.5em .4em}.col--center{text-align:center}.col--right{text-align:right}.vxe-table:not(.is--print) .col--ellipsis>div{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;word-break:break-all}.vxe-table--tree-node{text-align:left}.vxe-table--tree-node-wrapper{position:relative}.vxe-table--tree-icon-wrapper{position:absolute;top:50%;width:1em;height:1em;text-align:center;-webkit-transform:translateY(-50%);transform:translateY(-50%);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer}.vxe-table--tree-unfold-icon,.vxe-table--tree-fold-icon{position:absolute;width:0;height:0;border-style:solid;border-width:.5em;border-right-color:transparent;border-bottom-color:transparent}.vxe-table--tree-unfold-icon{left:.3em;top:0;border-left-color:#939599;border-top-color:transparent}.vxe-table--tree-fold-icon{left:0;top:.3em;border-left-color:transparent;border-top-color:#939599}.vxe-table--tree-cell{display:block;padding-left:1.5em}.vxe-table input[type=\"checkbox\"]{margin:0}.vxe-table input[type=\"checkbox\"],.vxe-table input[type=\"radio\"],.vxe-table input[type=\"checkbox\"]+span,.vxe-table input[type=\"radio\"]+span{vertical-align:middle;padding-left:0.4em}';\nexport function createPrintFrame() {\n    const frame = document.createElement('iframe');\n    frame.className = 'vxe-table--print-frame';\n    return frame;\n}\nfunction appendPrintFrame() {\n    if (!printFrame.parentNode) {\n        document.body.appendChild(printFrame);\n    }\n}\nfunction afterPrintEvent() {\n    requestAnimationFrame(removeFrame);\n}\nfunction removeFrame() {\n    if (printFrame) {\n        if (printFrame.parentNode) {\n            try {\n                printFrame.contentDocument.write('');\n            }\n            catch (e) { }\n            printFrame.parentNode.removeChild(printFrame);\n        }\n        printFrame = null;\n    }\n}\nfunction getExportBlobByString(str, type) {\n    return new Blob([str], { type: `text/${type};charset=utf-8;` });\n}\nconst printMargin = 80;\nfunction createHtmlPage(opts, printHtml) {\n    const { customStyle } = opts;\n    return [\n        '<!DOCTYPE html><html>',\n        '<head>',\n        '<meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no,minimal-ui\">',\n        `<title>${opts.title || ''}</title>`,\n        opts._pageBreaks || (opts.pageBreaks && opts.pageBreaks.length) ? '<style media=\"print\">@page {size: auto;margin: 0mm;}</style>' : '',\n        `<style>.vxe-print-slots{display: none;}.vxe-print-page-break.align--center{text-align:center;}.vxe-print-page-break.align--left{text-align:left;}.vxe-print-page-break.align--right{text-align:right;}.vxe-print-page-break--header-title{font-size:1.8em;text-align:center;line-height:${printMargin}px;}.vxe-print-page-break{page-break-before:always;display:flex;flex-direction:column;height:100vh;overflow:hidden;}.vxe-print-page-break--body{display:flex;flex-direction:row;flex-grow:1;overflow: hidden;}.vxe-print-page-break--left,.vxe-print-page-break--right{flex-shrink:0;width:${printMargin}px;height:100%;}.vxe-print-page-break--header,.vxe-print-page-break--footer{flex-shrink:0;height:${printMargin}px;width:100%;}.vxe-print-page-break--content{flex-grow: 1;overflow: hidden;}.vxe-print-page-break--footer-page-number{line-height:${printMargin}px;text-align:center;}</style>`,\n        '<style>.vxe-table{white-space:pre;}</style>',\n        `<style>${defaultHtmlStyle}</style>`,\n        customStyle ? `<style>${customStyle}</style>` : '',\n        '</head>',\n        '<body>',\n        `${printHtml}`,\n        '</body>',\n        '</html>'\n    ].join('');\n}\nfunction handlePrint(opts, printHtml = '') {\n    const { beforeMethod } = opts;\n    if (beforeMethod) {\n        printHtml = beforeMethod({ content: printHtml, html: printHtml, options: opts }) || '';\n    }\n    printHtml = createHtmlPage(opts, printHtml);\n    const blob = getExportBlobByString(printHtml, 'html');\n    return new Promise(resolve => {\n        if (browseObj.msie) {\n            removeFrame();\n            printFrame = createPrintFrame();\n            appendPrintFrame();\n            printFrame.contentDocument.write(printHtml);\n            printFrame.contentDocument.execCommand('print');\n            setTimeout(() => {\n                resolve({\n                    status: true\n                });\n            }, 300);\n        }\n        else {\n            if (!printFrame) {\n                printFrame = createPrintFrame();\n                printFrame.onload = (evnt) => {\n                    if (evnt.target.src) {\n                        evnt.target.contentWindow.onafterprint = afterPrintEvent;\n                        evnt.target.contentWindow.print();\n                    }\n                    resolve({\n                        status: true\n                    });\n                };\n                printFrame.onerror = () => {\n                    resolve({\n                        status: false\n                    });\n                };\n            }\n            appendPrintFrame();\n            printFrame.src = URL.createObjectURL(blob);\n        }\n    });\n}\nfunction createPageBreak(opts) {\n    const { title, showPageNumber, align, headerAlign, footerAlign, showAllPageTitle } = opts;\n    const pageBreaks = opts.pageBreaks || [];\n    const pageCount = pageBreaks.length;\n    return pageBreaks.map((item, index) => {\n        const bodyHtml = item.bodyHtml;\n        const headerHtml = item.headerHtml || opts.headerHtml;\n        const footerHtml = item.footerHtml || opts.footerHtml;\n        const leftHtml = item.leftHtml || opts.leftHtml;\n        const rightHtml = item.rightHtml || opts.rightHtml;\n        const currentPage = index + 1;\n        const params = {\n            currentPage,\n            pageCount\n        };\n        return [\n            `<div class=\"${['vxe-print-page-break', align ? `align--${align}` : ''].join(' ')}\">`,\n            `<div class=\"${['vxe-print-page-break--header', headerAlign ? `align--${headerAlign}` : ''].join(' ')}\">`,\n            headerHtml\n                ? `${XEUtils.isFunction(headerHtml) ? headerHtml(params) : (headerHtml || '')}`\n                : (title && (showAllPageTitle || !index) ? `<div class=\"vxe-print-page-break--header-title\">${title || ''}</div>` : ''),\n            '</div>',\n            '<div class=\"vxe-print-page-break--body\">',\n            `<div class=\"vxe-print-page-break--left\">${XEUtils.isFunction(leftHtml) ? leftHtml(params) : (leftHtml || '')}</div>`,\n            `<div class=\"vxe-print-page-break--content\">${XEUtils.isFunction(bodyHtml) ? bodyHtml(params) : (bodyHtml || '')}</div>`,\n            `<div class=\"vxe-print-page-break--right\">${XEUtils.isFunction(rightHtml) ? rightHtml(params) : (rightHtml || '')}</div>`,\n            '</div>',\n            `<div class=\"${['vxe-print-page-break--footer', footerAlign ? `align--${footerAlign}` : ''].join(' ')}\">`,\n            footerHtml\n                ? `${XEUtils.isFunction(footerHtml) ? footerHtml(params) : (footerHtml || '')}`\n                : (showPageNumber ? `<div class=\"vxe-print-page-break--footer-page-number\">${currentPage}/${pageCount}</div>` : ''),\n            '</div>',\n            '</div>'\n        ].join('');\n    }).join('');\n}\nexport const printHtml = (options) => {\n    const opts = Object.assign({ _pageBreaks: false, customLayout: true }, options);\n    if (opts.sheetName) {\n        opts.title = opts.title || opts.sheetName;\n    }\n    if (opts.style) {\n        opts.customStyle = opts.customStyle || opts.style;\n    }\n    if (opts.beforePrintMethod) {\n        opts.beforeMethod = opts.beforeMethod || opts.beforePrintMethod;\n    }\n    if (opts.pageBreaks && opts.pageBreaks.length) {\n        return handlePrint(opts, createPageBreak(opts));\n    }\n    const printHtml = opts.html || opts.content;\n    return handlePrint(opts, printHtml);\n};\nexport function assemblePageBreak($xePageBreak, elem, pageBreakConfig) {\n    const staticPageBreaks = $xePageBreak.reactData.staticPageBreaks;\n    const parentElem = elem.parentNode;\n    if (parentElem && staticPageBreaks) {\n        staticPageBreaks.splice(XEUtils.arrayIndexOf(parentElem.children, elem), 0, pageBreakConfig);\n        $xePageBreak.reactData.staticPageBreaks = staticPageBreaks.slice(0);\n    }\n}\nexport function destroyPageBreak($xePageBreak, pageBreakConfig) {\n    $xePageBreak.reactData.staticPageBreaks = $xePageBreak.reactData.staticPageBreaks.filter(item => item.id !== pageBreakConfig.id);\n}\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxePrintPageBreakComponent from '../print/src/page-break';\nimport { dynamicApp } from '../dynamics';\nexport const VxePrintPageBreak = Object.assign({}, VxePrintPageBreakComponent, {\n    install(app) {\n        app.component(VxePrintPageBreakComponent.name, VxePrintPageBreakComponent);\n    }\n});\ndynamicApp.use(VxePrintPageBreak);\nVxeUI.component(VxePrintPageBreakComponent);\nexport const PrintPageBreak = VxePrintPageBreak;\nexport default VxePrintPageBreak;\n", "import { defineComponent, ref, h, reactive, provide, createCommentVNode } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getConfig, createEvent } from '../../ui';\nimport { printHtml } from './util';\nimport { getSlotVNs } from '../../ui/src/vn';\nexport default defineComponent({\n    name: 'VxePrint',\n    props: {\n        align: {\n            type: String,\n            default: () => getConfig().print.align\n        },\n        title: String,\n        headerAlign: {\n            type: String,\n            default: () => getConfig().print.headerAlign\n        },\n        footerAlign: {\n            type: String,\n            default: () => getConfig().print.footerAlign\n        },\n        showPageNumber: {\n            type: Boolean,\n            default: () => getConfig().print.showPageNumber\n        },\n        customLayout: Boolean,\n        pageBreaks: Array,\n        content: String,\n        html: String,\n        headerHtml: String,\n        footerHtml: String,\n        leftHtml: String,\n        rightHtml: String,\n        showAllPageTitle: {\n            type: Boolean,\n            default: () => getConfig().print.showAllPageTitle\n        },\n        customStyle: {\n            type: String,\n            default: () => getConfig().print.customStyle\n        },\n        beforeMethod: Function\n    },\n    emits: [],\n    setup(props, context) {\n        const { slots, emit } = context;\n        const xID = XEUtils.uniqueId();\n        const refElem = ref();\n        const reactData = reactive({\n            staticPageBreaks: []\n        });\n        const refMaps = {\n            refElem\n        };\n        const computeMaps = {};\n        const $xePrint = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $print: $xePrint }, params));\n        };\n        const printMethods = {\n            dispatchEvent,\n            print() {\n                const elem = refElem.value;\n                return printHtml(Object.assign({}, props, {\n                    _pageBreaks: !!reactData.staticPageBreaks.length,\n                    html: (elem ? elem.outerHTML : '') || props.html || props.content || ''\n                }));\n            }\n        };\n        const printPrivateMethods = {};\n        Object.assign($xePrint, printMethods, printPrivateMethods);\n        const renderPageConfigLayouts = () => {\n            const { title, showPageNumber, showAllPageTitle, align, headerAlign, footerAlign } = props;\n            const pageBreaks = props.pageBreaks || [];\n            const pageCount = pageBreaks.length;\n            return pageBreaks.map((item, index) => {\n                const bodyHtml = item.bodyHtml;\n                const headerHtml = item.headerHtml || props.headerHtml;\n                const footerHtml = item.footerHtml || props.footerHtml;\n                const leftHtml = item.leftHtml || props.leftHtml;\n                const rightHtml = item.rightHtml || props.rightHtml;\n                const currentPage = index + 1;\n                const params = {\n                    currentPage,\n                    pageCount\n                };\n                return h('div', {\n                    class: ['vxe-print-page-break', align ? `align--${align}` : '']\n                }, [\n                    h('div', {\n                        class: ['vxe-print-page-break--header', headerAlign ? `align--${headerAlign}` : '']\n                    }, headerHtml\n                        ? `${XEUtils.isFunction(headerHtml) ? headerHtml(params) : (headerHtml || '')}`\n                        : [\n                            title && (showAllPageTitle || !index)\n                                ? h('div', {\n                                    class: 'vxe-print-page-break--header-title'\n                                }, `${title || ''}`)\n                                : createCommentVNode()\n                        ]),\n                    h('div', {\n                        class: 'vxe-print-page-break--body'\n                    }, [\n                        h('div', {\n                            class: 'vxe-print-page-break--left'\n                        }, `${XEUtils.isFunction(leftHtml) ? leftHtml(params) : (leftHtml || '')}`),\n                        h('div', {\n                            class: 'vxe-print-page-break--content'\n                        }, `${XEUtils.isFunction(bodyHtml) ? bodyHtml(params) : (bodyHtml || '')}`),\n                        h('div', {\n                            class: 'vxe-print-page-break--right'\n                        }, `${XEUtils.isFunction(rightHtml) ? rightHtml(params) : (rightHtml || '')}`)\n                    ]),\n                    h('div', {\n                        class: ['vxe-print-page-break--footer', footerAlign ? `align--${footerAlign}` : '']\n                    }, footerHtml\n                        ? `${XEUtils.isFunction(footerHtml) ? footerHtml(params) : (footerHtml || '')}`\n                        : [\n                            showPageNumber\n                                ? h('div', {\n                                    class: 'vxe-print-page-break--footer-page-number'\n                                }, `${currentPage}/${pageCount}`)\n                                : createCommentVNode()\n                        ])\n                ]);\n            });\n        };\n        const renderPageStaticLayouts = () => {\n            const { title, showPageNumber, showAllPageTitle, align, headerAlign, footerAlign } = props;\n            const { staticPageBreaks } = reactData;\n            const pageCount = staticPageBreaks.length;\n            return staticPageBreaks.map((item, index) => {\n                const itemSlots = item.slots || {};\n                const currentPage = index + 1;\n                const defaultSlot = itemSlots.default;\n                const headerSlot = itemSlots.header || slots.header;\n                const footerSlot = itemSlots.footer || slots.footer;\n                const leftSlot = itemSlots.left || slots.left;\n                const rightSlot = itemSlots.right || slots.right;\n                const params = {\n                    currentPage,\n                    pageCount\n                };\n                return h('div', {\n                    class: ['vxe-print-page-break', align ? `align--${align}` : '']\n                }, [\n                    h('div', {\n                        class: ['vxe-print-page-break--header', headerAlign ? `align--${headerAlign}` : '']\n                    }, headerSlot\n                        ? getSlotVNs(headerSlot(params))\n                        : [\n                            title && (showAllPageTitle || !index)\n                                ? h('div', {\n                                    class: 'vxe-print-page-break--header-title'\n                                }, `${title || ''}`)\n                                : createCommentVNode()\n                        ]),\n                    h('div', {\n                        class: 'vxe-print-page-break--body'\n                    }, [\n                        h('div', {\n                            class: 'vxe-print-page-break--left'\n                        }, leftSlot ? getSlotVNs(leftSlot(params)) : []),\n                        h('div', {\n                            class: 'vxe-print-page-break--content'\n                        }, defaultSlot ? getSlotVNs(defaultSlot(params)) : []),\n                        h('div', {\n                            class: 'vxe-print-page-break--right'\n                        }, rightSlot ? getSlotVNs(rightSlot(params)) : [])\n                    ]),\n                    h('div', {\n                        class: ['vxe-print-page-break--footer', footerAlign ? `align--${footerAlign}` : '']\n                    }, footerSlot\n                        ? getSlotVNs(footerSlot(params))\n                        : [\n                            showPageNumber\n                                ? h('div', {\n                                    class: 'vxe-print-page-break--footer-page-number'\n                                }, `${currentPage}/${pageCount}`)\n                                : createCommentVNode()\n                        ])\n                ]);\n            });\n        };\n        const renderVN = () => {\n            const { customLayout } = props;\n            const { staticPageBreaks } = reactData;\n            const defaultSlot = slots.default;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-print']\n            }, customLayout\n                ? (defaultSlot ? getSlotVNs(defaultSlot({})) : [])\n                : ([\n                    h('div', {\n                        key: 'slot',\n                        class: 'vxe-print-slots'\n                    }, defaultSlot ? getSlotVNs(defaultSlot({})) : [])\n                ].concat(staticPageBreaks.length\n                    ? renderPageStaticLayouts()\n                    : renderPageConfigLayouts())));\n        };\n        $xePrint.renderVN = renderVN;\n        provide('$xePrint', $xePrint);\n        return $xePrint;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxePrintComponent from './src/print';\nimport { dynamicApp } from '../dynamics';\nimport { printHtml } from './src/util';\nexport const VxePrint = Object.assign({}, VxePrintComponent, {\n    install(app) {\n        app.component(VxePrintComponent.name, VxePrintComponent);\n    }\n});\ndynamicApp.use(VxePrint);\nVxeUI.component(VxePrintComponent);\nVxeUI.print = printHtml;\nexport const Print = VxePrint;\nexport default VxePrint;\n", "import { defineComponent, h, Teleport, ref, onUnmounted, reactive, inject, computed, nextTick, watch, createCommentVNode } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getConfig, globalEvents, createEvent, useSize } from '../../ui';\nimport { getAbsolutePos, getEventTargetNode } from '../../ui/src/dom';\nimport { getLastZIndex, nextZIndex } from '../../ui/src/utils';\nexport default defineComponent({\n    name: 'VxePulldown',\n    props: {\n        modelValue: Boolean,\n        disabled: Boolean,\n        placement: String,\n        trigger: {\n            type: String,\n            default: getConfig().pulldown.trigger\n        },\n        size: { type: String, default: () => getConfig().size },\n        options: Array,\n        className: {\n            type: [String, Function],\n            default: getConfig().pulldown.className\n        },\n        popupClassName: [String, Function],\n        showPopupShadow: Boolean,\n        destroyOnClose: {\n            type: Boolean,\n            default: getConfig().pulldown.destroyOnClose\n        },\n        transfer: {\n            type: Boolean,\n            default: null\n        }\n    },\n    emits: [\n        'update:modelValue',\n        'click',\n        'option-click',\n        'show-panel',\n        'hide-panel',\n        'visible-change'\n    ],\n    setup(props, context) {\n        const { slots, emit } = context;\n        const $xeModal = inject('$xeModal', null);\n        const $xeDrawer = inject('$xeDrawer', null);\n        const $xeTable = inject('$xeTable', null);\n        const $xeForm = inject('$xeForm', null);\n        const xID = XEUtils.uniqueId();\n        const { computeSize } = useSize(props);\n        const reactData = reactive({\n            initialized: false,\n            panelIndex: 0,\n            panelStyle: {},\n            panelPlacement: null,\n            visiblePanel: false,\n            isAniVisible: false,\n            isActivated: false\n        });\n        const internalData = {\n            hpTimeout: undefined\n        };\n        const refElem = ref();\n        const refPulldownContent = ref();\n        const refPulldownPanel = ref();\n        const computeBtnTransfer = computed(() => {\n            const { transfer } = props;\n            if (transfer === null) {\n                const globalTransfer = getConfig().pulldown.transfer;\n                if (XEUtils.isBoolean(globalTransfer)) {\n                    return globalTransfer;\n                }\n                if ($xeTable || $xeModal || $xeDrawer || $xeForm) {\n                    return true;\n                }\n            }\n            return transfer;\n        });\n        const refMaps = {\n            refElem\n        };\n        const $xePulldown = {\n            xID,\n            props,\n            context,\n            reactData,\n            internalData,\n            getRefMaps: () => refMaps\n        };\n        let pulldownMethods = {};\n        const updateZindex = () => {\n            if (reactData.panelIndex < getLastZIndex()) {\n                reactData.panelIndex = nextZIndex();\n            }\n        };\n        const isPanelVisible = () => {\n            return reactData.visiblePanel;\n        };\n        /**\n         * 手动更新位置\n         */\n        const updatePlacement = () => {\n            return nextTick().then(() => {\n                const { placement } = props;\n                const { panelIndex, visiblePanel } = reactData;\n                const btnTransfer = computeBtnTransfer.value;\n                if (visiblePanel) {\n                    const targetElem = refPulldownContent.value;\n                    const panelElem = refPulldownPanel.value;\n                    if (panelElem && targetElem) {\n                        const targetHeight = targetElem.offsetHeight;\n                        const targetWidth = targetElem.offsetWidth;\n                        const panelHeight = panelElem.offsetHeight;\n                        const panelWidth = panelElem.offsetWidth;\n                        const marginSize = 5;\n                        const panelStyle = {\n                            zIndex: panelIndex\n                        };\n                        const { boundingTop, boundingLeft, visibleHeight, visibleWidth } = getAbsolutePos(targetElem);\n                        let panelPlacement = 'bottom';\n                        if (btnTransfer) {\n                            let left = boundingLeft;\n                            let top = boundingTop + targetHeight;\n                            if (placement === 'top') {\n                                panelPlacement = 'top';\n                                top = boundingTop - panelHeight;\n                            }\n                            else if (!placement) {\n                                // 如果下面不够放，则向上\n                                if (top + panelHeight + marginSize > visibleHeight) {\n                                    panelPlacement = 'top';\n                                    top = boundingTop - panelHeight;\n                                }\n                                // 如果上面不够放，则向下（优先）\n                                if (top < marginSize) {\n                                    panelPlacement = 'bottom';\n                                    top = boundingTop + targetHeight;\n                                }\n                            }\n                            // 如果溢出右边\n                            if (left + panelWidth + marginSize > visibleWidth) {\n                                left -= left + panelWidth + marginSize - visibleWidth;\n                            }\n                            // 如果溢出左边\n                            if (left < marginSize) {\n                                left = marginSize;\n                            }\n                            Object.assign(panelStyle, {\n                                left: `${left}px`,\n                                top: `${top}px`,\n                                minWidth: `${targetWidth}px`\n                            });\n                        }\n                        else {\n                            if (placement === 'top') {\n                                panelPlacement = 'top';\n                                panelStyle.bottom = `${targetHeight}px`;\n                            }\n                            else if (!placement) {\n                                // 如果下面不够放，则向上\n                                if (boundingTop + targetHeight + panelHeight > visibleHeight) {\n                                    // 如果上面不够放，则向下（优先）\n                                    if (boundingTop - targetHeight - panelHeight > marginSize) {\n                                        panelPlacement = 'top';\n                                        panelStyle.bottom = `${targetHeight}px`;\n                                    }\n                                }\n                            }\n                        }\n                        reactData.panelStyle = panelStyle;\n                        reactData.panelPlacement = panelPlacement;\n                    }\n                }\n                return nextTick();\n            });\n        };\n        /**\n         * 显示下拉面板\n         */\n        const showPanel = () => {\n            if (!reactData.initialized) {\n                reactData.initialized = true;\n            }\n            return new Promise(resolve => {\n                if (!props.disabled) {\n                    if (internalData.hpTimeout) {\n                        clearTimeout(internalData.hpTimeout);\n                    }\n                    reactData.isActivated = true;\n                    reactData.isAniVisible = true;\n                    setTimeout(() => {\n                        reactData.visiblePanel = true;\n                        emit('update:modelValue', true);\n                        updatePlacement();\n                        setTimeout(() => {\n                            resolve(updatePlacement());\n                        }, 40);\n                    }, 10);\n                    updateZindex();\n                    dispatchEvent('visible-change', { visible: true }, null);\n                }\n                else {\n                    nextTick(() => {\n                        resolve();\n                    });\n                }\n            });\n        };\n        /**\n         * 隐藏下拉面板\n         */\n        const hidePanel = () => {\n            reactData.visiblePanel = false;\n            dispatchEvent('visible-change', { visible: false }, null);\n            emit('update:modelValue', false);\n            return new Promise(resolve => {\n                if (reactData.isAniVisible) {\n                    internalData.hpTimeout = setTimeout(() => {\n                        reactData.isAniVisible = false;\n                        nextTick(() => {\n                            resolve();\n                        });\n                    }, 350);\n                }\n                else {\n                    nextTick(() => {\n                        resolve();\n                    });\n                }\n            });\n        };\n        /**\n         * 切换下拉面板\n         */\n        const togglePanel = () => {\n            if (reactData.visiblePanel) {\n                return hidePanel();\n            }\n            return showPanel();\n        };\n        const handleOptionEvent = (evnt, option) => {\n            if (!option.disabled) {\n                if (reactData.visiblePanel) {\n                    hidePanel();\n                    dispatchEvent('hide-panel', {}, evnt);\n                }\n                dispatchEvent('option-click', { option }, evnt);\n            }\n        };\n        const clickTargetEvent = (evnt) => {\n            const { trigger } = props;\n            if (trigger === 'click') {\n                if (reactData.visiblePanel) {\n                    hidePanel();\n                    dispatchEvent('hide-panel', {}, evnt);\n                }\n                else {\n                    showPanel();\n                    dispatchEvent('show-panel', {}, evnt);\n                }\n            }\n            dispatchEvent('click', { $pulldown: $xePulldown }, evnt);\n        };\n        const handleGlobalMousewheelEvent = (evnt) => {\n            const { disabled } = props;\n            const { visiblePanel } = reactData;\n            const panelElem = refPulldownPanel.value;\n            if (!disabled) {\n                if (visiblePanel) {\n                    if (getEventTargetNode(evnt, panelElem).flag) {\n                        updatePlacement();\n                    }\n                    else {\n                        hidePanel();\n                        dispatchEvent('hide-panel', {}, evnt);\n                    }\n                }\n            }\n        };\n        const handleGlobalMousedownEvent = (evnt) => {\n            const { disabled } = props;\n            const { visiblePanel } = reactData;\n            const el = refElem.value;\n            const panelElem = refPulldownPanel.value;\n            if (!disabled) {\n                reactData.isActivated = getEventTargetNode(evnt, el).flag || getEventTargetNode(evnt, panelElem).flag;\n                if (visiblePanel && !reactData.isActivated) {\n                    hidePanel();\n                    dispatchEvent('hide-panel', {}, evnt);\n                }\n            }\n        };\n        const handleGlobalBlurEvent = (evnt) => {\n            if (reactData.visiblePanel) {\n                reactData.isActivated = false;\n                hidePanel();\n                dispatchEvent('hide-panel', {}, evnt);\n            }\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $pulldown: $xePulldown }, params));\n        };\n        pulldownMethods = {\n            dispatchEvent,\n            isPanelVisible,\n            togglePanel,\n            showPanel,\n            hidePanel\n        };\n        Object.assign($xePulldown, pulldownMethods);\n        watch(() => props.modelValue, (value) => {\n            reactData.isActivated = !!value;\n            if (value) {\n                showPanel();\n            }\n            else {\n                hidePanel();\n            }\n        });\n        nextTick(() => {\n            if (props.modelValue) {\n                showPanel();\n            }\n            globalEvents.on($xePulldown, 'mousewheel', handleGlobalMousewheelEvent);\n            globalEvents.on($xePulldown, 'mousedown', handleGlobalMousedownEvent);\n            globalEvents.on($xePulldown, 'blur', handleGlobalBlurEvent);\n        });\n        onUnmounted(() => {\n            globalEvents.off($xePulldown, 'mousewheel');\n            globalEvents.off($xePulldown, 'mousedown');\n            globalEvents.off($xePulldown, 'blur');\n        });\n        const renderDefaultPanel = (options) => {\n            const optionSlot = slots.option;\n            return h('div', {\n                class: 'vxe-pulldown--panel-list'\n            }, options\n                ? options.map(item => {\n                    return h('div', {\n                        class: 'vxe-pulldown--panel-item',\n                        onClick(evnt) {\n                            handleOptionEvent(evnt, item);\n                        }\n                    }, optionSlot ? optionSlot({ $pulldown: $xePulldown, option: item }) : `${item.label || ''}`);\n                })\n                : []);\n        };\n        const renderVN = () => {\n            const { className, options, popupClassName, showPopupShadow, destroyOnClose, disabled } = props;\n            const { initialized, isActivated, isAniVisible, visiblePanel, panelStyle, panelPlacement } = reactData;\n            const btnTransfer = computeBtnTransfer.value;\n            const vSize = computeSize.value;\n            const defaultSlot = slots.default;\n            const headerSlot = slots.header;\n            const footerSlot = slots.footer;\n            const dropdownSlot = slots.dropdown;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-pulldown', className ? (XEUtils.isFunction(className) ? className({ $pulldown: $xePulldown }) : className) : '', {\n                        [`size--${vSize}`]: vSize,\n                        'is--visible': visiblePanel,\n                        'is--disabled': disabled,\n                        'is--active': isActivated\n                    }]\n            }, [\n                h('div', {\n                    ref: refPulldownContent,\n                    class: 'vxe-pulldown--content',\n                    onClick: clickTargetEvent\n                }, defaultSlot ? defaultSlot({ $pulldown: $xePulldown }) : []),\n                h(Teleport, {\n                    to: 'body',\n                    disabled: btnTransfer ? !initialized : true\n                }, [\n                    h('div', {\n                        ref: refPulldownPanel,\n                        class: ['vxe-table--ignore-clear vxe-pulldown--panel', popupClassName ? (XEUtils.isFunction(popupClassName) ? popupClassName({ $pulldown: $xePulldown }) : popupClassName) : '', {\n                                [`size--${vSize}`]: vSize,\n                                'is--shadow': showPopupShadow,\n                                'is--transfer': btnTransfer,\n                                'ani--leave': isAniVisible,\n                                'ani--enter': visiblePanel\n                            }],\n                        placement: panelPlacement,\n                        style: panelStyle\n                    }, [\n                        h('div', {\n                            class: 'vxe-pulldown--panel-wrapper'\n                        }, initialized && (destroyOnClose ? (visiblePanel || isAniVisible) : true)\n                            ? [\n                                headerSlot\n                                    ? h('div', {\n                                        class: 'vxe-pulldown--panel-header'\n                                    }, headerSlot({ $pulldown: $xePulldown }))\n                                    : createCommentVNode(),\n                                h('div', {\n                                    class: 'vxe-pulldown--panel-body'\n                                }, dropdownSlot\n                                    ? dropdownSlot({ $pulldown: $xePulldown })\n                                    : [\n                                        renderDefaultPanel(options)\n                                    ]),\n                                footerSlot\n                                    ? h('div', {\n                                        class: 'vxe-pulldown--panel-footer'\n                                    }, footerSlot({ $pulldown: $xePulldown }))\n                                    : createCommentVNode()\n                            ]\n                            : [])\n                    ])\n                ])\n            ]);\n        };\n        $xePulldown.renderVN = renderVN;\n        return $xePulldown;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxePulldownComponent from './src/pulldown';\nimport { dynamicApp } from '../dynamics';\nexport const VxePulldown = Object.assign(VxePulldownComponent, {\n    install: function (app) {\n        app.component(VxePulldownComponent.name, VxePulldownComponent);\n    }\n});\ndynamicApp.use(VxePulldown);\nVxeUI.component(VxePulldownComponent);\nexport const Pulldown = VxePulldown;\nexport default VxePulldown;\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeRadioComponent from './src/radio';\nimport { dynamicApp } from '../dynamics';\nexport const VxeRadio = Object.assign(VxeRadioComponent, {\n    install: function (app) {\n        app.component(VxeRadioComponent.name, VxeRadioComponent);\n    }\n});\ndynamicApp.use(VxeRadio);\nVxeUI.component(VxeRadioComponent);\nexport const Radio = VxeRadio;\nexport default VxeRadio;\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeRadioButtonComponent from '../radio/src/button';\nimport { dynamicApp } from '../dynamics';\nexport const VxeRadioButton = Object.assign(VxeRadioButtonComponent, {\n    install: function (app) {\n        app.component(VxeRadioButtonComponent.name, VxeRadioButtonComponent);\n    }\n});\ndynamicApp.use(VxeRadioButton);\nVxeUI.component(VxeRadioButtonComponent);\nexport const RadioButton = VxeRadioButton;\nexport default VxeRadioButton;\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeRateComponent from './src/rate';\nimport { dynamicApp } from '../dynamics';\nexport const VxeRate = Object.assign({}, VxeRateComponent, {\n    install(app) {\n        app.component(VxeRateComponent.name, VxeRateComponent);\n    }\n});\ndynamicApp.use(VxeRate);\nVxeUI.component(VxeRateComponent);\nexport const Rate = VxeRate;\nexport default VxeRate;\n", "import { defineComponent, ref, h, reactive } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getIcon, createEvent, renderEmptyElement } from '../../ui';\nexport default defineComponent({\n    name: 'VxeResult',\n    props: {\n        imageUrl: String,\n        imageStyle: Object,\n        icon: String,\n        type: [String, Number],\n        status: [String, Number],\n        title: [String, Number],\n        content: [String, Number]\n    },\n    emits: [],\n    setup(props, context) {\n        const { emit, slots } = context;\n        const xID = XEUtils.uniqueId();\n        const refElem = ref();\n        const reactData = reactive({});\n        const refMaps = {\n            refElem\n        };\n        const computeMaps = {};\n        const $xeResult = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $result: $xeResult }, params));\n        };\n        const collapsePaneMethods = {\n            dispatchEvent\n        };\n        const collapsePanePrivateMethods = {};\n        Object.assign($xeResult, collapsePaneMethods, collapsePanePrivateMethods);\n        const renderVN = () => {\n            const { imageUrl, imageStyle, icon, title, type, content } = props;\n            const status = props.status || type;\n            const slotExtra = slots.extra;\n            return h('div', {\n                ref: 'refElem',\n                class: ['vxe-result', {\n                        [`theme--${status}`]: status\n                    }]\n            }, [\n                h('div', {\n                    class: 'vxe-result--inner'\n                }, [\n                    imageUrl\n                        ? h('div', {\n                            class: 'vxe-result--img-wrapper'\n                        }, [\n                            h('img', {\n                                src: imageUrl,\n                                style: imageStyle\n                            })\n                        ])\n                        : h('div', {\n                            class: 'vxe-result--icon-wrapper'\n                        }, [\n                            h('i', {\n                                class: [icon, type ? getIcon()[`RESULT_${type}`.toLocaleUpperCase()] : '']\n                            })\n                        ]),\n                    h('div', {\n                        class: 'vxe-result--title-wrapper'\n                    }, `${title || ''}`),\n                    h('div', {\n                        class: 'vxe-result--content-wrapper'\n                    }, `${content || ''}`),\n                    slotExtra\n                        ? h('div', {\n                            class: 'vxe-result--extra-wrapper'\n                        }, slotExtra({}))\n                        : renderEmptyElement($xeResult)\n                ])\n            ]);\n        };\n        $xeResult.renderVN = renderVN;\n        return $xeResult;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeResultComponent from './src/result';\nimport { dynamicApp } from '../dynamics';\nexport const VxeResult = Object.assign({}, VxeResultComponent, {\n    install(app) {\n        app.component(VxeResultComponent.name, VxeResultComponent);\n    }\n});\ndynamicApp.use(VxeResult);\nVxeUI.component(VxeResultComponent);\nexport const Result = VxeResult;\nexport default VxeResult;\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeRowComponent from './src/row';\nimport { dynamicApp } from '../dynamics';\nexport const VxeRow = Object.assign({}, VxeRowComponent, {\n    install(app) {\n        app.component(VxeRowComponent.name, VxeRowComponent);\n    }\n});\ndynamicApp.use(VxeRow);\nVxeUI.component(VxeRowComponent);\nexport const Row = VxeRow;\nexport default VxeRow;\n", "import { defineComponent, ref, h, reactive, provide, computed, watch, nextTick, onMounted, onUnmounted, onActivated } from 'vue';\nimport { getConfig, getIcon, createEvent, globalEvents, globalResize, renderEmptyElement } from '../../ui';\nimport { getSlotVNs } from '../../ui/src/vn';\nimport { toCssUnit, isScale, addClass, removeClass } from '../../ui/src/dom';\nimport { getGlobalDefaultConfig } from '../../ui/src/utils';\nimport { errLog } from '../../ui/src/log';\nimport XEUtils from 'xe-utils';\nexport default defineComponent({\n    name: 'VxeSplit',\n    props: {\n        width: [Number, String],\n        height: [Number, String],\n        vertical: {\n            type: Boolean,\n            default: () => getConfig().split.vertical\n        },\n        border: {\n            type: Boolean,\n            default: () => getConfig().split.border\n        },\n        padding: {\n            type: Boolean,\n            default: () => getConfig().split.padding\n        },\n        resize: {\n            type: Boolean,\n            default: () => getConfig().split.resize\n        },\n        items: Array,\n        itemConfig: Object,\n        barConfig: Object,\n        actionConfig: Object\n    },\n    emits: [\n        'action-dblclick',\n        'action-click',\n        'toggle-expand',\n        'resize-start',\n        'resize-drag',\n        'resize-end'\n    ],\n    setup(props, context) {\n        const { emit, slots } = context;\n        const xID = XEUtils.uniqueId();\n        const refElem = ref();\n        const reactData = reactive({\n            staticItems: [],\n            itemList: []\n        });\n        const internalData = {};\n        const computeItemOpts = computed(() => {\n            return Object.assign({}, getConfig().split.itemConfig, props.itemConfig);\n        });\n        const computeBarOpts = computed(() => {\n            return Object.assign({}, getConfig().split.barConfig, props.barConfig);\n        });\n        const computeActionOpts = computed(() => {\n            return Object.assign({}, getConfig().split.actionConfig, props.actionConfig);\n        });\n        const computeIsFoldNext = computed(() => {\n            const actionOpts = computeActionOpts.value;\n            return actionOpts.direction === 'next';\n        });\n        const computeVisibleItems = computed(() => {\n            return reactData.itemList.filter(item => item.isVisible);\n        });\n        const computeAutoItems = computed(() => {\n            const { vertical } = props;\n            return reactData.itemList.filter(item => vertical ? !item.height : !item.width);\n        });\n        const computeBarStyle = computed(() => {\n            const barOpts = computeBarOpts.value;\n            const { width, height } = barOpts;\n            const stys = {};\n            if (height) {\n                stys.height = toCssUnit(height);\n            }\n            if (width) {\n                stys.width = toCssUnit(width);\n            }\n            return stys;\n        });\n        const computeMaps = {\n            computeItemOpts,\n            computeBarOpts,\n            computeActionOpts,\n            computeIsFoldNext\n        };\n        const refMaps = {\n            refElem\n        };\n        const $xeSplit = {\n            xID,\n            props,\n            context,\n            reactData,\n            internalData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $split: $xeSplit }, params));\n        };\n        const callSlot = (slotFunc, params) => {\n            if (slotFunc) {\n                if (XEUtils.isString(slotFunc)) {\n                    slotFunc = slots[slotFunc] || null;\n                }\n                if (XEUtils.isFunction(slotFunc)) {\n                    return getSlotVNs(slotFunc(params));\n                }\n            }\n            return [];\n        };\n        const getDefaultActionIcon = (item) => {\n            const { vertical } = props;\n            const { showAction, isExpand } = item;\n            const isFoldNext = computeIsFoldNext.value;\n            const topIcon = 'SPLIT_TOP_ACTION';\n            const bottomIcon = 'SPLIT_BOTTOM_ACTION';\n            const leftIcon = 'SPLIT_LEFT_ACTION';\n            const rightIcon = 'SPLIT_RIGHT_ACTION';\n            if (showAction) {\n                let iconName = '';\n                if (isFoldNext) {\n                    if (vertical) {\n                        iconName = isExpand ? bottomIcon : topIcon;\n                    }\n                    else {\n                        iconName = isExpand ? rightIcon : leftIcon;\n                    }\n                }\n                else {\n                    if (vertical) {\n                        iconName = isExpand ? topIcon : bottomIcon;\n                    }\n                    else {\n                        iconName = isExpand ? leftIcon : rightIcon;\n                    }\n                }\n                if (iconName) {\n                    return getIcon()[iconName];\n                }\n            }\n            return '';\n        };\n        const reset = () => {\n            const { itemList } = reactData;\n            itemList.forEach(item => {\n                item.isExpand = true;\n                item.isVisible = true;\n                item.foldHeight = 0;\n                item.foldWidth = 0;\n                item.resizeHeight = 0;\n                item.resizeWidth = 0;\n            });\n            return nextTick();\n        };\n        const handleLoadItem = (list, isReset) => {\n            const { staticItems } = reactData;\n            const itemDef = {\n                isVisible: true,\n                isExpand: true,\n                renderWidth: 0,\n                resizeWidth: 0,\n                foldWidth: 0,\n                renderHeight: 0,\n                resizeHeight: 0,\n                foldHeight: 0\n            };\n            reactData.itemList = list.map(item => {\n                if (item.slots) {\n                    XEUtils.each(item.slots, (func) => {\n                        if (!XEUtils.isFunction(func)) {\n                            if (!slots[func]) {\n                                errLog('vxe.error.notSlot', [func]);\n                            }\n                        }\n                    });\n                }\n                return Object.assign({}, isReset ? null : itemDef, item, isReset ? itemDef : null, {\n                    id: XEUtils.uniqueId()\n                });\n            });\n            if (staticItems.length) {\n                errLog('vxe.error.errConflicts', ['<vxe-split-pane ...>', 'items']);\n            }\n            return recalculate();\n        };\n        const loadItem = (list) => {\n            return handleLoadItem(list || [], false);\n        };\n        const reloadItem = (list) => {\n            return handleLoadItem(list || [], true);\n        };\n        const recalculate = () => {\n            return nextTick().then(() => {\n                const { vertical } = props;\n                const { itemList } = reactData;\n                const el = refElem.value;\n                if (!el) {\n                    return;\n                }\n                const wrapperWidth = el.clientWidth;\n                const wrapperHeight = el.clientHeight;\n                if (!wrapperWidth || !wrapperHeight) {\n                    return;\n                }\n                const itemOpts = computeItemOpts.value;\n                const allMinWidth = XEUtils.toNumber(itemOpts.minWidth);\n                const allMinHeight = XEUtils.toNumber(itemOpts.minHeight);\n                const residueItems = [];\n                if (vertical) {\n                    let countHeight = 0;\n                    itemList.forEach(item => {\n                        const { height } = item;\n                        let itemHeight = 0;\n                        if (height) {\n                            if (isScale(height)) {\n                                itemHeight = wrapperHeight * XEUtils.toNumber(height);\n                            }\n                            else {\n                                itemHeight = XEUtils.toNumber(height);\n                            }\n                            item.renderHeight = itemHeight;\n                        }\n                        else {\n                            residueItems.push(item);\n                        }\n                        countHeight += itemHeight;\n                    });\n                    if (residueItems.length) {\n                        const reMeanHeight = (wrapperHeight - countHeight) / residueItems.length;\n                        residueItems.forEach(item => {\n                            item.renderHeight = Math.max(XEUtils.toNumber(getGlobalDefaultConfig(item.minHeight, allMinHeight)), reMeanHeight);\n                        });\n                    }\n                }\n                else {\n                    let countWidth = 0;\n                    itemList.forEach(item => {\n                        const { width } = item;\n                        let itemWidth = 0;\n                        if (width) {\n                            if (isScale(width)) {\n                                itemWidth = wrapperWidth * XEUtils.toNumber(width);\n                            }\n                            else {\n                                itemWidth = XEUtils.toNumber(width);\n                            }\n                            item.renderWidth = itemWidth;\n                        }\n                        else {\n                            residueItems.push(item);\n                        }\n                        countWidth += itemWidth;\n                    });\n                    if (residueItems.length) {\n                        const reMeanWidth = (wrapperWidth - countWidth) / residueItems.length;\n                        residueItems.forEach(item => {\n                            item.renderWidth = Math.max(XEUtils.toNumber(getGlobalDefaultConfig(item.minWidth, allMinWidth)), reMeanWidth);\n                        });\n                    }\n                }\n            });\n        };\n        const dragEvent = (evnt) => {\n            const { resize, vertical } = props;\n            const { itemList } = reactData;\n            if (!resize) {\n                return;\n            }\n            evnt.preventDefault();\n            const barEl = evnt.currentTarget;\n            const handleEl = barEl.parentElement;\n            const el = refElem.value;\n            if (!el) {\n                return;\n            }\n            const itemId = handleEl.getAttribute('itemid');\n            const itemIndex = XEUtils.findIndexOf(itemList, item => item.id === itemId);\n            const item = itemList[itemIndex];\n            if (!item) {\n                return;\n            }\n            if (!item.isExpand) {\n                return;\n            }\n            const isFoldNext = computeIsFoldNext.value;\n            const itemOpts = computeItemOpts.value;\n            const allMinWidth = XEUtils.toNumber(itemOpts.minWidth);\n            const allMinHeight = XEUtils.toNumber(itemOpts.minHeight);\n            const targetItem = itemList[itemIndex + (isFoldNext ? 1 : -1)];\n            const targetItemEl = targetItem ? el.querySelector(`.vxe-split-pane[itemid=\"${targetItem.id}\"]`) : null;\n            const currItemEl = item ? el.querySelector(`.vxe-split-pane[itemid=\"${item.id}\"]`) : null;\n            const targetWidth = targetItemEl ? targetItemEl.clientWidth : 0;\n            const currWidth = currItemEl ? currItemEl.clientWidth : 0;\n            const targetHeight = targetItemEl ? targetItemEl.clientHeight : 0;\n            const currHeight = currItemEl ? currItemEl.clientHeight : 0;\n            const targetMinWidth = XEUtils.toNumber(targetItem ? getGlobalDefaultConfig(targetItem.minWidth, allMinWidth) : allMinWidth);\n            const currMinWidth = XEUtils.toNumber(getGlobalDefaultConfig(item.minWidth, allMinWidth));\n            const targetMinHeight = XEUtils.toNumber(targetItem ? getGlobalDefaultConfig(targetItem.minHeight, allMinHeight) : allMinHeight);\n            const currMinHeight = XEUtils.toNumber(getGlobalDefaultConfig(item.minHeight, allMinHeight));\n            const disX = evnt.clientX;\n            const disY = evnt.clientY;\n            addClass(el, 'is--drag');\n            document.onmousemove = (evnt) => {\n                evnt.preventDefault();\n                if (vertical) {\n                    const offsetTop = isFoldNext ? (disY - evnt.clientY) : (evnt.clientY - disY);\n                    if (offsetTop > 0) {\n                        if (targetItem) {\n                            if (currHeight - offsetTop >= currMinHeight) {\n                                const reHeight = currHeight - offsetTop;\n                                targetItem.resizeHeight = targetHeight + offsetTop;\n                                item.resizeHeight = reHeight;\n                                dispatchEvent('resize-drag', { item, name: item.name, offsetHeight: offsetTop, resizeHeight: reHeight, offsetWidth: 0, resizeWidth: 0 }, evnt);\n                            }\n                        }\n                    }\n                    else {\n                        if (targetItem) {\n                            if (targetHeight + offsetTop >= targetMinHeight) {\n                                const reHeight = currHeight - offsetTop;\n                                targetItem.resizeHeight = targetHeight + offsetTop;\n                                item.resizeHeight = reHeight;\n                                dispatchEvent('resize-drag', { item, name: item.name, offsetHeight: offsetTop, resizeHeight: reHeight, offsetWidth: 0, resizeWidth: 0 }, evnt);\n                            }\n                        }\n                    }\n                }\n                else {\n                    const offsetLeft = isFoldNext ? (disX - evnt.clientX) : (evnt.clientX - disX);\n                    if (offsetLeft > 0) {\n                        if (targetItem) {\n                            if (currWidth - offsetLeft >= currMinWidth) {\n                                const reWidth = currWidth - offsetLeft;\n                                targetItem.resizeWidth = targetWidth + offsetLeft;\n                                item.resizeWidth = reWidth;\n                                dispatchEvent('resize-drag', { item, name: item.name, offsetHeight: 0, resizeHeight: 0, offsetWidth: offsetLeft, resizeWidth: reWidth }, evnt);\n                            }\n                        }\n                    }\n                    else {\n                        if (targetItem) {\n                            if (targetWidth + offsetLeft >= targetMinWidth) {\n                                const reWidth = currWidth - offsetLeft;\n                                targetItem.resizeWidth = targetWidth + offsetLeft;\n                                item.resizeWidth = reWidth;\n                                dispatchEvent('resize-drag', { item, name: item.name, offsetHeight: 0, resizeHeight: 0, offsetWidth: offsetLeft, resizeWidth: reWidth }, evnt);\n                            }\n                        }\n                    }\n                }\n            };\n            document.onmouseup = (evnt) => {\n                document.onmousemove = null;\n                document.onmouseup = null;\n                removeClass(el, 'is--drag');\n                dispatchEvent('resize-end', { item, name: item.name, resizeHeight: item.resizeHeight, resizeWidth: item.resizeWidth }, evnt);\n                recalculate();\n            };\n            dispatchEvent('resize-start', { item, name: item.name }, evnt);\n        };\n        const handleItemActionEvent = (evnt) => {\n            const el = refElem.value;\n            if (!el) {\n                return;\n            }\n            const { vertical } = props;\n            const { itemList } = reactData;\n            const isFoldNext = computeIsFoldNext.value;\n            const btnEl = evnt.currentTarget;\n            const handleEl = btnEl.parentElement;\n            const itemId = handleEl.getAttribute('itemid');\n            const itemIndex = XEUtils.findIndexOf(itemList, item => item.id === itemId);\n            const item = itemList[itemIndex];\n            const targetItem = itemList[itemIndex + (isFoldNext ? 1 : -1)];\n            if (item) {\n                const { showAction, isExpand } = item;\n                if (showAction) {\n                    if (vertical) {\n                        if (targetItem) {\n                            targetItem.isVisible = !isExpand;\n                            targetItem.foldHeight = 0;\n                            item.isExpand = !isExpand;\n                            item.isVisible = true;\n                            item.foldHeight = isExpand ? (targetItem.resizeHeight || targetItem.renderHeight) + (item.resizeHeight || item.renderHeight) : 0;\n                        }\n                    }\n                    else {\n                        if (targetItem) {\n                            targetItem.isVisible = !isExpand;\n                            targetItem.foldWidth = 0;\n                            item.isExpand = !isExpand;\n                            item.isVisible = true;\n                            item.foldWidth = isExpand ? (targetItem.resizeWidth || targetItem.renderWidth) + (item.resizeWidth || item.renderWidth) : 0;\n                        }\n                    }\n                    dispatchEvent('toggle-expand', { item, name: item.name, targetItem, targetName: targetItem ? targetItem.name : '', expanded: item.isExpand }, evnt);\n                    recalculate();\n                }\n            }\n        };\n        const handleActionDblclickEvent = (evnt) => {\n            const { itemList } = reactData;\n            const actionOpts = computeActionOpts.value;\n            const btnEl = evnt.currentTarget;\n            const handleEl = btnEl.parentElement;\n            const itemId = handleEl.getAttribute('itemid');\n            const itemIndex = XEUtils.findIndexOf(itemList, item => item.id === itemId);\n            const item = itemList[itemIndex];\n            if (actionOpts.trigger === 'dblclick') {\n                handleItemActionEvent(evnt);\n            }\n            dispatchEvent('action-dblclick', { item, name: item ? item.name : '' }, evnt);\n        };\n        const handleActionClickEvent = (evnt) => {\n            const { itemList } = reactData;\n            const actionOpts = computeActionOpts.value;\n            const btnEl = evnt.currentTarget;\n            const handleEl = btnEl.parentElement;\n            const itemId = handleEl.getAttribute('itemid');\n            const itemIndex = XEUtils.findIndexOf(itemList, item => item.id === itemId);\n            const item = itemList[itemIndex];\n            if (actionOpts.trigger !== 'dblclick') {\n                handleItemActionEvent(evnt);\n            }\n            dispatchEvent('action-click', { item, name: item ? item.name : '' }, evnt);\n        };\n        const handleGlobalResizeEvent = () => {\n            recalculate();\n        };\n        const splitMethods = {\n            dispatchEvent,\n            recalculate,\n            reset,\n            loadItem,\n            reloadItem\n        };\n        const splitPrivateMethods = {};\n        Object.assign($xeSplit, splitMethods, splitPrivateMethods);\n        const renderHandleBar = (item) => {\n            const barStyle = computeBarStyle.value;\n            const actionOpts = computeActionOpts.value;\n            const isFoldNext = computeIsFoldNext.value;\n            const { id, isExpand, showAction } = item;\n            return h('div', {\n                itemid: id,\n                class: ['vxe-split-pane-handle', isFoldNext ? 'to--next' : 'to--prev']\n            }, [\n                h('div', {\n                    class: 'vxe-split-pane-handle-bar',\n                    style: barStyle,\n                    onMousedown: dragEvent\n                }),\n                showAction\n                    ? h('span', {\n                        class: 'vxe-split-pane-action-btn',\n                        onDblclick: handleActionDblclickEvent,\n                        onClick: handleActionClickEvent\n                    }, [\n                        h('i', {\n                            class: (isExpand ? actionOpts.openIcon : actionOpts.closeIcon) || getDefaultActionIcon(item)\n                        })\n                    ])\n                    : renderEmptyElement($xeSplit)\n            ]);\n        };\n        const renderItems = () => {\n            const { border, padding, resize, vertical } = props;\n            const { itemList } = reactData;\n            const visibleItems = computeVisibleItems.value;\n            const autoItems = computeAutoItems.value;\n            const isFoldNext = computeIsFoldNext.value;\n            const itemVNs = [];\n            itemList.forEach((item, index) => {\n                const { id, name, slots, renderHeight, resizeHeight, foldHeight, renderWidth, resizeWidth, foldWidth, isVisible, isExpand } = item;\n                const defaultSlot = slots ? slots.default : null;\n                const stys = {};\n                let itemWidth = isVisible ? (foldWidth || resizeWidth || renderWidth) : 0;\n                let itemHeight = isVisible ? (foldHeight || resizeHeight || renderHeight) : 0;\n                // 至少存在一个自适应\n                if (autoItems.length === 1) {\n                    if (vertical) {\n                        if (!item.height) {\n                            itemHeight = 0;\n                        }\n                    }\n                    else {\n                        if (!item.width) {\n                            itemWidth = 0;\n                        }\n                    }\n                }\n                // 当只剩下一个可视区自动占用 100%\n                if (vertical) {\n                    if (itemHeight) {\n                        stys.height = visibleItems.length === 1 ? '100%' : toCssUnit(itemHeight);\n                    }\n                }\n                else {\n                    if (itemWidth) {\n                        stys.width = visibleItems.length === 1 ? '100%' : toCssUnit(itemWidth);\n                    }\n                }\n                itemVNs.push(h('div', {\n                    itemid: id,\n                    class: ['vxe-split-pane', vertical ? 'is--vertical' : 'is--horizontal', {\n                            'is--resize': resize,\n                            'is--padding': padding,\n                            'is--border': border,\n                            'is--height': itemHeight,\n                            'is--width': itemWidth,\n                            'is--fill': isVisible && !itemHeight && !itemWidth,\n                            'is--handle': index > 0,\n                            'is--expand': isExpand,\n                            'is--hidden': !isVisible\n                        }],\n                    style: stys\n                }, [\n                    index && !isFoldNext ? renderHandleBar(item) : renderEmptyElement($xeSplit),\n                    h('div', {\n                        itemid: id,\n                        class: 'vxe-split-pane--wrapper'\n                    }, [\n                        h('div', {\n                            class: 'vxe-split-pane--inner'\n                        }, defaultSlot ? callSlot(defaultSlot, { name, isVisible, isExpand }) : [])\n                    ]),\n                    isFoldNext && index < itemList.length - 1 ? renderHandleBar(item) : renderEmptyElement($xeSplit)\n                ]));\n            });\n            return h('div', {\n                class: 'vxe-split-wrapper'\n            }, itemVNs);\n        };\n        const renderVN = () => {\n            const { vertical, width, height } = props;\n            const defaultSlot = slots.default;\n            const stys = {};\n            if (height) {\n                stys.height = toCssUnit(height);\n            }\n            if (width) {\n                stys.width = toCssUnit(width);\n            }\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-split', vertical ? 'is--vertical' : 'is--horizontal'],\n                style: stys\n            }, [\n                h('div', {\n                    class: 'vxe-split-slots'\n                }, defaultSlot ? defaultSlot({}) : []),\n                renderItems()\n            ]);\n        };\n        const itemFlag = ref(0);\n        watch(() => props.items ? props.items.length : -1, () => {\n            itemFlag.value++;\n        });\n        watch(() => props.items, () => {\n            itemFlag.value++;\n        });\n        watch(itemFlag, () => {\n            loadItem(props.items || []);\n        });\n        watch(() => reactData.staticItems, (val) => {\n            if (props.items && props.items.length) {\n                errLog('vxe.error.errConflicts', ['<vxe-split-pane ...>', 'items']);\n            }\n            reactData.itemList = val;\n            recalculate();\n        });\n        let resizeObserver;\n        onMounted(() => {\n            nextTick(() => {\n                recalculate();\n            });\n            const el = refElem.value;\n            if (el) {\n                resizeObserver = globalResize.create(() => {\n                    recalculate();\n                });\n                resizeObserver.observe(el);\n            }\n            globalEvents.on($xeSplit, 'resize', handleGlobalResizeEvent);\n        });\n        onUnmounted(() => {\n            if (resizeObserver) {\n                resizeObserver.disconnect();\n            }\n            globalEvents.off($xeSplit, 'resize');\n        });\n        onActivated(() => {\n            recalculate();\n        });\n        if (props.items) {\n            loadItem(props.items);\n        }\n        provide('$xeSplit', $xeSplit);\n        $xeSplit.renderVN = renderVN;\n        return $xeSplit;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeSplitComponent from './src/split';\nimport { dynamicApp } from '../dynamics';\nexport const VxeSplit = Object.assign({}, VxeSplitComponent, {\n    install(app) {\n        app.component(VxeSplitComponent.name, VxeSplitComponent);\n    }\n});\ndynamicApp.use(VxeSplit);\nVxeUI.component(VxeSplitComponent);\nexport const Split = VxeSplit;\nexport default VxeSplit;\n", "import XEUtils from 'xe-utils';\nexport function assembleSplitItem($xeSplit, elem, paneConfig) {\n    const staticItems = $xeSplit.reactData.staticItems;\n    const parentElem = elem.parentNode;\n    if (parentElem) {\n        staticItems.splice(XEUtils.arrayIndexOf(parentElem.children, elem), 0, paneConfig);\n        $xeSplit.reactData.staticItems = staticItems.slice(0);\n    }\n}\nexport function destroySplitItem($xeSplit, paneConfig) {\n    const staticItems = $xeSplit.reactData.staticItems;\n    const index = XEUtils.findIndexOf(staticItems, item => item.id === paneConfig.id);\n    if (index > -1) {\n        staticItems.splice(index, 1);\n    }\n    $xeSplit.reactData.staticItems = staticItems.slice(0);\n}\n", "import { defineComponent, ref, h, reactive, watch, provide, inject, onMounted, onUnmounted } from 'vue';\nimport { createEvent } from '../../ui';\nimport { assembleSplitItem, destroySplitItem } from './util';\nimport XEUtils from 'xe-utils';\nexport default defineComponent({\n    name: 'VxeSplitPane',\n    props: {\n        name: [Number, String],\n        width: [Number, String],\n        height: [Number, String],\n        showAction: Boolean,\n        minWidth: {\n            type: [Number, String],\n            default: () => null\n        },\n        minHeight: {\n            type: [Number, String],\n            default: () => null\n        }\n    },\n    emits: [],\n    setup(props, context) {\n        const { emit, slots } = context;\n        const xID = XEUtils.uniqueId();\n        const $xeSplit = inject('$xeSplit', null);\n        const refElem = ref();\n        const paneConfig = reactive({\n            id: xID,\n            name: props.name,\n            width: props.width,\n            height: props.height,\n            minWidth: props.minWidth,\n            minHeight: props.minHeight,\n            showAction: props.showAction,\n            isVisible: true,\n            isExpand: true,\n            renderWidth: 0,\n            resizeWidth: 0,\n            foldWidth: 0,\n            renderHeight: 0,\n            resizeHeight: 0,\n            foldHeight: 0,\n            slots: slots\n        });\n        const reactData = reactive({});\n        const internalData = {};\n        const computeMaps = {};\n        const refMaps = {\n            refElem\n        };\n        const $xeSplitItem = {\n            xID,\n            props,\n            context,\n            reactData,\n            internalData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $splitPane: $xeSplitItem }, params));\n        };\n        const splitPaneMethods = {\n            dispatchEvent\n        };\n        const splitPanePrivateMethods = {};\n        Object.assign($xeSplitItem, splitPaneMethods, splitPanePrivateMethods);\n        const renderVN = () => {\n            return h('div', {\n                ref: refElem\n            });\n        };\n        watch(() => props.name, (val) => {\n            paneConfig.name = val;\n        });\n        watch(() => props.width, (val) => {\n            paneConfig.width = val;\n        });\n        watch(() => props.height, (val) => {\n            paneConfig.height = val;\n        });\n        watch(() => props.minWidth, (val) => {\n            paneConfig.minWidth = val;\n        });\n        watch(() => props.minHeight, (val) => {\n            paneConfig.minHeight = val;\n        });\n        watch(() => props.showAction, (val) => {\n            paneConfig.showAction = val;\n        });\n        onMounted(() => {\n            const elem = refElem.value;\n            if ($xeSplit && elem) {\n                assembleSplitItem($xeSplit, elem, paneConfig);\n            }\n        });\n        onUnmounted(() => {\n            if ($xeSplit) {\n                destroySplitItem($xeSplit, paneConfig);\n            }\n        });\n        provide('$xeSplitItem', $xeSplitItem);\n        $xeSplitItem.renderVN = renderVN;\n        return $xeSplitItem;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeSplitPaneComponent from '../split/src/split-pane';\nimport { dynamicApp } from '../dynamics';\nexport const VxeSplitPane = Object.assign({}, VxeSplitPaneComponent, {\n    install(app) {\n        app.component(VxeSplitPaneComponent.name, VxeSplitPaneComponent);\n        app.component('VxeSplitItem', VxeSplitPaneComponent);\n    }\n});\ndynamicApp.use(VxeSplitPane);\nVxeUI.component(VxeSplitPaneComponent);\nexport const SplitPane = VxeSplitPane;\nexport default VxeSplitPane;\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeSliderComponent from './src/slider';\nimport { dynamicApp } from '../dynamics';\nexport const VxeSlider = Object.assign({}, VxeSliderComponent, {\n    install(app) {\n        app.component(VxeSliderComponent.name, VxeSliderComponent);\n    }\n});\ndynamicApp.use(VxeSlider);\nVxeUI.component(VxeSliderComponent);\nexport const Slider = VxeSlider;\nexport default VxeSlider;\n", "import { defineComponent, ref, h, reactive } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { createEvent } from '../../ui';\nexport default defineComponent({\n    name: 'VxeSteps',\n    props: {},\n    emits: [],\n    setup(props, context) {\n        const { emit } = context;\n        const xID = XEUtils.uniqueId();\n        const refElem = ref();\n        const reactData = reactive({});\n        const refMaps = {\n            refElem\n        };\n        const computeMaps = {};\n        const $xeSteps = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $steps: $xeSteps }, params));\n        };\n        const stepsMethods = {\n            dispatchEvent\n        };\n        const stepsPrivateMethods = {};\n        Object.assign($xeSteps, stepsMethods, stepsPrivateMethods);\n        const renderVN = () => {\n            return h('div', {\n                ref: refElem,\n                class: 'vxe-steps'\n            }, []);\n        };\n        $xeSteps.renderVN = renderVN;\n        return $xeSteps;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeStepsComponent from './src/steps';\nimport { dynamicApp } from '../dynamics';\nexport const VxeSteps = Object.assign({}, VxeStepsComponent, {\n    install(app) {\n        app.component(VxeStepsComponent.name, VxeStepsComponent);\n    }\n});\ndynamicApp.use(VxeSteps);\nVxeUI.component(VxeStepsComponent);\nexport const Steps = VxeSteps;\nexport default VxeSteps;\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeSwitchComponent from './src/switch';\nimport { dynamicApp } from '../dynamics';\nexport const VxeSwitch = Object.assign(VxeSwitchComponent, {\n    install: function (app) {\n        app.component(VxeSwitchComponent.name, VxeSwitchComponent);\n    }\n});\ndynamicApp.use(VxeSwitch);\nVxeUI.component(VxeSwitchComponent);\nexport const Switch = VxeSwitch;\nexport default VxeSwitch;\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeTabPaneComponent from '../tabs/src/tab-pane';\nimport { dynamicApp } from '../dynamics';\nexport const VxeTabPane = Object.assign({}, VxeTabPaneComponent, {\n    install(app) {\n        app.component(VxeTabPaneComponent.name, VxeTabPaneComponent);\n    }\n});\ndynamicApp.use(VxeTabPane);\nVxeUI.component(VxeTabPaneComponent);\nexport const TabPane = VxeTabPane;\nexport default VxeTabPane;\n", "import { defineComponent, ref, h, computed, inject, watch, provide, nextTick, Teleport, onMounted, onUnmounted, reactive } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { VxeUI, getConfig, getIcon, globalEvents, getI18n, createEvent, useSize, renderEmptyElement } from '../../ui';\nimport { getEventTargetNode, getAbsolutePos, toCssUnit } from '../../ui/src/dom';\nimport { getOnName } from '../../ui/src/vn';\nimport { getLastZIndex, nextZIndex } from '../../ui/src/utils';\nimport { errLog } from '../../ui/src/log';\nimport VxeInputComponent from '../../input/src/input';\nexport function getRowUniqueId() {\n    return XEUtils.uniqueId('row_');\n}\nexport default defineComponent({\n    name: 'VxeTableSelect',\n    props: {\n        modelValue: [String, Number, Array],\n        clearable: Boolean,\n        placeholder: {\n            type: String,\n            default: () => XEUtils.eqNull(getConfig().tableSelect.placeholder) ? getI18n('vxe.base.pleaseSelect') : getConfig().tableSelect.placeholder\n        },\n        readonly: {\n            type: Boolean,\n            default: null\n        },\n        loading: Boolean,\n        disabled: {\n            type: Boolean,\n            default: null\n        },\n        multiple: Boolean,\n        className: [String, Function],\n        prefixIcon: String,\n        placement: String,\n        columns: Array,\n        options: Array,\n        optionProps: Object,\n        size: {\n            type: String,\n            default: () => getConfig().select.size || getConfig().size\n        },\n        popupConfig: Object,\n        gridConfig: Object,\n        transfer: {\n            type: Boolean,\n            default: null\n        }\n    },\n    emits: [\n        'update:modelValue',\n        'change',\n        'clear',\n        'blur',\n        'focus',\n        'click',\n        'form-submit',\n        'form-reset',\n        'form-collapse',\n        'page-change'\n    ],\n    setup(props, context) {\n        const { emit, slots } = context;\n        const VxeTableGridComponent = VxeUI.getComponent('VxeGrid');\n        const $xeModal = inject('$xeModal', null);\n        const $xeDrawer = inject('$xeDrawer', null);\n        const $xeTable = inject('$xeTable', null);\n        const $xeForm = inject('$xeForm', null);\n        const formItemInfo = inject('xeFormItemInfo', null);\n        const xID = XEUtils.uniqueId();\n        const { computeSize } = useSize(props);\n        const refElem = ref();\n        const refInput = ref();\n        const refGridWrapper = ref();\n        const refOptionPanel = ref();\n        const refGrid = ref();\n        const reactData = reactive({\n            initialized: false,\n            tableColumns: [],\n            fullOptionList: [],\n            fullRowMaps: {},\n            panelIndex: 0,\n            panelStyle: {},\n            panelPlacement: null,\n            triggerFocusPanel: false,\n            visiblePanel: false,\n            isAniVisible: false,\n            isActivated: false\n        });\n        const internalData = {\n        // hpTimeout: undefined,\n        // vpTimeout: undefined\n        };\n        const refMaps = {\n            refElem\n        };\n        const computeFormReadonly = computed(() => {\n            const { readonly } = props;\n            if (readonly === null) {\n                if ($xeForm) {\n                    return $xeForm.props.readonly;\n                }\n                return false;\n            }\n            return readonly;\n        });\n        const computeIsDisabled = computed(() => {\n            const { disabled } = props;\n            if (disabled === null) {\n                if ($xeForm) {\n                    return $xeForm.props.disabled;\n                }\n                return false;\n            }\n            return disabled;\n        });\n        const computeBtnTransfer = computed(() => {\n            const { transfer } = props;\n            if (transfer === null) {\n                const globalTransfer = getConfig().select.transfer;\n                if (XEUtils.isBoolean(globalTransfer)) {\n                    return globalTransfer;\n                }\n                if ($xeTable || $xeModal || $xeDrawer || $xeForm) {\n                    return true;\n                }\n            }\n            return transfer;\n        });\n        const computePropsOpts = computed(() => {\n            return props.optionProps || {};\n        });\n        const computeRowOpts = computed(() => {\n            const gridOpts = computeGridOpts.value;\n            return Object.assign({}, gridOpts.rowConfig, {\n                isCurrent: true\n            });\n        });\n        const computeRowKeyField = computed(() => {\n            const rowOpts = computeRowOpts.value;\n            return rowOpts.keyField || '_X_ROW_KEY';\n        });\n        const computeLabelField = computed(() => {\n            const propsOpts = computePropsOpts.value;\n            return propsOpts.label || 'label';\n        });\n        const computeValueField = computed(() => {\n            const propsOpts = computePropsOpts.value;\n            return propsOpts.value || 'value';\n        });\n        const computePopupOpts = computed(() => {\n            return Object.assign({}, getConfig().tableSelect.popupConfig, props.popupConfig);\n        });\n        const computeGridOpts = computed(() => {\n            return Object.assign({}, getConfig().tableSelect.gridConfig, props.gridConfig, { data: undefined, columns: undefined });\n        });\n        const computeSelectLabel = computed(() => {\n            const { modelValue } = props;\n            const { fullRowMaps } = reactData;\n            const labelField = computeLabelField.value;\n            return (XEUtils.isArray(modelValue) ? modelValue : [modelValue]).map(val => {\n                const cacheItem = fullRowMaps[val];\n                return cacheItem ? cacheItem.item[labelField] : val;\n            }).join(', ');\n        });\n        const computePopupWrapperStyle = computed(() => {\n            const popupOpts = computePopupOpts.value;\n            const { height, width } = popupOpts;\n            const stys = {};\n            if (width) {\n                stys.width = toCssUnit(width);\n            }\n            if (height) {\n                stys.height = toCssUnit(height);\n            }\n            return stys;\n        });\n        const computeMaps = {};\n        const $xeTableSelect = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const gridEventKeys = [\n            'form-submit',\n            'form-reset',\n            'form-collapse',\n            'page-change'\n        ];\n        const gridEvents = {};\n        gridEventKeys.forEach(name => {\n            gridEvents[getOnName(XEUtils.camelCase(name))] = (params) => {\n                dispatchEvent(name, params, params.$event);\n            };\n        });\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $tableSelect: $xeTableSelect }, params));\n        };\n        const emitModel = (value) => {\n            emit('update:modelValue', value);\n        };\n        const tableSelectMethods = {\n            dispatchEvent\n        };\n        const tableSelectPrivateMethods = {};\n        const getRowid = (option) => {\n            const nodeKeyField = computeRowKeyField.value;\n            const rowid = option[nodeKeyField];\n            return rowid ? encodeURIComponent(rowid) : '';\n        };\n        const getRowsByValue = (modelValue) => {\n            const { fullRowMaps } = reactData;\n            const rows = [];\n            const vals = XEUtils.eqNull(modelValue) ? [] : (XEUtils.isArray(modelValue) ? modelValue : [modelValue]);\n            vals.forEach(val => {\n                const cacheItem = fullRowMaps[val];\n                if (cacheItem) {\n                    rows.push(cacheItem.item);\n                }\n            });\n            return rows;\n        };\n        const updateModel = (modelValue) => {\n            const { multiple } = props;\n            nextTick(() => {\n                const $grid = refGrid.value;\n                if ($grid) {\n                    const selectList = getRowsByValue(modelValue);\n                    if (selectList.length) {\n                        if (multiple) {\n                            $grid.setCheckboxRow(selectList, true);\n                        }\n                        else {\n                            $grid.setRadioRow(selectList[0]);\n                        }\n                    }\n                }\n            });\n        };\n        const loadTableColumn = (columns) => {\n            const { multiple } = props;\n            const tableCols = [];\n            if (multiple) {\n                tableCols.push({\n                    type: 'checkbox',\n                    width: 70\n                });\n            }\n            else {\n                tableCols.push({\n                    type: 'radio',\n                    width: 70\n                });\n            }\n            reactData.tableColumns = tableCols.concat(columns || []);\n        };\n        const cacheDataMap = () => {\n            const { options } = props;\n            const rowKeyField = computeRowKeyField.value;\n            const valueField = computeValueField.value;\n            const gridOpts = computeGridOpts.value;\n            const { treeConfig } = gridOpts;\n            const rowMaps = {};\n            const keyMaps = {};\n            if (treeConfig) {\n                // x\n            }\n            else {\n                XEUtils.arrayEach(options || [], (item, index, items) => {\n                    let rowid = getRowid(item);\n                    if (!rowid) {\n                        rowid = getRowUniqueId();\n                    }\n                    if (keyMaps[rowid]) {\n                        errLog('vxe.error.repeatKey', [rowKeyField, rowid]);\n                    }\n                    keyMaps[rowid] = true;\n                    const value = item[valueField];\n                    if (rowMaps[value]) {\n                        errLog('vxe.error.repeatKey', [valueField, value]);\n                    }\n                    rowMaps[value] = { item, index, items, parent: null, nodes: [] };\n                });\n            }\n            reactData.fullOptionList = options || [];\n            reactData.fullRowMaps = rowMaps;\n            updateModel(props.modelValue);\n        };\n        const updateZindex = () => {\n            if (reactData.panelIndex < getLastZIndex()) {\n                reactData.panelIndex = nextZIndex();\n            }\n        };\n        const updatePlacement = () => {\n            return nextTick().then(() => {\n                const { placement } = props;\n                const { panelIndex } = reactData;\n                const el = refElem.value;\n                const panelElem = refOptionPanel.value;\n                const btnTransfer = computeBtnTransfer.value;\n                if (panelElem && el) {\n                    const targetHeight = el.offsetHeight;\n                    const targetWidth = el.offsetWidth;\n                    const panelHeight = panelElem.offsetHeight;\n                    const panelWidth = panelElem.offsetWidth;\n                    const marginSize = 5;\n                    const panelStyle = {\n                        zIndex: panelIndex\n                    };\n                    const { boundingTop, boundingLeft, visibleHeight, visibleWidth } = getAbsolutePos(el);\n                    let panelPlacement = 'bottom';\n                    if (btnTransfer) {\n                        let left = boundingLeft;\n                        let top = boundingTop + targetHeight;\n                        if (placement === 'top') {\n                            panelPlacement = 'top';\n                            top = boundingTop - panelHeight;\n                        }\n                        else if (!placement) {\n                            // 如果下面不够放，则向上\n                            if (top + panelHeight + marginSize > visibleHeight) {\n                                panelPlacement = 'top';\n                                top = boundingTop - panelHeight;\n                            }\n                            // 如果上面不够放，则向下（优先）\n                            if (top < marginSize) {\n                                panelPlacement = 'bottom';\n                                top = boundingTop + targetHeight;\n                            }\n                        }\n                        // 如果溢出右边\n                        if (left + panelWidth + marginSize > visibleWidth) {\n                            left -= left + panelWidth + marginSize - visibleWidth;\n                        }\n                        // 如果溢出左边\n                        if (left < marginSize) {\n                            left = marginSize;\n                        }\n                        Object.assign(panelStyle, {\n                            left: `${left}px`,\n                            top: `${top}px`,\n                            minWidth: `${targetWidth}px`\n                        });\n                    }\n                    else {\n                        if (placement === 'top') {\n                            panelPlacement = 'top';\n                            panelStyle.bottom = `${targetHeight}px`;\n                        }\n                        else if (!placement) {\n                            // 如果下面不够放，则向上\n                            if (boundingTop + targetHeight + panelHeight > visibleHeight) {\n                                // 如果上面不够放，则向下（优先）\n                                if (boundingTop - targetHeight - panelHeight > marginSize) {\n                                    panelPlacement = 'top';\n                                    panelStyle.bottom = `${targetHeight}px`;\n                                }\n                            }\n                        }\n                    }\n                    reactData.panelStyle = panelStyle;\n                    reactData.panelPlacement = panelPlacement;\n                    return nextTick();\n                }\n            });\n        };\n        const showOptionPanel = () => {\n            const { loading } = props;\n            const isDisabled = computeIsDisabled.value;\n            if (!loading && !isDisabled) {\n                if (internalData.vpTimeout) {\n                    clearTimeout(internalData.vpTimeout);\n                }\n                if (internalData.hpTimeout) {\n                    clearTimeout(internalData.hpTimeout);\n                }\n                if (!reactData.initialized) {\n                    reactData.initialized = true;\n                }\n                reactData.isActivated = true;\n                reactData.isAniVisible = true;\n                internalData.vpTimeout = setTimeout(() => {\n                    reactData.visiblePanel = true;\n                    updateModel(props.modelValue);\n                    internalData.vpTimeout = undefined;\n                }, 10);\n                updateZindex();\n                updatePlacement();\n            }\n        };\n        const hideOptionPanel = () => {\n            reactData.visiblePanel = false;\n            if (internalData.vpTimeout) {\n                clearTimeout(internalData.vpTimeout);\n            }\n            if (internalData.hpTimeout) {\n                clearTimeout(internalData.hpTimeout);\n            }\n            internalData.hpTimeout = setTimeout(() => {\n                reactData.isAniVisible = false;\n                internalData.hpTimeout = undefined;\n            }, 350);\n        };\n        const changeEvent = (evnt, selectValue) => {\n            const { fullRowMaps } = reactData;\n            emitModel(selectValue);\n            if (selectValue !== props.modelValue) {\n                const cacheItem = fullRowMaps[selectValue];\n                dispatchEvent('change', { value: selectValue, row: cacheItem ? cacheItem.item : null }, evnt);\n                // 自动更新校验状态\n                if ($xeForm && formItemInfo) {\n                    $xeForm.triggerItemEvent(evnt, formItemInfo.itemConfig.field, selectValue);\n                }\n            }\n        };\n        const clearValueEvent = (evnt, selectValue) => {\n            changeEvent(evnt, selectValue);\n            dispatchEvent('clear', { value: selectValue }, evnt);\n        };\n        const clearEvent = (params, evnt) => {\n            clearValueEvent(evnt, null);\n            hideOptionPanel();\n        };\n        const handleGlobalMousewheelEvent = (evnt) => {\n            const { visiblePanel } = reactData;\n            const isDisabled = computeIsDisabled.value;\n            if (!isDisabled) {\n                if (visiblePanel) {\n                    const panelElem = refOptionPanel.value;\n                    if (getEventTargetNode(evnt, panelElem).flag) {\n                        updatePlacement();\n                    }\n                    else {\n                        hideOptionPanel();\n                    }\n                }\n            }\n        };\n        const handleGlobalMousedownEvent = (evnt) => {\n            const { visiblePanel } = reactData;\n            const isDisabled = computeIsDisabled.value;\n            if (!isDisabled) {\n                const el = refElem.value;\n                const panelElem = refOptionPanel.value;\n                reactData.isActivated = getEventTargetNode(evnt, el).flag || getEventTargetNode(evnt, panelElem).flag;\n                if (visiblePanel && !reactData.isActivated) {\n                    hideOptionPanel();\n                }\n            }\n        };\n        const handleGlobalBlurEvent = () => {\n            hideOptionPanel();\n        };\n        const focusEvent = (evnt) => {\n            const isDisabled = computeIsDisabled.value;\n            if (!isDisabled) {\n                if (!reactData.visiblePanel) {\n                    reactData.triggerFocusPanel = true;\n                    showOptionPanel();\n                    setTimeout(() => {\n                        reactData.triggerFocusPanel = false;\n                    }, 150);\n                }\n            }\n            dispatchEvent('focus', {}, evnt);\n        };\n        const clickEvent = (evnt) => {\n            togglePanelEvent(evnt);\n            dispatchEvent('click', {}, evnt);\n        };\n        const blurEvent = (evnt) => {\n            reactData.isActivated = false;\n            dispatchEvent('blur', {}, evnt);\n        };\n        const togglePanelEvent = (params) => {\n            const { $event } = params;\n            $event.preventDefault();\n            if (reactData.triggerFocusPanel) {\n                reactData.triggerFocusPanel = false;\n            }\n            else {\n                if (reactData.visiblePanel) {\n                    hideOptionPanel();\n                }\n                else {\n                    showOptionPanel();\n                }\n            }\n        };\n        const radioChangeEvent = (params) => {\n            const { $event, row } = params;\n            const valueField = computeValueField.value;\n            const value = row[valueField];\n            changeEvent($event, value);\n            hideOptionPanel();\n        };\n        const checkboxChangeEvent = (params) => {\n            const { $grid, $event } = params;\n            const valueField = computeValueField.value;\n            if ($grid) {\n                const checkboxRecords = $grid.getCheckboxRecords();\n                const value = checkboxRecords.map(row => {\n                    return row[valueField];\n                });\n                changeEvent($event, value);\n            }\n        };\n        const checkboxAllEvent = (params) => {\n            checkboxChangeEvent(params);\n        };\n        Object.assign($xeTableSelect, tableSelectMethods, tableSelectPrivateMethods);\n        const renderVN = () => {\n            const { className, options, loading } = props;\n            const { initialized, isActivated, isAniVisible, visiblePanel, tableColumns } = reactData;\n            const vSize = computeSize.value;\n            const isDisabled = computeIsDisabled.value;\n            const selectLabel = computeSelectLabel.value;\n            const btnTransfer = computeBtnTransfer.value;\n            const formReadonly = computeFormReadonly.value;\n            const popupOpts = computePopupOpts.value;\n            const { className: popupClassName } = popupOpts;\n            const gridOpts = computeGridOpts.value;\n            const rowOpts = computeRowOpts.value;\n            const popupWrapperStyle = computePopupWrapperStyle.value;\n            const headerSlot = slots.header;\n            const footerSlot = slots.footer;\n            const prefixSlot = slots.prefix;\n            if (formReadonly) {\n                return h('div', {\n                    ref: refElem,\n                    class: ['vxe-table-select--readonly', className]\n                }, [\n                    h('span', {\n                        class: 'vxe-table-select-label'\n                    }, selectLabel)\n                ]);\n            }\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-table-select', className ? (XEUtils.isFunction(className) ? className({ $tableSelect: $xeTableSelect }) : className) : '', {\n                        [`size--${vSize}`]: vSize,\n                        'is--visible': visiblePanel,\n                        'is--disabled': isDisabled,\n                        'is--loading': loading,\n                        'is--active': isActivated\n                    }]\n            }, [\n                h(VxeInputComponent, {\n                    ref: refInput,\n                    clearable: props.clearable,\n                    placeholder: loading ? getI18n('vxe.select.loadingText') : props.placeholder,\n                    readonly: true,\n                    disabled: isDisabled,\n                    type: 'text',\n                    prefixIcon: props.prefixIcon,\n                    suffixIcon: loading ? getIcon().TABLE_SELECT_LOADED : (visiblePanel ? getIcon().TABLE_SELECT_OPEN : getIcon().TABLE_SELECT_CLOSE),\n                    modelValue: loading ? '' : selectLabel,\n                    onClear: clearEvent,\n                    onClick: clickEvent,\n                    onFocus: focusEvent,\n                    onBlur: blurEvent,\n                    onSuffixClick: togglePanelEvent\n                }, prefixSlot\n                    ? {\n                        prefix: () => prefixSlot({})\n                    }\n                    : {}),\n                h(Teleport, {\n                    to: 'body',\n                    disabled: btnTransfer ? !initialized : true\n                }, [\n                    h('div', {\n                        ref: refOptionPanel,\n                        class: ['vxe-table--ignore-clear vxe-table-select--panel', popupClassName ? (XEUtils.isFunction(popupClassName) ? popupClassName({ $tableSelect: $xeTableSelect }) : popupClassName) : '', {\n                                [`size--${vSize}`]: vSize,\n                                'is--transfer': btnTransfer,\n                                'ani--leave': !loading && isAniVisible,\n                                'ani--enter': !loading && visiblePanel\n                            }],\n                        placement: reactData.panelPlacement,\n                        style: reactData.panelStyle\n                    }, initialized\n                        ? [\n                            h('div', {\n                                class: 'vxe-table-select--panel-wrapper'\n                            }, [\n                                headerSlot\n                                    ? h('div', {\n                                        class: 'vxe-table-select--panel-header'\n                                    }, headerSlot({}))\n                                    : renderEmptyElement($xeTableSelect),\n                                h('div', {\n                                    class: 'vxe-table-select--panel-body'\n                                }, [\n                                    h('div', {\n                                        ref: refGridWrapper,\n                                        class: 'vxe-table-select-grid--wrapper',\n                                        style: popupWrapperStyle\n                                    }, [\n                                        VxeTableGridComponent\n                                            ? h(VxeTableGridComponent, Object.assign(Object.assign(Object.assign({}, gridOpts), gridEvents), { class: 'vxe-table-select--grid', ref: refGrid, rowConfig: rowOpts, data: options, columns: tableColumns, height: '100%', autoResize: true, onRadioChange: radioChangeEvent, onCheckboxChange: checkboxChangeEvent, onCheckboxAll: checkboxAllEvent }), Object.assign({}, slots, {\n                                                header: undefined,\n                                                footer: undefined,\n                                                prefixSlot: undefined\n                                            }))\n                                            : renderEmptyElement($xeTableSelect)\n                                    ])\n                                ]),\n                                footerSlot\n                                    ? h('div', {\n                                        class: 'vxe-table-select--panel-footer'\n                                    }, footerSlot({}))\n                                    : renderEmptyElement($xeTableSelect)\n                            ])\n                        ]\n                        : [])\n                ])\n            ]);\n        };\n        watch(() => props.options, () => {\n            cacheDataMap();\n        });\n        watch(() => props.columns, (val) => {\n            loadTableColumn(val || []);\n        });\n        watch(() => props.modelValue, (val) => {\n            updateModel(val);\n        });\n        loadTableColumn(props.columns || []);\n        cacheDataMap();\n        onMounted(() => {\n            globalEvents.on($xeTableSelect, 'mousewheel', handleGlobalMousewheelEvent);\n            globalEvents.on($xeTableSelect, 'mousedown', handleGlobalMousedownEvent);\n            globalEvents.on($xeTableSelect, 'blur', handleGlobalBlurEvent);\n        });\n        onUnmounted(() => {\n            globalEvents.off($xeTableSelect, 'mousewheel');\n            globalEvents.off($xeTableSelect, 'mousedown');\n            globalEvents.off($xeTableSelect, 'blur');\n        });\n        if (process.env.NODE_ENV === 'development') {\n            nextTick(() => {\n                if (!VxeTableGridComponent) {\n                    errLog('vxe.error.reqComp', ['vxe-grid']);\n                }\n            });\n        }\n        provide('$xeTableSelect', $xeTableSelect);\n        $xeTableSelect.renderVN = renderVN;\n        return $xeTableSelect;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeTableSelectComponent from './src/table-select';\nimport { dynamicApp } from '../dynamics';\nexport const VxeTableSelect = Object.assign({}, VxeTableSelectComponent, {\n    install(app) {\n        app.component(VxeTableSelectComponent.name, VxeTableSelectComponent);\n    }\n});\ndynamicApp.use(VxeTableSelect);\nVxeUI.component(VxeTableSelectComponent);\nexport const TableSelect = VxeTableSelect;\nexport default VxeTableSelect;\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeTabsComponent from './src/tabs';\nimport { dynamicApp } from '../dynamics';\nexport const VxeTabs = Object.assign({}, VxeTabsComponent, {\n    install(app) {\n        app.component(VxeTabsComponent.name, VxeTabsComponent);\n    }\n});\ndynamicApp.use(VxeTabs);\nVxeUI.component(VxeTabsComponent);\nexport const Tabs = VxeTabs;\nexport default VxeTabs;\n", "import { defineComponent, ref, h, reactive, createCommentVNode } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getConfig, createEvent, useSize } from '../../ui';\nimport { getSlotVNs } from '../../ui/src/vn';\nexport default defineComponent({\n    name: 'VxeTag',\n    props: {\n        status: String,\n        title: [String, Number],\n        icon: String,\n        content: [String, Number],\n        size: {\n            type: String,\n            default: () => getConfig().tag.size || getConfig().size\n        }\n    },\n    emits: [\n        'click'\n    ],\n    setup(props, context) {\n        const { slots, emit } = context;\n        const xID = XEUtils.uniqueId();\n        const { computeSize } = useSize(props);\n        const refElem = ref();\n        const reactData = reactive({});\n        const refMaps = {\n            refElem\n        };\n        const computeMaps = {};\n        const $xeTag = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $tag: $xeTag }, params));\n        };\n        const tagMethods = {\n            dispatchEvent\n        };\n        const tagPrivateMethods = {};\n        const clickEvent = (evnt) => {\n            dispatchEvent('click', {}, evnt);\n        };\n        Object.assign($xeTag, tagMethods, tagPrivateMethods);\n        const renderContent = () => {\n            const { icon, content } = props;\n            const defaultSlot = slots.default;\n            const iconSlot = slots.icon;\n            return [\n                iconSlot || icon\n                    ? h('span', {\n                        class: 'vxe-tag--icon'\n                    }, iconSlot\n                        ? getSlotVNs(iconSlot({}))\n                        : [\n                            h('i', {\n                                class: icon\n                            })\n                        ])\n                    : createCommentVNode(),\n                h('span', {\n                    class: 'vxe-tag--content'\n                }, defaultSlot ? defaultSlot({}) : XEUtils.toValueString(content))\n            ];\n        };\n        const renderVN = () => {\n            const { status, title } = props;\n            const vSize = computeSize.value;\n            return h('span', {\n                ref: refElem,\n                class: ['vxe-tag', {\n                        [`size--${vSize}`]: vSize,\n                        [`theme--${status}`]: status\n                    }],\n                title,\n                onClick: clickEvent\n            }, renderContent());\n        };\n        $xeTag.renderVN = renderVN;\n        return $xeTag;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeTagComponent from './src/tag';\nimport { dynamicApp } from '../dynamics';\nexport const VxeTag = Object.assign({}, VxeTagComponent, {\n    install(app) {\n        app.component(VxeTagComponent.name, VxeTagComponent);\n    }\n});\ndynamicApp.use(VxeTag);\nVxeUI.component(VxeTagComponent);\nexport const Tag = VxeTag;\nexport default VxeTag;\n", "import { defineComponent, ref, h, watch, computed, reactive, resolveComponent, onMounted, onBeforeUnmount } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getConfig, createEvent, usePermission, useSize, renderEmptyElement } from '../../ui';\nexport default defineComponent({\n    name: 'VxeTextEllipsis',\n    props: {\n        href: String,\n        target: String,\n        content: [String, Number],\n        lineClamp: [String, Number],\n        status: String,\n        title: [String, Number],\n        loading: Boolean,\n        offsetLength: [String, Number],\n        routerLink: Object,\n        underline: {\n            type: Boolean,\n            default: () => getConfig().textEllipsis.underline\n        },\n        /**\n         * 权限码\n         */\n        permissionCode: [String, Number],\n        size: {\n            type: String,\n            default: () => getConfig().textEllipsis.size || getConfig().size\n        }\n    },\n    emits: [\n        'click'\n    ],\n    setup(props, context) {\n        const { emit } = context;\n        const xID = XEUtils.uniqueId();\n        const { computeSize } = useSize(props);\n        const { computePermissionInfo } = usePermission(props);\n        const refElem = ref();\n        const realityElem = ref();\n        const reactData = reactive({\n            resizeObserver: null,\n            visibleLen: 0\n        });\n        const refMaps = {\n            refElem\n        };\n        const computeTextLineClamp = computed(() => {\n            return XEUtils.toNumber(props.lineClamp);\n        });\n        const computeTextContent = computed(() => {\n            return XEUtils.toValueString(props.content);\n        });\n        const computeTextOffsetLength = computed(() => {\n            return props.offsetLength ? XEUtils.toNumber(props.offsetLength) : 0;\n        });\n        const computeVisibleContent = computed(() => {\n            const { visibleLen } = reactData;\n            const textLineClamp = computeTextLineClamp.value;\n            const textContent = computeTextContent.value;\n            const textOffsetLength = computeTextOffsetLength.value;\n            if (textLineClamp > 1) {\n                if (textContent.length > visibleLen) {\n                    return `${textContent.slice(0, Math.max(1, visibleLen - 3 + textOffsetLength))}...`;\n                }\n                return textContent;\n            }\n            return textContent;\n        });\n        const computeMaps = {};\n        const $xeTextEllipsis = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $textEllipsis: $xeTextEllipsis }, params));\n        };\n        const calculateFont = (targetWidth) => {\n            const el = refElem.value;\n            const ryEl = realityElem.value;\n            if (el && ryEl) {\n                let fontSize = 12;\n                try {\n                    fontSize = Math.max(10, XEUtils.toNumber(getComputedStyle(ryEl).fontSize));\n                }\n                catch (e) { }\n                const textContent = computeTextContent.value;\n                let currIndex = Math.floor((targetWidth) / fontSize);\n                let currStr = textContent.slice(0, currIndex);\n                ryEl.textContent = currStr;\n                reactData.visibleLen = currStr.length;\n                let maxCount = 0;\n                while (targetWidth > ryEl.clientWidth && maxCount < 30) {\n                    maxCount++;\n                    const offsetIndex = Math.floor((targetWidth - ryEl.clientWidth) / fontSize);\n                    if (offsetIndex) {\n                        currIndex += offsetIndex;\n                        currStr = textContent.slice(0, currIndex);\n                        ryEl.textContent = currStr;\n                        reactData.visibleLen = currStr.length;\n                    }\n                    else {\n                        break;\n                    }\n                }\n                ryEl.textContent = '';\n                ryEl.style.display = '';\n                ryEl.style.position = '';\n                ryEl.style.top = '';\n                ryEl.style.left = '';\n            }\n        };\n        const updateStyle = () => {\n            const el = refElem.value;\n            const ryEl = realityElem.value;\n            const textContent = computeTextContent.value;\n            const textLineClamp = computeTextLineClamp.value;\n            if (el && ryEl) {\n                const cWidth = el.clientWidth;\n                ryEl.style.display = 'block';\n                ryEl.style.position = 'absolute';\n                ryEl.style.top = '-3000px';\n                ryEl.style.left = '-3000px';\n                ryEl.textContent = textContent;\n                const sWidth = ryEl.offsetWidth;\n                const targetWidth = Math.floor(cWidth * textLineClamp);\n                if (targetWidth > sWidth) {\n                    reactData.visibleLen = textContent.length;\n                }\n                else {\n                    calculateFont(targetWidth);\n                }\n            }\n            else {\n                reactData.visibleLen = textContent.length;\n            }\n        };\n        const textEllipsisMethods = {\n            dispatchEvent\n        };\n        const clickEvent = () => {\n            emit('click', {});\n        };\n        const initObserver = () => {\n            const { resizeObserver } = reactData;\n            const textLineClamp = computeTextLineClamp.value;\n            if (!resizeObserver) {\n                const el = refElem.value;\n                if (el && textLineClamp > 1) {\n                    if (window.ResizeObserver) {\n                        const observerObj = new window.ResizeObserver(XEUtils.throttle(() => {\n                            updateStyle();\n                        }, 300, { leading: true, trailing: true }));\n                        observerObj.observe(el);\n                        reactData.resizeObserver = observerObj;\n                    }\n                }\n            }\n        };\n        const textEllipsisPrivateMethods = {};\n        Object.assign($xeTextEllipsis, textEllipsisMethods, textEllipsisPrivateMethods);\n        const renderContent = () => {\n            const { routerLink, href, target, title } = props;\n            const visibleContent = computeVisibleContent.value;\n            if (routerLink) {\n                return h(resolveComponent('router-link'), {\n                    class: 'vxe-text-ellipsis--link',\n                    title,\n                    target,\n                    to: routerLink\n                }, {\n                    default() {\n                        return renderContent();\n                    }\n                });\n            }\n            if (href) {\n                return h('a', {\n                    class: 'vxe-text-ellipsis--link',\n                    href,\n                    target,\n                    title\n                }, visibleContent);\n            }\n            return h('span', {\n                class: 'vxe-text-ellipsis--content'\n            }, visibleContent);\n        };\n        const renderVN = () => {\n            const { loading, status, title, underline } = props;\n            const permissionInfo = computePermissionInfo.value;\n            const vSize = computeSize.value;\n            const textLineClamp = computeTextLineClamp.value;\n            if (!permissionInfo.visible) {\n                return renderEmptyElement($xeTextEllipsis);\n            }\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-text-ellipsis', textLineClamp > 1 ? 'is--multi' : 'is--single', {\n                        [`size--${vSize}`]: vSize,\n                        [`theme--${status}`]: status,\n                        'is--underline': underline,\n                        'is--loading': loading\n                    }],\n                title,\n                onClick: clickEvent\n            }, [\n                h('span', {\n                    ref: realityElem,\n                    class: 'vxe-text-ellipsis--reality'\n                }),\n                renderContent()\n            ]);\n        };\n        watch(() => props.content, () => {\n            updateStyle();\n        });\n        watch(() => props.lineClamp, () => {\n            initObserver();\n            updateStyle();\n        });\n        onMounted(() => {\n            initObserver();\n            updateStyle();\n        });\n        onBeforeUnmount(() => {\n            const { resizeObserver } = reactData;\n            const el = refElem.value;\n            const ryEl = realityElem.value;\n            if (ryEl) {\n                ryEl.textContent = '';\n            }\n            if (resizeObserver) {\n                if (el) {\n                    resizeObserver.unobserve(el);\n                }\n                resizeObserver.disconnect();\n                reactData.resizeObserver = null;\n            }\n        });\n        $xeTextEllipsis.renderVN = renderVN;\n        return $xeTextEllipsis;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeTextEllipsisComponent from './src/text-ellipsis';\nimport { dynamicApp } from '../dynamics';\nexport const VxeTextEllipsis = Object.assign({}, VxeTextEllipsisComponent, {\n    install(app) {\n        app.component(VxeTextEllipsisComponent.name, VxeTextEllipsisComponent);\n    }\n});\ndynamicApp.use(VxeTextEllipsis);\nVxeUI.component(VxeTextEllipsisComponent);\nexport const TextEllipsis = VxeTextEllipsis;\nexport default VxeTextEllipsis;\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeTextComponent from './src/text';\nimport { dynamicApp } from '../dynamics';\nexport const VxeText = Object.assign({}, VxeTextComponent, {\n    install(app) {\n        app.component(VxeTextComponent.name, VxeTextComponent);\n    }\n});\ndynamicApp.use(VxeText);\nVxeUI.component(VxeTextComponent);\nexport const Text = VxeText;\nexport default VxeText;\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeTextareaComponent from './src/textarea';\nimport { dynamicApp } from '../dynamics';\nexport const VxeTextarea = Object.assign(VxeTextareaComponent, {\n    install: function (app) {\n        app.component(VxeTextareaComponent.name, VxeTextareaComponent);\n    }\n});\ndynamicApp.use(VxeTextarea);\nVxeUI.component(VxeTextareaComponent);\nexport const Textarea = VxeTextarea;\nexport default VxeTextarea;\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeTipComponent from './src/tip';\nimport { dynamicApp } from '../dynamics';\nexport const VxeTip = Object.assign({}, VxeTipComponent, {\n    install(app) {\n        app.component(VxeTipComponent.name, VxeTipComponent);\n        app.component('VxeTipsComponent', VxeTipComponent);\n    }\n});\ndynamicApp.use(VxeTip);\nVxeUI.component(VxeTipComponent);\nexport const Tips = VxeTip;\nexport const Tip = VxeTip;\nexport default VxeTip;\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeTreeComponent from './src/tree';\nimport { dynamicApp } from '../dynamics';\nexport const VxeTree = Object.assign({}, VxeTreeComponent, {\n    install(app) {\n        app.component(VxeTreeComponent.name, VxeTreeComponent);\n    }\n});\ndynamicApp.use(VxeTree);\nVxeUI.component(VxeTreeComponent);\nexport const Tree = VxeTree;\nexport default VxeTree;\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeTreeSelectComponent from './src/tree-select';\nimport { dynamicApp } from '../dynamics';\nexport const VxeTreeSelect = Object.assign({}, VxeTreeSelectComponent, {\n    install(app) {\n        app.component(VxeTreeSelectComponent.name, VxeTreeSelectComponent);\n    }\n});\ndynamicApp.use(VxeTreeSelect);\nVxeUI.component(VxeTreeSelectComponent);\nexport const TreeSelect = VxeTreeSelect;\nexport default VxeTreeSelect;\n", "import { defineComponent, ref, h, reactive, computed, onMounted, watch, onUnmounted } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getConfig, createEvent, globalEvents } from '../../ui';\nimport { toCssUnit } from '../../ui/src/dom';\nimport { getContentUrl } from './util';\nexport default defineComponent({\n    name: 'VxeWatermark',\n    props: {\n        width: String,\n        height: String,\n        imageUrl: String,\n        rotate: {\n            type: [Number, String],\n            default: () => getConfig().watermark.rotate\n        },\n        gap: {\n            type: [Array, Number, String],\n            default: () => XEUtils.clone(getConfig().watermark.gap, true)\n        },\n        content: [String, Array],\n        font: Object,\n        offset: Object,\n        zIndex: [String, Number]\n    },\n    emits: [],\n    setup(props, context) {\n        const { emit } = context;\n        const xID = XEUtils.uniqueId();\n        const refElem = ref();\n        const reactData = reactive({\n            markUrl: ''\n        });\n        const refMaps = {\n            refElem\n        };\n        const computeFontOpts = computed(() => {\n            return XEUtils.assign({}, XEUtils.clone(getConfig().watermark.font, true), props.font);\n        });\n        const computeWrapperStyle = computed(() => {\n            const { width, height, zIndex } = props;\n            const { markUrl } = reactData;\n            const stys = {};\n            if (width) {\n                stys.width = toCssUnit(width);\n            }\n            if (height) {\n                stys.height = toCssUnit(height);\n            }\n            if (markUrl) {\n                stys.backgroundImage = `url(${markUrl})`;\n            }\n            if (zIndex) {\n                stys.zIndex = zIndex;\n            }\n            return stys;\n        });\n        const computeMaps = {};\n        const $xeWatermark = {\n            xID,\n            props,\n            context,\n            reactData,\n            getRefMaps: () => refMaps,\n            getComputeMaps: () => computeMaps\n        };\n        const dispatchEvent = (type, params, evnt) => {\n            emit(type, createEvent(evnt, { $watermark: $xeWatermark }, params));\n        };\n        const collapsePaneMethods = {\n            dispatchEvent\n        };\n        const updateMarkStyle = () => {\n            const { content, gap, rotate, offset } = props;\n            const el = refElem.value;\n            const fontOpts = computeFontOpts.value;\n            if (el) {\n                if (content) {\n                    getContentUrl(content, getComputedStyle(el).fontSize, {\n                        font: fontOpts,\n                        rotate,\n                        gap,\n                        offset\n                    }).then(url => {\n                        reactData.markUrl = url;\n                    });\n                }\n            }\n        };\n        const collapsePanePrivateMethods = {};\n        Object.assign($xeWatermark, collapsePaneMethods, collapsePanePrivateMethods);\n        const renderVN = () => {\n            const wrapperStyle = computeWrapperStyle.value;\n            return h('div', {\n                ref: refElem,\n                class: 'vxe-watermark',\n                style: wrapperStyle\n            });\n        };\n        watch(() => props.imageUrl, () => {\n            updateMarkStyle();\n        });\n        watch(() => props.content, () => {\n            updateMarkStyle();\n        });\n        watch(() => props.gap, () => {\n            updateMarkStyle();\n        });\n        watch(() => props.rotate, () => {\n            updateMarkStyle();\n        });\n        watch(() => props.width, () => {\n            updateMarkStyle();\n        });\n        watch(() => props.height, () => {\n            updateMarkStyle();\n        });\n        watch(() => props.font, () => {\n            updateMarkStyle();\n        });\n        onMounted(() => {\n            updateMarkStyle();\n            globalEvents.on($xeWatermark, 'resize', XEUtils.throttle(() => {\n                updateMarkStyle();\n            }, 300, { trailing: true, leading: true }));\n        });\n        onUnmounted(() => {\n            globalEvents.off($xeWatermark, 'resize');\n        });\n        $xeWatermark.renderVN = renderVN;\n        return $xeWatermark;\n    },\n    render() {\n        return this.renderVN();\n    }\n});\n", "import XEUtils from 'xe-utils';\nimport { toCssUnit } from '../../ui/src/dom';\nlet canvasEl = null;\nlet fontEl = null;\nconst fontCacheMaps = {};\nfunction getMarkCanvas() {\n    if (!canvasEl) {\n        canvasEl = document.createElement('canvas');\n        canvasEl.style.position = 'absolute';\n        canvasEl.style.top = '0';\n        canvasEl.style.left = '0';\n    }\n    return canvasEl;\n}\nfunction removeMarkElement(elem) {\n    if (elem) {\n        const parentEl = elem.parentNode;\n        if (parentEl) {\n            parentEl.removeChild(elem);\n        }\n    }\n}\nfunction calcFontWH(text, fontSize) {\n    const fKey = `${fontSize}_${text}`;\n    if (!fontCacheMaps[fKey]) {\n        if (!fontEl) {\n            fontEl = document.createElement('span');\n        }\n        if (!fontEl.parentNode) {\n            document.body.append(fontEl);\n        }\n        fontEl.textContent = text;\n        fontEl.style.fontSize = toCssUnit(fontSize);\n        const width = fontEl.offsetWidth;\n        const height = fontEl.offsetHeight;\n        fontCacheMaps[fKey] = {\n            width,\n            height\n        };\n    }\n    return fontCacheMaps[fKey];\n}\nfunction calcContentWH(contList) {\n    let contentWidth = 0;\n    let contentHeight = 0;\n    contList.forEach(item => {\n        contentWidth = Math.max(item.width, contentWidth);\n        contentHeight = Math.max(item.height, contentHeight);\n    });\n    return {\n        contentWidth,\n        contentHeight\n    };\n}\nfunction calcCanvasWH(contentWidth, opts) {\n    const { gap } = opts;\n    const [gapX = 0, gapY = 0] = gap ? ((XEUtils.isArray(gap) ? gap : [gap, gap])) : [];\n    const canvasWidth = contentWidth + XEUtils.toNumber(gapX);\n    const canvasHeight = contentWidth + XEUtils.toNumber(gapY);\n    return {\n        canvasWidth,\n        canvasHeight\n    };\n}\nfunction getFontConf(item, key, opts) {\n    return (item.font ? item.font[key] : '') || (opts.font ? opts.font[key] : '');\n}\nfunction createMarkFont(contConf, defaultFontSize, opts) {\n    const { offset } = opts;\n    const text = XEUtils.toValueString(contConf.textContent);\n    const fontSize = XEUtils.toNumber(getFontConf(contConf, 'fontSize', opts) || defaultFontSize) || 14;\n    const [offsetX = 0, offsetY = 0] = offset ? ((XEUtils.isArray(offset) ? offset : [offset, offset])) : [];\n    const { width, height } = calcFontWH(text, fontSize);\n    return {\n        text,\n        fontSize,\n        font: contConf.font,\n        width: width + XEUtils.toNumber(offsetX),\n        height: height + XEUtils.toNumber(offsetY)\n    };\n}\nfunction drayFont(ctx, item, opts) {\n    const fontWeight = getFontConf(item, 'fontWeight', opts);\n    ctx.fillStyle = `${getFontConf(item, 'color', opts) || 'rgba(0, 0, 0, 0.15)'}`;\n    ctx.font = [\n        getFontConf(item, 'fontStyle', opts) || 'normal',\n        fontWeight === 'bold' || fontWeight === 'bolder' ? 'bold' : '',\n        toCssUnit(item.fontSize),\n        getFontConf(item, 'fontFamily', opts) || 'sans-serif'\n    ].join(' ');\n}\nexport function getContentUrl(content, defaultFontSize, options) {\n    const opts = Object.assign({}, options);\n    const { rotate } = opts;\n    const deg = XEUtils.toNumber(rotate);\n    const contList = (XEUtils.isArray(content) ? content : [content]).map(item => {\n        if (item) {\n            if (item.textContent) {\n                return createMarkFont(item, defaultFontSize, opts);\n            }\n            return createMarkFont({\n                textContent: `${item}`\n            }, defaultFontSize, opts);\n        }\n        return createMarkFont({\n            textContent: ''\n        }, defaultFontSize, opts);\n    });\n    removeMarkElement(fontEl);\n    return new Promise((resolve) => {\n        const canvasEl = getMarkCanvas();\n        if (!canvasEl.parentNode) {\n            document.body.append(canvasEl);\n        }\n        const ctx = canvasEl.getContext('2d');\n        if (ctx && contList.length) {\n            const { contentWidth, contentHeight } = calcContentWH(contList);\n            const { canvasWidth, canvasHeight } = calcCanvasWH(contentWidth, opts);\n            canvasEl.width = canvasWidth;\n            canvasEl.height = canvasHeight;\n            const x = (canvasWidth - contentWidth) / 2;\n            const y = (canvasHeight - contentHeight) / 2;\n            const drayX = x + (contentWidth / 2);\n            const drayY = y + (contentHeight / 2);\n            ctx.save();\n            ctx.translate(drayX, drayY);\n            ctx.rotate(deg * Math.PI / 180);\n            ctx.translate(-drayX, -drayY);\n            let offsetHeight = 0;\n            contList.forEach((item) => {\n                const align = getFontConf(item, 'align', opts);\n                drayFont(ctx, item, opts);\n                ctx.fillText(item.text, x + (align === 'center' ? (contentWidth - item.width) / 2 : 0), y + (contentHeight + contentHeight) / 2 + offsetHeight, contentWidth);\n                offsetHeight += item.height;\n            });\n            ctx.restore();\n            resolve(canvasEl.toDataURL());\n            removeMarkElement(canvasEl);\n        }\n        else {\n            resolve('');\n            removeMarkElement(canvasEl);\n        }\n    });\n}\n", "import { VxeUI } from '@vxe-ui/core';\nimport VxeWatermarkComponent from './src/watermark';\nimport { checkDynamic, dynamicStore, dynamicApp } from '../dynamics';\nexport const VxeWatermark = Object.assign({}, VxeWatermarkComponent, {\n    install(app) {\n        app.component(VxeWatermarkComponent.name, VxeWatermarkComponent);\n    }\n});\ndynamicApp.use(VxeWatermark);\nVxeUI.component(VxeWatermarkComponent);\nexport const WatermarkController = {\n    load(options) {\n        checkDynamic();\n        dynamicStore.globalWatermark = Object.assign({}, options);\n        return Promise.resolve();\n    },\n    clear() {\n        dynamicStore.globalWatermark = null;\n        return Promise.resolve();\n    }\n};\nVxeUI.watermark = WatermarkController;\nexport const Watermark = VxeWatermark;\nexport default VxeWatermark;\n", "import * as VxeUIExport from './components';\nexport * from './components';\nexport default VxeUIExport;\n"],
  "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",
  "names": ["XEUtils", "alert_default", "import_xe_utils", "import_xe_utils", "import_xe_utils", "XEUtils", "XEUtils", "XEUtils", "anchor_default", "anchor_link_default", "import_xe_utils", "XEUtils", "avatar_default", "import_xe_utils", "XEUtils", "badge_default", "import_xe_utils", "import_xe_utils", "XEUtils", "XEUtils", "breadcrumb_default", "breadcrumb_item_default", "import_xe_utils", "XEUtils", "button_group_default", "import_xe_utils", "XEUtils", "label", "calendar_default", "import_xe_utils", "XEUtils", "loading", "card_default", "import_xe_utils", "XEUtils", "slots", "loading", "carousel_default", "import_xe_utils", "XEUtils", "import_xe_utils", "XEUtils", "carousel_item_default", "import_xe_utils", "group_default", "XEUtils", "group_default", "import_xe_utils", "XEUtils", "col_default", "import_xe_utils", "XEUtils", "slots", "collapse_default", "import_xe_utils", "import_xe_utils", "XEUtils", "XEUtils", "collapse_pane_default", "import_xe_utils", "import_xe_utils", "XEUtils", "h", "XEUtils", "evnt", "color_picker_default", "import_xe_utils", "XEUtils", "loading", "import_xe_utils", "XEUtils", "countdown_default", "import_xe_utils", "XEUtils", "date", "label", "renderPrefixIcon", "renderSuffixIcon", "date_picker_default", "import_xe_utils", "import_xe_utils", "XEUtils", "closeDrawer", "openDrawer", "evnt", "loading_default", "loading", "XEUtils", "drawer_default", "import_xe_utils", "XEUtils", "empty_default", "import_xe_utils", "import_xe_utils", "import_xe_utils", "XEUtils", "XEUtils", "import_xe_utils", "XEUtils", "import_xe_utils", "$xeForm", "XEUtils", "XEUtils", "loading", "import_xe_utils", "XEUtils", "form_default", "import_xe_utils", "XEUtils", "import_xe_utils", "XEUtils", "import_xe_utils", "import_xe_utils", "XEUtils", "config", "import_xe_utils", "XEUtils", "import_xe_utils", "XEUtils", "import_xe_utils", "XEUtils", "slots", "import_xe_utils", "import_xe_utils", "XEUtils", "XEUtils", "import_xe_utils", "$xeForm", "XEUtils", "import_xe_utils", "XEUtils", "import_xe_utils", "import_xe_utils", "XEUtils", "XEUtils", "config", "readonly", "disabled", "XEUtils", "config", "item", "import_xe_utils", "XEUtils", "import_xe_utils", "XEUtils", "import_xe_utils", "XEUtils", "import_xe_utils", "XEUtils", "options", "_a", "import_xe_utils", "XEUtils", "getAlignOptions", "getBoldOptions", "import_xe_utils", "XEUtils", "import_xe_utils", "XEUtils", "import_xe_utils", "item", "XEUtils", "import_xe_utils", "XEUtils", "index", "params", "import_xe_utils", "XEUtils", "import_xe_utils", "XEUtils", "import_xe_utils", "XEUtils", "import_xe_utils", "XEUtils", "import_xe_utils", "import_xe_utils", "XEUtils", "nodeid", "nodeItem", "loading", "XEUtils", "loading", "import_xe_utils", "XEUtils", "import_xe_utils", "XEUtils", "group_default", "import_xe_utils", "XEUtils", "import_xe_utils", "XEUtils", "evnt", "form_design_default", "form_group_default", "form_item_default", "form_view_default", "import_xe_utils", "XEUtils", "icon_picker_default", "import_xe_utils", "import_xe_utils", "XEUtils", "import_xe_utils", "XEUtils", "XEUtils", "loading", "image_default", "import_xe_utils", "group_default", "XEUtils", "group_default", "import_xe_utils", "XEUtils", "loading", "layout_aside_default", "import_xe_utils", "XEUtils", "loading", "layout_body_default", "import_xe_utils", "XEUtils", "layout_container_default", "import_xe_utils", "XEUtils", "layout_footer_default", "import_xe_utils", "XEUtils", "layout_header_default", "import_xe_utils", "XEUtils", "link_default", "import_xe_utils", "getDefaultSettingFormData", "import_xe_utils", "layout_preview_default", "XEUtils", "import_xe_utils", "refWidgetReactConfigMaps", "conf", "allFormItemList", "XEUtils", "formData", "layout_setting_default", "XEUtils", "config", "getDefaultSettingFormData", "layout_preview_default", "layout_setting_default", "list_design_default", "import_xe_utils", "XEUtils", "config", "loading", "list_view_default", "import_xe_utils", "XEUtils", "browseObj", "loading", "list_default", "import_xe_utils", "XEUtils", "loading", "menu_default", "import_xe_utils", "XEUtils", "notice_bar_default", "import_xe_utils", "import_xe_utils", "XEUtils", "XEUtils", "optgroup_default", "option_default", "import_xe_utils", "XEUtils", "renderPrefixIcon", "renderSuffixIcon", "password_input_default", "import_xe_utils", "import_xe_utils", "XEUtils", "printHtml", "XEUtils", "import_xe_utils", "XEUtils", "print_default", "import_xe_utils", "XEUtils", "pulldown_default", "radio_default", "button_default", "rate_default", "import_xe_utils", "XEUtils", "result_default", "row_default", "import_xe_utils", "XEUtils", "item", "evnt", "slots", "split_default", "import_xe_utils", "XEUtils", "import_xe_utils", "XEUtils", "split_pane_default", "slider_default", "import_xe_utils", "XEUtils", "steps_default", "switch_default", "tab_pane_default", "import_xe_utils", "XEUtils", "loading", "table_select_default", "tabs_default", "import_xe_utils", "XEUtils", "tag_default", "import_xe_utils", "XEUtils", "loading", "text_ellipsis_default", "text_default", "textarea_default", "tip_default", "tree_default", "tree_select_default", "import_xe_utils", "import_xe_utils", "XEUtils", "canvasEl", "XEUtils", "watermark_default", "alert_default", "anchor_default", "anchor_link_default", "avatar_default", "badge_default", "breadcrumb_default", "breadcrumb_item_default", "button_default", "button_group_default", "calendar_default", "card_default", "carousel_default", "carousel_item_default", "checkbox_default", "col_default", "collapse_default", "collapse_pane_default", "color_picker_default", "countdown_default", "date_picker_default", "drawer_default", "empty_default", "form_default", "form_design_default", "form_group_default", "form_item_default", "form_view_default", "icon_default", "icon_picker_default", "image_default", "input_default", "layout_aside_default", "layout_body_default", "layout_container_default", "layout_footer_default", "layout_header_default", "link_default", "list_design_default", "list_view_default", "list_default", "loading_default", "menu_default", "modal_default", "notice_bar_default", "number_input_default", "optgroup_default", "option_default", "password_input_default", "print_default", "pulldown_default", "radio_default", "rate_default", "result_default", "row_default", "select_default", "split_default", "split_pane_default", "slider_default", "steps_default", "switch_default", "tab_pane_default", "table_select_default", "tabs_default", "tag_default", "text_ellipsis_default", "text_default", "textarea_default", "tip_default", "tooltip_default", "tree_default", "tree_select_default", "upload_default", "watermark_default", "component"]
}
