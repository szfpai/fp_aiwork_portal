/**
 * tdesign v1.11.5
 * (c) 2025 tdesign
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { defineComponent, computed, createVNode, mergeProps } from 'vue';
import props from './props.js';
import ColorPanel from './components/panel/index.js';
import { usePrefixClass } from '../hooks/useConfig.js';
import { pickBy } from 'lodash-es';
import '@babel/runtime/helpers/toConsumableArray';
import '@babel/runtime/helpers/slicedToArray';
import '../_chunks/dep-7fdfa676.js';
import './components/panel/header.js';
import '../radio/index.js';
import '../radio/radio.js';
import '../radio/props.js';
import '../radio/consts/index.js';
import '../hooks/useDisabled.js';
import '../hooks/useReadonly.js';
import '../hooks/useVModel.js';
import '../_chunks/dep-7c56a7f5.js';
import '../utils/render-tnode.js';
import '../_chunks/dep-56c3d46e.js';
import '@babel/runtime/helpers/objectWithoutProperties';
import '../config-provider/hooks/useConfig.js';
import '../config-provider/utils/context.js';
import '../_chunks/dep-c75b9b8e.js';
import '@babel/runtime/helpers/typeof';
import '../_chunks/dep-caecb55d.js';
import 'dayjs';
import '../radio/group.js';
import '@babel/runtime/helpers/asyncToGenerator';
import '@babel/runtime/regenerator';
import '../radio/radio-group-props.js';
import '../radio/radio-button.js';
import '../radio/hooks/useKeyboard.js';
import '../utils/dom.js';
import '../_chunks/dep-d2f3d117.js';
import '../watermark/hooks/index.js';
import '../hooks/useResizeObserver.js';
import '../utils/withInstall.js';
import './hooks/index.js';
import '../hooks/useKeepAnimation.js';
import './components/panel/linear-gradient.js';
import '../_chunks/dep-547ae1d1.js';
import '@babel/runtime/helpers/classCallCheck';
import '@babel/runtime/helpers/createClass';
import 'tinycolor2';
import '../input-number/index.js';
import '../input-number/input-number.js';
import 'tdesign-icons-vue-next';
import '../button/index.js';
import '../button/button.js';
import '../loading/index.js';
import '../loading/directive.js';
import '../loading/plugin.js';
import '../loading/loading.js';
import '../loading/icon/gradient.js';
import '../_chunks/dep-d60f6309.js';
import '../hooks/useTeleport.js';
import '../loading/props.js';
import '../button/props.js';
import '../hooks/useRipple.js';
import '../input/index.js';
import '../input/input.js';
import '../input/props.js';
import '../hooks/useGlobalIcon.js';
import '../input/hooks/useInput.js';
import '../form/consts/index.js';
import '../input/hooks/useLengthLimit.js';
import '../_chunks/dep-92106726.js';
import '../input/hooks/useInputEventHandler.js';
import '../input/hooks/useInputWidth.js';
import '../input/input-group.js';
import '../input/input-group-props.js';
import '../input-number/props.js';
import '../input-number/hooks/useInputNumber.js';
import '../hooks/useCommonClassName.js';
import '../_chunks/dep-55df6a6c.js';
import '../_chunks/dep-8b9d07bf.js';
import './components/panel/base-props.js';
import './components/panel/saturation.js';
import '../_chunks/dep-e15e9b19.js';
import './components/panel/hue.js';
import './components/panel/slider.js';
import './components/panel/alpha.js';
import './components/format/index.js';
import '../select/index.js';
import '../select/select.js';
import '../common-components/fake-arrow.js';
import '../select-input/index.js';
import '../select-input/select-input.js';
import '../popup/index.js';
import '../popup/popup.js';
import '@popperjs/core';
import '../popup/container.js';
import '../popup/props.js';
import '../select-input/props.js';
import '../select-input/hooks/useMultiple.js';
import '../tag-input/index.js';
import '../tag-input/tag-input.js';
import '../tag-input/props.js';
import '../tag-input/hooks/useDragSorter.js';
import '../tag-input/hooks/useHover.js';
import '../tag-input/hooks/useTagScroll.js';
import '../tag-input/hooks/useTagList.js';
import '../tag/index.js';
import '../tag/tag.js';
import '../tag/props.js';
import '../tag/check-tag.js';
import '../tag/check-tag-props.js';
import '../tag/check-tag-group.js';
import '../tag/check-tag-group-props.js';
import '../hooks/useDefaultValue.js';
import '../select-input/hooks/useOverlayInnerStyle.js';
import '../select-input/hooks/useSingle.js';
import '../select/select-panel.js';
import '../select/option.js';
import '../select/option-props.js';
import '../checkbox/index.js';
import '../checkbox/checkbox.js';
import '../checkbox/props.js';
import '../checkbox/consts/index.js';
import '../checkbox/hooks/useCheckboxLazyLoad.js';
import '../_chunks/dep-8c2d2d85.js';
import '../checkbox/hooks/useKeyboardEvent.js';
import '../checkbox/group.js';
import '../checkbox/checkbox-group-props.js';
import '../hooks/slot.js';
import '../select/utils/index.js';
import '../select/consts/index.js';
import '../select/option-group.js';
import '../select/option-group-props.js';
import '../select/props.js';
import '../select/hooks/usePanelVirtualScroll.js';
import '../hooks/useVirtualScroll.js';
import '../select/hooks/useKeyboardControl.js';
import '../select/hooks/useSelectOptions.js';
import './components/format/inputs.js';
import './components/format/config.js';
import './components/panel/swatches.js';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var _ColorPickerPanel = defineComponent({
  name: "TColorPickerPanel",
  inheritAttrs: false,
  props: props,
  setup: function setup(props2, _ref) {
    var attrs = _ref.attrs;
    var newProps = computed(function () {
      return pickBy(_objectSpread(_objectSpread({}, props2), attrs), function (v) {
        return v !== void 0;
      });
    });
    var prefix = usePrefixClass();
    return function () {
      return createVNode(ColorPanel, mergeProps(newProps.value, {
        "popupProps": null,
        "close-btn": false,
        "class": "".concat(prefix.value, "-is-inline")
      }), null);
    };
  }
});

export { _ColorPickerPanel as default };
//# sourceMappingURL=color-picker-panel.js.map
