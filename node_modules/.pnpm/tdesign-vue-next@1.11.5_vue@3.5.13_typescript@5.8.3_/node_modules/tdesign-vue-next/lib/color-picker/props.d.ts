import { TdColorPickerProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    borderless: BooleanConstructor;
    clearable: BooleanConstructor;
    closeBtn: {
        type: PropType<TdColorPickerProps["closeBtn"]>;
        default: TdColorPickerProps["closeBtn"];
    };
    colorModes: {
        type: PropType<TdColorPickerProps["colorModes"]>;
        default: () => TdColorPickerProps["colorModes"];
    };
    disabled: BooleanConstructor;
    enableAlpha: BooleanConstructor;
    enableMultipleGradient: {
        type: BooleanConstructor;
        default: boolean;
    };
    format: {
        type: PropType<TdColorPickerProps["format"]>;
        default: TdColorPickerProps["format"];
        validator(val: TdColorPickerProps["format"]): boolean;
    };
    inputProps: {
        type: PropType<TdColorPickerProps["inputProps"]>;
    };
    multiple: BooleanConstructor;
    popupProps: {
        type: PropType<TdColorPickerProps["popupProps"]>;
    };
    recentColors: {
        type: PropType<TdColorPickerProps["recentColors"]>;
        default: TdColorPickerProps["recentColors"];
    };
    defaultRecentColors: {
        type: PropType<TdColorPickerProps["defaultRecentColors"]>;
        default: () => TdColorPickerProps["defaultRecentColors"];
    };
    selectInputProps: {
        type: PropType<TdColorPickerProps["selectInputProps"]>;
    };
    showPrimaryColorPreview: {
        type: BooleanConstructor;
        default: boolean;
    };
    size: {
        type: PropType<TdColorPickerProps["size"]>;
        default: TdColorPickerProps["size"];
        validator(val: TdColorPickerProps["size"]): boolean;
    };
    swatchColors: {
        type: PropType<TdColorPickerProps["swatchColors"]>;
    };
    value: {
        type: StringConstructor;
        default: any;
    };
    modelValue: {
        type: StringConstructor;
        default: any;
    };
    defaultValue: {
        type: StringConstructor;
        default: string;
    };
    onChange: PropType<TdColorPickerProps["onChange"]>;
    onPaletteBarChange: PropType<TdColorPickerProps["onPaletteBarChange"]>;
    onRecentColorsChange: PropType<TdColorPickerProps["onRecentColorsChange"]>;
};
export default _default;
