/**
 * tdesign v1.11.5
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var Vue = require('vue');
var dayjs = require('dayjs');
var calendar_consts_index = require('../consts/index.js');
var configProvider_hooks_useConfig = require('../../config-provider/hooks/useConfig.js');
var isBoolean = require('../../_chunks/dep-82a90f9f.js');
var isFunction = require('../../_chunks/dep-047617bf.js');
require('../../_chunks/dep-b4c4a54b.js');
require('../../_chunks/dep-f8ff548f.js');
require('@babel/runtime/helpers/typeof');
require('../../_chunks/dep-30fb1b25.js');
require('../../_chunks/dep-b6c192db.js');
require('../../_chunks/dep-ba2090c8.js');
require('../../_chunks/dep-b27d3215.js');
require('../../_chunks/dep-ed572eb3.js');
require('../../_chunks/dep-bbe343d7.js');
require('../../_chunks/dep-0a510359.js');
require('../../_chunks/dep-50a41d31.js');
require('../../_chunks/dep-be3c3d53.js');
require('../../_chunks/dep-0c2ad01b.js');
require('../../_chunks/dep-5ad8a2ab.js');
require('../../_chunks/dep-8b98fa07.js');
require('../../_chunks/dep-b0b4fff1.js');
require('../../_chunks/dep-7a21da5b.js');
require('../../_chunks/dep-49fa220e.js');
require('../../_chunks/dep-02ebb419.js');
require('../../_chunks/dep-feae46a3.js');
require('../../_chunks/dep-abf21389.js');
require('../../_chunks/dep-7f32423d.js');
require('../../_chunks/dep-7c9e3d93.js');
require('../../_chunks/dep-61a7e281.js');
require('../../_chunks/dep-ecbaedee.js');
require('../../_chunks/dep-9de7d250.js');
require('../../_chunks/dep-6f8a66a3.js');
require('../../_chunks/dep-b8b9c2a3.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var dayjs__default = /*#__PURE__*/_interopDefaultLegacy(dayjs);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var getDefaultControllerConfigData = function getDefaultControllerConfigData() {
  var visible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
  return {
    visible: visible,
    disabled: false,
    mode: {
      visible: true,
      radioGroupProps: {}
    },
    year: {
      visible: true,
      selectProps: {}
    },
    month: {
      visible: true,
      selectProps: {}
    },
    weekend: {
      visible: true,
      showWeekendButtonProps: {},
      hideWeekendButtonProps: {}
    },
    current: {
      visible: true,
      currentDayButtonProps: {},
      currentMonthButtonProps: {}
    }
  };
};
function userController(props, state) {
  var _useConfig = configProvider_hooks_useConfig.useConfig(calendar_consts_index.COMPONENT_NAME),
    globalConfig = _useConfig.globalConfig;
  var options = Vue.computed(function () {
    var dayJsFilterDate = dayjs__default["default"]("".concat(state.curSelectedYear, "-").concat(state.curSelectedMonth));
    var re = {
      isShowWeekend: state.isShowWeekend,
      filterDate: dayJsFilterDate.toDate(),
      formattedFilterDate: dayJsFilterDate.format(props.format),
      mode: state.curSelectedMode
    };
    return re;
  });
  var configData = Vue.computed(function () {
    var _ref, _props$controllerConf;
    var controllerConfig = (_ref = (_props$controllerConf = props.controllerConfig) !== null && _props$controllerConf !== void 0 ? _props$controllerConf : globalConfig.value.controllerConfig) !== null && _ref !== void 0 ? _ref : true;
    if (isBoolean.isBoolean(controllerConfig)) {
      return getDefaultControllerConfigData(controllerConfig);
    }
    return _objectSpread(_objectSpread({}, getDefaultControllerConfigData()), controllerConfig);
  });
  var visible = Vue.computed(function () {
    return !!configData.value && configData.value.visible;
  });
  function checkControllerVisible(name) {
    var re = true;
    var conf = configData.value;
    if (!conf || !conf.visible || conf[name] === false || conf[name] && !conf[name].visible) {
      re = false;
    }
    return re;
  }
  function checkControllerDisabled(name, propsName) {
    var re = false;
    var conf = configData.value;
    if (conf && (conf.disabled || conf[name] && conf[name][propsName] && conf[name][propsName].disabled)) {
      re = true;
    }
    return re;
  }
  function emitControllerChange() {
    Vue.nextTick(function () {
      isFunction.isFunction(props.onControllerChange) && props.onControllerChange(_objectSpread({}, options.value));
    });
  }
  return {
    options: options,
    configData: configData,
    visible: visible,
    checkControllerVisible: checkControllerVisible,
    checkControllerDisabled: checkControllerDisabled,
    emitControllerChange: emitControllerChange
  };
}

exports.userController = userController;
//# sourceMappingURL=useController.js.map
