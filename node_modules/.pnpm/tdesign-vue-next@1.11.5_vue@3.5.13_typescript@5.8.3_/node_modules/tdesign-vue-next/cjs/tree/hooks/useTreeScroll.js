/**
 * tdesign v1.11.5
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var Vue = require('vue');
require('tdesign-icons-vue-next');
require('../../checkbox/index.js');
require('../../loading/index.js');
require('../../config-provider/hooks/useConfig.js');
require('../../utils/dom.js');
var hooks_useVirtualScrollNew = require('../../hooks/useVirtualScrollNew.js');
require('@babel/runtime/helpers/asyncToGenerator');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/classCallCheck');
require('@babel/runtime/helpers/createClass');
require('@babel/runtime/regenerator');
var log = require('../../_chunks/dep-cef23b69.js');
var get = require('../../_chunks/dep-56c837c8.js');
require('../../checkbox/checkbox.js');
require('@babel/runtime/helpers/slicedToArray');
require('../../checkbox/props.js');
require('../../hooks/useVModel.js');
require('../../_chunks/dep-76218bd8.js');
require('../../_chunks/dep-acb090bf.js');
require('../../_chunks/dep-e495f218.js');
require('../../_chunks/dep-bbe343d7.js');
require('@babel/runtime/helpers/typeof');
require('../../_chunks/dep-5ad8a2ab.js');
require('../../_chunks/dep-bafc1f63.js');
require('../../_chunks/dep-0c2ad01b.js');
require('../../hooks/useRipple.js');
require('../../hooks/useKeepAnimation.js');
require('../../_chunks/dep-b4c4a54b.js');
require('../../_chunks/dep-f8ff548f.js');
require('../../_chunks/dep-30fb1b25.js');
require('dayjs');
require('../../_chunks/dep-b6c192db.js');
require('../../_chunks/dep-ba2090c8.js');
require('../../_chunks/dep-b27d3215.js');
require('../../_chunks/dep-ed572eb3.js');
require('../../_chunks/dep-047617bf.js');
require('../../_chunks/dep-0a510359.js');
require('../../_chunks/dep-50a41d31.js');
require('../../_chunks/dep-be3c3d53.js');
require('../../_chunks/dep-8b98fa07.js');
require('../../_chunks/dep-b0b4fff1.js');
require('../../_chunks/dep-7a21da5b.js');
require('../../_chunks/dep-49fa220e.js');
require('../../_chunks/dep-02ebb419.js');
require('../../_chunks/dep-feae46a3.js');
require('../../_chunks/dep-abf21389.js');
require('../../_chunks/dep-7f32423d.js');
require('../../_chunks/dep-7c9e3d93.js');
require('../../_chunks/dep-61a7e281.js');
require('../../_chunks/dep-ecbaedee.js');
require('../../_chunks/dep-9de7d250.js');
require('../../_chunks/dep-6f8a66a3.js');
require('../../_chunks/dep-b8b9c2a3.js');
require('../../hooks/useConfig.js');
require('../../_chunks/dep-b1b8272b.js');
require('../../_chunks/dep-a69ce597.js');
require('../../utils/render-tnode.js');
require('../../_chunks/dep-db023c41.js');
require('../../_chunks/dep-c07d6878.js');
require('../../_chunks/dep-a957c564.js');
require('../../_chunks/dep-9a321a91.js');
require('../../checkbox/consts/index.js');
require('../../checkbox/hooks/useCheckboxLazyLoad.js');
require('../../_chunks/dep-9da21bcd.js');
require('../../checkbox/hooks/useKeyboardEvent.js');
require('../../_chunks/dep-0dafeb05.js');
require('../../hooks/useDisabled.js');
require('../../_chunks/dep-82a90f9f.js');
require('../../hooks/useReadonly.js');
require('../../checkbox/group.js');
require('../../checkbox/checkbox-group-props.js');
require('../../hooks/slot.js');
require('../../_chunks/dep-0b6921ca.js');
require('../../_chunks/dep-62aae11c.js');
require('../../_chunks/dep-732925e8.js');
require('../../_chunks/dep-93cf0a54.js');
require('../../utils/withInstall.js');
require('../../_chunks/dep-0d31a2f0.js');
require('../../loading/plugin.js');
require('../../loading/loading.js');
require('../../loading/icon/gradient.js');
require('../../_chunks/dep-25acc189.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('../../_chunks/dep-8afe2bf0.js');
require('../../_chunks/dep-cea0dc9b.js');
require('../../hooks/useTeleport.js');
require('../../loading/props.js');
require('../../_chunks/dep-d4796921.js');
require('../../_chunks/dep-7c08b9a8.js');
require('../../_chunks/dep-fd1ddb6b.js');
require('../../_chunks/dep-55d8c3ed.js');
require('../../_chunks/dep-d83ac33f.js');
require('../../hooks/useResizeObserver.js');
require('../../_chunks/dep-be62446e.js');
require('../../_chunks/dep-31140ae7.js');
require('../../_chunks/dep-533159e9.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function useTreeScroll(state) {
  var treeState = state;
  var props = treeState.props,
    context = treeState.context,
    allNodes = treeState.allNodes,
    nodes = treeState.nodes,
    scope = treeState.scope,
    treeContentRef = treeState.treeContentRef,
    isScrolling = treeState.isScrolling;
  var scrollProps = Vue.computed(function () {
    return _objectSpread({
      rowHeight: 34
    }, props.scroll);
  });
  scope.scrollProps = scrollProps;
  var virtualScrollParams = Vue.computed(function () {
    var list = allNodes.value.filter(function (node) {
      return node.visible;
    });
    return {
      data: list,
      scroll: scrollProps.value,
      preventResizeRefresh: true
    };
  });
  var virtualConfig = hooks_useVirtualScrollNew["default"](treeContentRef, virtualScrollParams);
  scope.virtualConfig = virtualConfig;
  treeState.virtualConfig = virtualConfig;
  Vue.onMounted(function () {
    var isVirtual = virtualConfig === null || virtualConfig === void 0 ? void 0 : virtualConfig.isVirtualScroll.value;
    if (isVirtual) {
      virtualConfig.handleScroll();
    }
  });
  var emitScrollEvent = function emitScrollEvent(e) {
    var _props$onScroll;
    (_props$onScroll = props.onScroll) === null || _props$onScroll === void 0 || _props$onScroll.call(props, {
      e: e
    });
    context.emit("scroll", {
      e: e
    });
  };
  var scrollStopTimer = null;
  var setScrolling = function setScrolling() {
    isScrolling.value = true;
    if (scrollStopTimer) {
      clearTimeout(scrollStopTimer);
      scrollStopTimer = null;
    }
    scrollStopTimer = setTimeout(function () {
      scrollStopTimer = null;
      isScrolling.value = false;
    }, 100);
  };
  var lastScrollY = 0;
  var onInnerVirtualScroll = function onInnerVirtualScroll(e) {
    setScrolling();
    var isVirtual = virtualConfig === null || virtualConfig === void 0 ? void 0 : virtualConfig.isVirtualScroll.value;
    var target = e.target || e.srcElement;
    var top = target.scrollTop;
    if (lastScrollY !== top) {
      if (isVirtual) {
        virtualConfig.handleScroll();
        nodes.value = virtualConfig.visibleData.value;
      }
    } else {
      lastScrollY = 0;
    }
    lastScrollY = top;
    emitScrollEvent(e);
  };
  var handleScrollTo = function handleScrollTo(params) {
    var index = params.index;
    if (!index && index !== 0) {
      var _allNodes$value;
      if (!params.key) {
        log.log.error("Tree", "scrollToElement: one of `index` or `key` must exist.");
        return;
      }
      index = (_allNodes$value = allNodes.value) === null || _allNodes$value === void 0 ? void 0 : _allNodes$value.findIndex(function (item) {
        var _props$keys;
        return [get.get(item.data, "key"), get.get(item.data, ((_props$keys = props.keys) === null || _props$keys === void 0 ? void 0 : _props$keys["value"]) || "value")].includes(params.key);
      });
      if (index < 0) {
        log.log.error("Tree", "".concat(params.key, " does not exist in data, check `key` or `data` please."));
        return;
      }
    }
    virtualConfig.scrollToElement(_objectSpread(_objectSpread({}, params), {}, {
      index: index - 1
    }));
  };
  return {
    treeContentRef: treeContentRef,
    onInnerVirtualScroll: onInnerVirtualScroll,
    virtualConfig: virtualConfig,
    scrollToElement: handleScrollTo
  };
}

exports["default"] = useTreeScroll;
//# sourceMappingURL=useTreeScroll.js.map
