/**
 * tdesign v1.11.5
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _slicedToArray = require('@babel/runtime/helpers/slicedToArray');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var Vue = require('vue');
var space_props = require('./props.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var hooks_tnode = require('../_chunks/dep-a69ce597.js');
var hooks_slot = require('../hooks/slot.js');
var helper = require('../_chunks/dep-25acc189.js');
var isArray = require('../_chunks/dep-5ad8a2ab.js');
var isNumber = require('../_chunks/dep-cea0dc9b.js');
var isString = require('../_chunks/dep-b8b9c2a3.js');
require('../config-provider/hooks/useConfig.js');
require('../_chunks/dep-b4c4a54b.js');
require('../_chunks/dep-f8ff548f.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-30fb1b25.js');
require('dayjs');
require('../_chunks/dep-b6c192db.js');
require('../_chunks/dep-ba2090c8.js');
require('../_chunks/dep-b27d3215.js');
require('../_chunks/dep-ed572eb3.js');
require('../_chunks/dep-047617bf.js');
require('../_chunks/dep-bbe343d7.js');
require('../_chunks/dep-0a510359.js');
require('../_chunks/dep-50a41d31.js');
require('../_chunks/dep-be3c3d53.js');
require('../_chunks/dep-0c2ad01b.js');
require('../_chunks/dep-8b98fa07.js');
require('../_chunks/dep-b0b4fff1.js');
require('../_chunks/dep-7a21da5b.js');
require('../_chunks/dep-49fa220e.js');
require('../_chunks/dep-02ebb419.js');
require('../_chunks/dep-feae46a3.js');
require('../_chunks/dep-abf21389.js');
require('../_chunks/dep-7f32423d.js');
require('../_chunks/dep-7c9e3d93.js');
require('../_chunks/dep-61a7e281.js');
require('../_chunks/dep-ecbaedee.js');
require('../_chunks/dep-9de7d250.js');
require('../_chunks/dep-6f8a66a3.js');
require('../utils/render-tnode.js');
require('../_chunks/dep-db023c41.js');
require('../_chunks/dep-e495f218.js');
require('../_chunks/dep-bafc1f63.js');
require('../_chunks/dep-c07d6878.js');
require('../_chunks/dep-a957c564.js');
require('../_chunks/dep-acb090bf.js');
require('../_chunks/dep-76218bd8.js');
require('../_chunks/dep-9a321a91.js');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/objectWithoutProperties');
require('../_chunks/dep-93cf0a54.js');
require('../_chunks/dep-8afe2bf0.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);
var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var sizeMap = {
  small: "8px",
  medium: "16px",
  large: "24px"
};
var defaultNeedPolyfill = helper.getFlexGapPolyFill();
var _Space = Vue.defineComponent({
  name: "TSpace",
  props: _objectSpread(_objectSpread({}, space_props["default"]), {}, {
    forceFlexGapPolyfill: Boolean
  }),
  setup: function setup(props2) {
    var COMPONENT_NAME = hooks_useConfig.usePrefixClass("space");
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var getChildSlots = hooks_slot.useChildSlots();
    var needPolyfill = Vue.computed(function () {
      return props2.forceFlexGapPolyfill || defaultNeedPolyfill;
    });
    var renderStyle = Vue.computed(function () {
      var renderGap = "";
      if (isArray.isArray(props2.size)) {
        renderGap = props2.size.map(function (s) {
          if (isNumber.isNumber(s)) return "".concat(s, "px");
          if (isString.isString(s) && ["small", "medium", "large"].includes(s)) return sizeMap[s];
          return s;
        }).join(" ");
      } else if (isString.isString(props2.size)) {
        renderGap = ["small", "medium", "large"].includes(props2.size) ? sizeMap[props2.size] : props2.size;
      } else if (isNumber.isNumber(props2.size)) {
        renderGap = "".concat(props2.size, "px");
      }
      var style = {};
      if (needPolyfill.value) {
        var _renderGap$split = renderGap.split(" "),
          _renderGap$split2 = _slicedToArray__default["default"](_renderGap$split, 2),
          columnGap = _renderGap$split2[0],
          rowGap = _renderGap$split2[1];
        style["--td-space-column-gap"] = columnGap;
        style["--td-space-row-gap"] = rowGap || columnGap;
      } else {
        style.gap = renderGap;
      }
      return style;
    });
    function renderChildren() {
      var children = getChildSlots();
      var separatorContent = renderTNodeJSX("separator");
      return children.filter(function (child) {
        return Vue.isVNode(child) ? child.type !== Vue.Comment : true;
      }).map(function (child, index) {
        var showSeparator = index + 1 !== children.length && separatorContent;
        return Vue.createVNode(Vue.Fragment, null, [Vue.createVNode("div", {
          "class": "".concat(COMPONENT_NAME.value, "-item")
        }, [child]), showSeparator && Vue.createVNode("div", {
          "class": "".concat(COMPONENT_NAME.value, "-item-separator")
        }, [separatorContent])]);
      });
    }
    return function () {
      var spaceClassNames = ["".concat(COMPONENT_NAME.value), _defineProperty__default["default"](_defineProperty__default["default"](_defineProperty__default["default"](_defineProperty__default["default"]({}, "".concat(COMPONENT_NAME.value, "-align-").concat(props2.align), props2.align), "".concat(COMPONENT_NAME.value, "-").concat(props2.direction), props2.direction), "".concat(COMPONENT_NAME.value, "--break-line"), props2.breakLine), "".concat(COMPONENT_NAME.value, "--polyfill"), needPolyfill.value)];
      return Vue.createVNode("div", {
        "class": spaceClassNames,
        "style": renderStyle.value
      }, [renderChildren()]);
    };
  }
});

exports["default"] = _Space;
//# sourceMappingURL=space.js.map
