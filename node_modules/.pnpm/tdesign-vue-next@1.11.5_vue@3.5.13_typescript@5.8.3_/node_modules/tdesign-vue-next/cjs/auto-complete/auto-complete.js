/**
 * tdesign v1.11.5
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var _slicedToArray = require('@babel/runtime/helpers/slicedToArray');
var Vue = require('vue');
var autoComplete_props = require('./props.js');
var input_index = require('../input/index.js');
var popup_index = require('../popup/index.js');
var hooks_useCommonClassName = require('../hooks/useCommonClassName.js');
var autoComplete_optionList = require('./option-list.js');
var hooks_useVModel = require('../hooks/useVModel.js');
var configProvider_hooks_useConfig = require('../config-provider/hooks/useConfig.js');
require('@babel/runtime/helpers/typeof');
var hooks_tnode = require('../_chunks/dep-a69ce597.js');
require('../hooks/useKeepAnimation.js');
var hooks_useDisabled = require('../hooks/useDisabled.js');
var hooks_useReadonly = require('../hooks/useReadonly.js');
require('../input/input.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('tdesign-icons-vue-next');
require('../input/props.js');
require('../hooks/useConfig.js');
require('../hooks/useGlobalIcon.js');
require('../input/hooks/useInput.js');
require('../form/consts/index.js');
require('../input/hooks/useLengthLimit.js');
require('../_chunks/dep-cef23b69.js');
require('../_chunks/dep-25acc189.js');
require('@babel/runtime/helpers/toConsumableArray');
require('../_chunks/dep-93cf0a54.js');
require('../_chunks/dep-8afe2bf0.js');
require('../_chunks/dep-b8b9c2a3.js');
require('../_chunks/dep-bbe343d7.js');
require('../_chunks/dep-5ad8a2ab.js');
require('../_chunks/dep-0c2ad01b.js');
require('../_chunks/dep-cea0dc9b.js');
require('../_chunks/dep-0a510359.js');
require('../input/hooks/useInputEventHandler.js');
require('../input/hooks/useInputWidth.js');
require('../hooks/useResizeObserver.js');
require('../input/input-group.js');
require('../input/input-group-props.js');
require('../utils/withInstall.js');
require('../_chunks/dep-82a90f9f.js');
require('../_chunks/dep-b4c4a54b.js');
require('../_chunks/dep-f8ff548f.js');
require('../_chunks/dep-30fb1b25.js');
require('dayjs');
require('../_chunks/dep-b6c192db.js');
require('../_chunks/dep-ba2090c8.js');
require('../_chunks/dep-b27d3215.js');
require('../_chunks/dep-ed572eb3.js');
require('../_chunks/dep-047617bf.js');
require('../_chunks/dep-50a41d31.js');
require('../_chunks/dep-be3c3d53.js');
require('../_chunks/dep-8b98fa07.js');
require('../_chunks/dep-b0b4fff1.js');
require('../_chunks/dep-7a21da5b.js');
require('../_chunks/dep-49fa220e.js');
require('../_chunks/dep-02ebb419.js');
require('../_chunks/dep-feae46a3.js');
require('../_chunks/dep-abf21389.js');
require('../_chunks/dep-7f32423d.js');
require('../_chunks/dep-7c9e3d93.js');
require('../_chunks/dep-61a7e281.js');
require('../_chunks/dep-ecbaedee.js');
require('../_chunks/dep-9de7d250.js');
require('../_chunks/dep-6f8a66a3.js');
require('../utils/render-tnode.js');
require('../_chunks/dep-db023c41.js');
require('../_chunks/dep-e495f218.js');
require('../_chunks/dep-bafc1f63.js');
require('../_chunks/dep-c07d6878.js');
require('../_chunks/dep-a957c564.js');
require('../_chunks/dep-acb090bf.js');
require('../_chunks/dep-76218bd8.js');
require('../_chunks/dep-9a321a91.js');
require('../popup/popup.js');
require('@popperjs/core');
require('../_chunks/dep-b1b8272b.js');
require('../utils/dom.js');
require('../popup/container.js');
require('../popup/props.js');
require('../_chunks/dep-31140ae7.js');
require('../_chunks/dep-533159e9.js');
require('../_chunks/dep-e1e12340.js');
require('../_chunks/dep-0dafeb05.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Vue.isVNode(s);
}
var _AutoComplete = Vue.defineComponent({
  name: "TAutoComplete",
  props: autoComplete_props["default"],
  setup: function setup(props2, _ref) {
    var slots = _ref.slots;
    var _toRefs = Vue.toRefs(props2),
      value = _toRefs.value,
      modelValue = _toRefs.modelValue;
    var _useVModel = hooks_useVModel["default"](value, modelValue, props2.defaultValue, props2.onChange),
      _useVModel2 = _slicedToArray__default["default"](_useVModel, 2),
      tValue = _useVModel2[0],
      setTValue = _useVModel2[1];
    var renderContent = hooks_tnode.useContent();
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var _useCommonClassName = hooks_useCommonClassName["default"](),
      classPrefix = _useCommonClassName.classPrefix,
      sizeClassNames = _useCommonClassName.sizeClassNames;
    var _useConfig = configProvider_hooks_useConfig.useConfig("input"),
      global = _useConfig.globalConfig;
    var isDisabled = hooks_useDisabled.useDisabled();
    var isReadonly = hooks_useReadonly.useReadonly();
    var popupVisible = Vue.ref();
    var optionListRef = Vue.ref();
    var getOverlayStyle = function getOverlayStyle(trigger, popupElement) {
      var _props2$popupProps;
      var triggerWidth = trigger.getBoundingClientRect().width || trigger.offsetWidth || trigger.clientWidth;
      var popupWidth = popupElement.getBoundingClientRect().width || popupElement.offsetWidth || popupElement.clientWidth;
      return _objectSpread({
        width: triggerWidth >= popupWidth ? "".concat(triggerWidth, "px") : "auto"
      }, (_props2$popupProps = props2.popupProps) === null || _props2$popupProps === void 0 ? void 0 : _props2$popupProps.overlayInnerStyle);
    };
    var classes = Vue.computed(function () {
      return ["".concat(classPrefix.value, "-auto-complete")];
    });
    var popupClasses = Vue.computed(function () {
      var _props2$popupProps2;
      var classes2 = ["".concat(classPrefix.value, "-select__dropdown")];
      if ((_props2$popupProps2 = props2.popupProps) !== null && _props2$popupProps2 !== void 0 && _props2$popupProps2.overlayClassName) {
        classes2 = classes2.concat(props2.popupProps.overlayClassName);
      }
      return classes2;
    });
    var popupInnerClasses = Vue.computed(function () {
      var _props2$popupProps3;
      var classes2 = ["".concat(classPrefix.value, "-select__dropdown-inner")];
      if ((_props2$popupProps3 = props2.popupProps) !== null && _props2$popupProps3 !== void 0 && _props2$popupProps3.overlayInnerClassName) {
        classes2 = classes2.concat(props2.popupProps.overlayInnerClassName);
      }
      return classes2;
    });
    var onInputChange = function onInputChange(value2, context) {
      setTValue(value2, context);
    };
    var innerInputProps = Vue.computed(function () {
      var tProps = _objectSpread({
        value: tValue.value,
        size: props2.size
      }, props2.inputProps);
      return tProps;
    });
    var onInnerFocus = function onInnerFocus(value2, context) {
      var _props2$onFocus;
      if (isReadonly.value || isDisabled.value) return;
      popupVisible.value = true;
      (_props2$onFocus = props2.onFocus) === null || _props2$onFocus === void 0 || _props2$onFocus.call(props2, _objectSpread(_objectSpread({}, context), {}, {
        value: value2
      }));
      Vue.nextTick(function () {
        var _optionListRef$value;
        (_optionListRef$value = optionListRef.value) === null || _optionListRef$value === void 0 || _optionListRef$value.addKeyboardListener();
      });
    };
    var onInnerBlur = function onInnerBlur(value2, context) {
      var _props2$onBlur;
      (_props2$onBlur = props2.onBlur) === null || _props2$onBlur === void 0 || _props2$onBlur.call(props2, _objectSpread(_objectSpread({}, context), {}, {
        value: value2
      }));
    };
    var onInnerCompositionend = function onInnerCompositionend(value2, context) {
      var _props2$onComposition;
      (_props2$onComposition = props2.onCompositionend) === null || _props2$onComposition === void 0 || _props2$onComposition.call(props2, _objectSpread(_objectSpread({}, context), {}, {
        value: value2
      }));
    };
    var onInnerCompositionstart = function onInnerCompositionstart(value2, context) {
      var _props2$onComposition2;
      (_props2$onComposition2 = props2.onCompositionstart) === null || _props2$onComposition2 === void 0 || _props2$onComposition2.call(props2, _objectSpread(_objectSpread({}, context), {}, {
        value: value2
      }));
    };
    var onInnerEnter = function onInnerEnter(value2, context) {
      var _props2$onEnter;
      (_props2$onEnter = props2.onEnter) === null || _props2$onEnter === void 0 || _props2$onEnter.call(props2, _objectSpread(_objectSpread({}, context), {}, {
        value: value2
      }));
    };
    var onInnerSelect = function onInnerSelect(value2, context) {
      var _props2$onSelect;
      if (isReadonly.value || isDisabled.value) return;
      popupVisible.value = false;
      setTValue(value2, context);
      (_props2$onSelect = props2.onSelect) === null || _props2$onSelect === void 0 || _props2$onSelect.call(props2, value2, context);
    };
    var onPopupVisibleChange = function onPopupVisibleChange(visible, _ref2) {
      var trigger = _ref2.trigger;
      if (isReadonly.value || isDisabled.value) return;
      if (trigger !== "trigger-element-click") {
        popupVisible.value = visible;
      }
    };
    return function () {
      var _props2$placeholder;
      var triggerNode = renderContent("default", "triggerElement") || Vue.createVNode(input_index.Input, Vue.mergeProps({
        "borderless": props2.borderless,
        "placeholder": (_props2$placeholder = props2.placeholder) !== null && _props2$placeholder !== void 0 ? _props2$placeholder : global.value.placeholder,
        "tips": props2.tips,
        "status": props2.status,
        "readonly": isReadonly.value,
        "disabled": isDisabled.value,
        "autofocus": props2.autofocus,
        "clearable": props2.clearable,
        "onChange": onInputChange,
        "onFocus": onInnerFocus,
        "onBlur": onInnerBlur,
        "onClear": props2.onClear,
        "onCompositionend": onInnerCompositionend,
        "onCompositionstart": onInnerCompositionstart,
        "onEnter": onInnerEnter
      }, innerInputProps.value), slots);
      var listContent = Array.isArray(props2.options) && Vue.createVNode(autoComplete_optionList["default"], {
        "ref": optionListRef,
        "value": tValue.value,
        "options": props2.options,
        "size": props2.size,
        "sizeClassNames": sizeClassNames,
        "onSelect": onInnerSelect,
        "popupVisible": popupVisible.value,
        "highlightKeyword": props2.highlightKeyword,
        "filterable": props2.filterable,
        "filter": props2.filter,
        "empty": renderTNodeJSX("empty")
      }, {
        option: slots.option
      });
      var topContent = renderTNodeJSX("panelTopContent");
      var bottomContent = renderTNodeJSX("panelBottomContent");
      var panelContent = topContent || listContent || bottomContent ? Vue.createVNode("div", {
        "class": "".concat(classPrefix.value, "-auto-complete__panel")
      }, [topContent, listContent, bottomContent]) : null;
      var popupProps = _objectSpread(_objectSpread({}, props2.popupProps), {}, {
        overlayInnerStyle: getOverlayStyle,
        overlayInnerClassName: popupInnerClasses.value,
        overlayClassName: popupClasses.value
      });
      return Vue.createVNode("div", {
        "class": classes.value
      }, [Vue.createVNode(popup_index.Popup, Vue.mergeProps({
        "visible": popupVisible.value,
        "onVisibleChange": onPopupVisibleChange,
        "trigger": "focus",
        "placement": "bottom-left",
        "hideEmptyPopup": true,
        "content": panelContent ? function () {
          return panelContent;
        } : null
      }, popupProps), _isSlot(triggerNode) ? triggerNode : {
        "default": function _default() {
          return [triggerNode];
        }
      })]);
    };
  }
});

exports["default"] = _AutoComplete;
//# sourceMappingURL=auto-complete.js.map
