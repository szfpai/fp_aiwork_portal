/**
 * tdesign v1.11.5
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _toConsumableArray = require('@babel/runtime/helpers/toConsumableArray');
var _slicedToArray = require('@babel/runtime/helpers/slicedToArray');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var Vue = require('vue');
var hooks_useConfig = require('../../../hooks/useConfig.js');
var colorPicker_props = require('../../props.js');
var constants = require('../../../_chunks/dep-8c810fee.js');
var colorPicker_components_panel_header = require('./header.js');
var colorPicker_components_panel_linearGradient = require('./linear-gradient.js');
var colorPicker_components_panel_saturation = require('./saturation.js');
var colorPicker_components_panel_hue = require('./hue.js');
var colorPicker_components_panel_alpha = require('./alpha.js');
var colorPicker_components_format_index = require('../format/index.js');
var colorPicker_components_panel_swatches = require('./swatches.js');
var color = require('../../../_chunks/dep-3b785e4a.js');
require('@babel/runtime/helpers/classCallCheck');
require('@babel/runtime/helpers/createClass');
var colorPicker_hooks_index = require('../../hooks/index.js');
var hooks_useVModel = require('../../../hooks/useVModel.js');
var hooks_useDefaultValue = require('../../../hooks/useDefaultValue.js');
var configProvider_hooks_useConfig = require('../../../config-provider/hooks/useConfig.js');
var cloneDeep = require('../../../_chunks/dep-61a7e281.js');
require('../../../_chunks/dep-b4c4a54b.js');
require('../../../_chunks/dep-f8ff548f.js');
require('@babel/runtime/helpers/typeof');
require('../../../_chunks/dep-30fb1b25.js');
require('dayjs');
require('../../../_chunks/dep-b6c192db.js');
require('../../../_chunks/dep-ba2090c8.js');
require('../../../_chunks/dep-b27d3215.js');
require('../../../_chunks/dep-ed572eb3.js');
require('../../../_chunks/dep-047617bf.js');
require('../../../_chunks/dep-bbe343d7.js');
require('../../../_chunks/dep-0a510359.js');
require('../../../_chunks/dep-50a41d31.js');
require('../../../_chunks/dep-be3c3d53.js');
require('../../../_chunks/dep-0c2ad01b.js');
require('../../../_chunks/dep-5ad8a2ab.js');
require('../../../_chunks/dep-8b98fa07.js');
require('../../../_chunks/dep-b0b4fff1.js');
require('../../../_chunks/dep-7a21da5b.js');
require('../../../_chunks/dep-49fa220e.js');
require('../../../_chunks/dep-02ebb419.js');
require('../../../_chunks/dep-feae46a3.js');
require('../../../_chunks/dep-abf21389.js');
require('../../../_chunks/dep-7f32423d.js');
require('../../../_chunks/dep-7c9e3d93.js');
require('../../../_chunks/dep-ecbaedee.js');
require('../../../_chunks/dep-9de7d250.js');
require('../../../_chunks/dep-6f8a66a3.js');
require('../../../_chunks/dep-b8b9c2a3.js');
require('../../../radio/index.js');
require('../../../radio/radio.js');
require('../../../radio/props.js');
require('../../../radio/consts/index.js');
require('../../../hooks/useDisabled.js');
require('../../../_chunks/dep-82a90f9f.js');
require('../../../hooks/useReadonly.js');
require('../../../_chunks/dep-a69ce597.js');
require('../../../utils/render-tnode.js');
require('../../../_chunks/dep-db023c41.js');
require('../../../_chunks/dep-e495f218.js');
require('../../../_chunks/dep-bafc1f63.js');
require('../../../_chunks/dep-c07d6878.js');
require('../../../_chunks/dep-a957c564.js');
require('../../../_chunks/dep-acb090bf.js');
require('../../../_chunks/dep-76218bd8.js');
require('../../../_chunks/dep-9a321a91.js');
require('../../../_chunks/dep-25acc189.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('../../../_chunks/dep-93cf0a54.js');
require('../../../_chunks/dep-8afe2bf0.js');
require('../../../_chunks/dep-cea0dc9b.js');
require('../../../_chunks/dep-d67d6b6f.js');
require('../../../_chunks/dep-55d8c3ed.js');
require('../../../_chunks/dep-beb9de0a.js');
require('../../../_chunks/dep-43bc982b.js');
require('../../../radio/group.js');
require('@babel/runtime/helpers/asyncToGenerator');
require('@babel/runtime/regenerator');
require('../../../radio/radio-group-props.js');
require('../../../radio/radio-button.js');
require('../../../radio/hooks/useKeyboard.js');
require('../../../utils/dom.js');
require('../../../_chunks/dep-0dafeb05.js');
require('../../../watermark/hooks/index.js');
require('../../../hooks/useResizeObserver.js');
require('../../../_chunks/dep-be62446e.js');
require('../../../_chunks/dep-31140ae7.js');
require('../../../_chunks/dep-533159e9.js');
require('../../../_chunks/dep-22f8eb15.js');
require('../../../utils/withInstall.js');
require('../../../hooks/useKeepAnimation.js');
require('../../../input-number/index.js');
require('../../../input-number/input-number.js');
require('tdesign-icons-vue-next');
require('../../../button/index.js');
require('../../../button/button.js');
require('../../../loading/index.js');
require('../../../_chunks/dep-0d31a2f0.js');
require('../../../loading/plugin.js');
require('../../../loading/loading.js');
require('../../../loading/icon/gradient.js');
require('../../../_chunks/dep-b1b8272b.js');
require('../../../hooks/useTeleport.js');
require('../../../loading/props.js');
require('../../../_chunks/dep-d4796921.js');
require('../../../_chunks/dep-62aae11c.js');
require('../../../_chunks/dep-7c08b9a8.js');
require('../../../_chunks/dep-56c837c8.js');
require('../../../_chunks/dep-fd1ddb6b.js');
require('../../../_chunks/dep-d83ac33f.js');
require('../../../button/props.js');
require('../../../hooks/useRipple.js');
require('../../../input/index.js');
require('../../../input/input.js');
require('../../../input/props.js');
require('../../../hooks/useGlobalIcon.js');
require('../../../input/hooks/useInput.js');
require('../../../form/consts/index.js');
require('../../../input/hooks/useLengthLimit.js');
require('../../../_chunks/dep-cef23b69.js');
require('../../../input/hooks/useInputEventHandler.js');
require('../../../input/hooks/useInputWidth.js');
require('../../../input/input-group.js');
require('../../../input/input-group-props.js');
require('../../../input-number/props.js');
require('../../../input-number/hooks/useInputNumber.js');
require('../../../hooks/useCommonClassName.js');
require('../../../_chunks/dep-628f2a1a.js');
require('../../../_chunks/dep-de8595be.js');
require('./base-props.js');
require('../../../_chunks/dep-5b990b48.js');
require('./slider.js');
require('../../../select/index.js');
require('../../../select/select.js');
require('../../../common-components/fake-arrow.js');
require('../../../select-input/index.js');
require('../../../select-input/select-input.js');
require('../../../popup/index.js');
require('../../../popup/popup.js');
require('@popperjs/core');
require('../../../popup/container.js');
require('../../../popup/props.js');
require('../../../select-input/props.js');
require('../../../select-input/hooks/useMultiple.js');
require('../../../tag-input/index.js');
require('../../../tag-input/tag-input.js');
require('../../../tag-input/props.js');
require('../../../tag-input/hooks/useDragSorter.js');
require('../../../tag-input/hooks/useHover.js');
require('../../../tag-input/hooks/useTagScroll.js');
require('../../../tag-input/hooks/useTagList.js');
require('../../../tag/index.js');
require('../../../tag/tag.js');
require('tinycolor2');
require('../../../tag/props.js');
require('../../../tag/check-tag.js');
require('../../../tag/check-tag-props.js');
require('../../../tag/check-tag-group.js');
require('../../../tag/check-tag-group-props.js');
require('../../../select-input/hooks/useOverlayInnerStyle.js');
require('../../../select-input/hooks/useSingle.js');
require('../../../_chunks/dep-ba971aad.js');
require('../../../_chunks/dep-8ba18d4f.js');
require('../../../select/select-panel.js');
require('../../../select/option.js');
require('../../../select/option-props.js');
require('../../../checkbox/index.js');
require('../../../checkbox/checkbox.js');
require('../../../checkbox/props.js');
require('../../../checkbox/consts/index.js');
require('../../../checkbox/hooks/useCheckboxLazyLoad.js');
require('../../../_chunks/dep-9da21bcd.js');
require('../../../checkbox/hooks/useKeyboardEvent.js');
require('../../../checkbox/group.js');
require('../../../checkbox/checkbox-group-props.js');
require('../../../hooks/slot.js');
require('../../../_chunks/dep-0b6921ca.js');
require('../../../_chunks/dep-732925e8.js');
require('../../../select/utils/index.js');
require('../../../select/consts/index.js');
require('../../../select/option-group.js');
require('../../../select/option-group-props.js');
require('../../../select/props.js');
require('../../../select/hooks/usePanelVirtualScroll.js');
require('../../../hooks/useVirtualScroll.js');
require('../../../select/hooks/useKeyboardControl.js');
require('../../../select/hooks/useSelectOptions.js');
require('../format/inputs.js');
require('../format/config.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _toConsumableArray__default = /*#__PURE__*/_interopDefaultLegacy(_toConsumableArray);
var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);
var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var ColorPanel = Vue.defineComponent({
  name: "ColorPanel",
  props: _objectSpread(_objectSpread({}, colorPicker_props["default"]), {}, {
    togglePopup: {
      type: Function
    }
  }),
  setup: function setup(props2) {
    var _props2$colorModes, _innerValue$value, _props2$colorModes2;
    var baseClassName = colorPicker_hooks_index.useBaseClassName();
    var _useCommonClassName = hooks_useConfig.useCommonClassName(),
      STATUS = _useCommonClassName.STATUS;
    var _useConfig = configProvider_hooks_useConfig.useConfig("colorPicker"),
      t = _useConfig.t,
      globalConfig = _useConfig.globalConfig;
    var statusClassNames = STATUS.value;
    var _toRefs = Vue.toRefs(props2),
      inputValue = _toRefs.value,
      modelValue = _toRefs.modelValue,
      recentColors = _toRefs.recentColors;
    var _useVModel = hooks_useVModel["default"](inputValue, modelValue, props2.defaultValue, props2.onChange),
      _useVModel2 = _slicedToArray__default["default"](_useVModel, 2),
      innerValue = _useVModel2[0],
      setInnerValue = _useVModel2[1];
    var defaultEmptyColor = Vue.computed(function () {
      return isGradient.value ? constants.DEFAULT_LINEAR_GRADIENT : constants.DEFAULT_COLOR;
    });
    var mode = Vue.ref(((_props2$colorModes = props2.colorModes) === null || _props2$colorModes === void 0 ? void 0 : _props2$colorModes.length) !== 1 && (_innerValue$value = innerValue.value) !== null && _innerValue$value !== void 0 && _innerValue$value.includes("linear-gradient") ? "linear-gradient" : ((_props2$colorModes2 = props2.colorModes) === null || _props2$colorModes2 === void 0 ? void 0 : _props2$colorModes2.length) === 1 ? props2.colorModes[0] : "monochrome");
    var isGradient = Vue.computed(function () {
      return mode.value === "linear-gradient";
    });
    var color$1 = Vue.ref(new color.Color(innerValue.value || defaultEmptyColor.value));
    var updateColor = function updateColor() {
      return color$1.value.update(innerValue.value || defaultEmptyColor.value);
    };
    var formatModel = Vue.ref(color$1.value.isGradient ? "CSS" : "RGB");
    var _useDefaultValue = hooks_useDefaultValue["default"](recentColors, props2.defaultRecentColors, props2.onRecentColorsChange, "recentColors"),
      _useDefaultValue2 = _slicedToArray__default["default"](_useDefaultValue, 2),
      recentlyUsedColors = _useDefaultValue2[0],
      setRecentlyUsedColors = _useDefaultValue2[1];
    var formatValue = function formatValue() {
      if (mode.value === "linear-gradient") {
        return color$1.value.linearGradient;
      }
      var colorMap = color$1.value.getFormatsColorMap();
      return Object.keys(colorMap).includes(props2.format) ? colorMap[props2.format] : color$1.value.css;
    };
    var addRecentlyUsedColor = function addRecentlyUsedColor() {
      if (recentlyUsedColors.value === null || recentlyUsedColors.value === false) {
        return;
      }
      var colors = cloneDeep.cloneDeep(recentlyUsedColors.value) || [];
      var currentColor = color$1.value.isGradient ? color$1.value.linearGradient : color$1.value.rgba;
      var index = colors.indexOf(currentColor);
      if (index > -1) {
        colors.splice(index, 1);
      }
      colors.unshift(currentColor);
      if (colors.length > constants.TD_COLOR_USED_COLORS_MAX_SIZE) {
        colors.length = constants.TD_COLOR_USED_COLORS_MAX_SIZE;
      }
      handleRecentlyUsedColorsChange(colors);
    };
    var handleRecentlyUsedColorsChange = function handleRecentlyUsedColorsChange(colors) {
      setRecentlyUsedColors(colors);
    };
    var emitColorChange = function emitColorChange(trigger) {
      setInnerValue(formatValue(), {
        color: color.getColorObject(color$1.value),
        trigger: trigger || "palette-saturation-brightness"
      });
    };
    Vue.watch(function () {
      return [props2.defaultValue, props2.enableAlpha];
    }, updateColor);
    Vue.watch(function () {
      return innerValue.value;
    }, function (newColor) {
      if (newColor !== formatValue()) {
        updateColor();
        mode.value = color$1.value.isGradient ? "linear-gradient" : "monochrome";
      }
    });
    var handleModeChange = function handleModeChange(value) {
      mode.value = value;
      if (value === "linear-gradient") {
        color$1.value.update(color$1.value.gradientColors.length > 0 ? color$1.value.linearGradient : constants.DEFAULT_LINEAR_GRADIENT);
      } else {
        color$1.value.update(color$1.value.rgba);
      }
      emitColorChange();
    };
    var handleFormatModeChange = function handleFormatModeChange(format) {
      return formatModel.value = format;
    };
    var handleSatAndValueChange = function handleSatAndValueChange(_ref) {
      var saturation = _ref.saturation,
        value = _ref.value;
      var _color$value = color$1.value,
        sat = _color$value.saturation,
        val = _color$value.value;
      var changeTrigger = "palette-saturation-brightness";
      if (value !== val && saturation !== sat) {
        color$1.value.saturation = saturation;
        color$1.value.value = value;
        changeTrigger = "palette-saturation-brightness";
      } else if (saturation !== sat) {
        color$1.value.saturation = saturation;
        changeTrigger = "palette-saturation";
      } else if (value !== val) {
        color$1.value.value = value;
        changeTrigger = "palette-brightness";
      } else {
        return;
      }
      color$1.value.update(color$1.value.rgba);
      emitColorChange(changeTrigger);
    };
    var handleHueChange = function handleHueChange(hue) {
      var _props2$onPaletteBarC;
      color$1.value.hue = hue;
      emitColorChange("palette-hue-bar");
      (_props2$onPaletteBarC = props2.onPaletteBarChange) === null || _props2$onPaletteBarC === void 0 || _props2$onPaletteBarC.call(props2, {
        color: color.getColorObject(color$1.value)
      });
    };
    var handleAlphaChange = function handleAlphaChange(alpha) {
      color$1.value.alpha = alpha;
      emitColorChange("palette-alpha-bar");
    };
    var handleInputChange = function handleInputChange(input, alpha) {
      color$1.value.update(input);
      color$1.value.alpha = alpha;
      emitColorChange("input");
    };
    var handleGradientChange = function handleGradientChange(_ref2) {
      var key = _ref2.key,
        payload = _ref2.payload;
      var trigger = "palette-saturation-brightness";
      switch (key) {
        case "degree":
          color$1.value.gradientDegree = payload;
          trigger = "input";
          break;
        case "selectedId":
          color$1.value.gradientSelectedId = payload;
          break;
        case "colors":
          color$1.value.gradientColors = payload;
          break;
      }
      emitColorChange(trigger);
    };
    var handleSetColor = function handleSetColor(type, value) {
      var isGradientValue = color.Color.isGradientColor(value);
      if (isGradientValue) {
        if (props2.colorModes.includes("linear-gradient")) {
          mode.value = "linear-gradient";
          color$1.value.update(value);
          color$1.value.updateCurrentGradientColor();
        } else {
          console.warn("\u8BE5\u6A21\u5F0F\u4E0D\u652F\u6301\u6E10\u53D8\u8272");
        }
      } else if (mode.value === "linear-gradient") {
        color$1.value.updateStates(value);
        color$1.value.updateCurrentGradientColor();
      } else {
        color$1.value.update(value);
      }
      emitColorChange();
    };
    return function () {
      var _systemColors;
      var baseProps = {
        color: color$1.value,
        disabled: props2.disabled
      };
      var showUsedColors = recentlyUsedColors.value !== null && recentlyUsedColors.value !== false;
      var systemColors = props2.swatchColors;
      if (systemColors === void 0) {
        systemColors = _toConsumableArray__default["default"](constants.DEFAULT_SYSTEM_SWATCH_COLORS);
      }
      var showSystemColors = ((_systemColors = systemColors) === null || _systemColors === void 0 ? void 0 : _systemColors.length) > 0;
      var renderSwatches = function renderSwatches() {
        if (!showSystemColors && !showUsedColors) {
          return null;
        }
        return Vue.createVNode(Vue.Fragment, null, [Vue.createVNode("div", {
          "class": "".concat(baseClassName.value, "__swatches-wrap")
        }, [showUsedColors ? Vue.createVNode(colorPicker_components_panel_swatches["default"], Vue.mergeProps(baseProps, {
          "title": t(globalConfig.value.recentColorTitle),
          "editable": true,
          "colors": recentlyUsedColors.value,
          "handleAddColor": addRecentlyUsedColor,
          "onSetColor": function onSetColor(color2) {
            return handleSetColor("used", color2);
          },
          "onChange": handleRecentlyUsedColorsChange
        }), null) : null, showSystemColors ? Vue.createVNode(colorPicker_components_panel_swatches["default"], Vue.mergeProps(baseProps, {
          "title": t(globalConfig.value.swatchColorTitle),
          "colors": systemColors,
          "onSetColor": function onSetColor(color2) {
            return handleSetColor("system", color2);
          }
        }), null) : null])]);
      };
      return Vue.createVNode("div", {
        "class": ["".concat(baseClassName.value, "__panel"), props2.disabled ? statusClassNames.disabled : false]
      }, [Vue.createVNode(colorPicker_components_panel_header["default"], Vue.mergeProps(props2, {
        "mode": mode.value,
        "onModeChange": handleModeChange
      }), null), Vue.createVNode("div", {
        "class": ["".concat(baseClassName.value, "__body")]
      }, [isGradient.value ? Vue.createVNode(colorPicker_components_panel_linearGradient["default"], Vue.mergeProps(baseProps, {
        "onChange": handleGradientChange,
        "enableMultipleGradient": props2.enableMultipleGradient
      }), null) : null, Vue.createVNode(colorPicker_components_panel_saturation["default"], Vue.mergeProps(baseProps, {
        "onChange": handleSatAndValueChange
      }), null), Vue.createVNode("div", {
        "class": ["".concat(baseClassName.value, "__sliders-wrapper")]
      }, [Vue.createVNode("div", {
        "class": ["".concat(baseClassName.value, "__sliders")]
      }, [Vue.createVNode(colorPicker_components_panel_hue["default"], Vue.mergeProps(baseProps, {
        "onChange": handleHueChange
      }), null), props2.enableAlpha ? Vue.createVNode(colorPicker_components_panel_alpha["default"], Vue.mergeProps(baseProps, {
        "onChange": handleAlphaChange
      }), null) : null]), props2.showPrimaryColorPreview ? Vue.createVNode("div", {
        "class": ["".concat(baseClassName.value, "__sliders-preview"), "".concat(baseClassName.value, "--bg-alpha")]
      }, [Vue.createVNode("span", {
        "class": "".concat(baseClassName.value, "__sliders-preview-inner"),
        "style": {
          background: isGradient.value ? color$1.value.linearGradient : color$1.value.rgba
        }
      }, null)]) : null]), Vue.createVNode(colorPicker_components_format_index["default"], Vue.mergeProps(props2, {
        "color": color$1.value,
        "format": formatModel.value,
        "onModeChange": handleFormatModeChange,
        "onInputChange": handleInputChange
      }), null), renderSwatches()])]);
    };
  }
});

exports["default"] = ColorPanel;
//# sourceMappingURL=index.js.map
