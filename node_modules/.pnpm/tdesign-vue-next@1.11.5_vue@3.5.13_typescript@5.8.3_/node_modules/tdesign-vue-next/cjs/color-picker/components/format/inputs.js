/**
 * tdesign v1.11.5
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _toConsumableArray = require('@babel/runtime/helpers/toConsumableArray');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var Vue = require('vue');
var colorPicker_props = require('../../props.js');
var color = require('../../../_chunks/dep-3b785e4a.js');
require('@babel/runtime/helpers/classCallCheck');
require('@babel/runtime/helpers/createClass');
var input_index = require('../../../input/index.js');
var inputNumber_index = require('../../../input-number/index.js');
var colorPicker_components_format_config = require('./config.js');
var throttle = require('../../../_chunks/dep-be62446e.js');
require('@babel/runtime/helpers/slicedToArray');
require('tinycolor2');
require('../../../_chunks/dep-b8b9c2a3.js');
require('../../../_chunks/dep-bbe343d7.js');
require('@babel/runtime/helpers/typeof');
require('../../../_chunks/dep-5ad8a2ab.js');
require('../../../_chunks/dep-0c2ad01b.js');
require('../../../_chunks/dep-8afe2bf0.js');
require('../../../input/input.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('tdesign-icons-vue-next');
require('../../../input/props.js');
require('../../../hooks/useDisabled.js');
require('../../../_chunks/dep-82a90f9f.js');
require('../../../hooks/useReadonly.js');
require('../../../hooks/useConfig.js');
require('../../../config-provider/hooks/useConfig.js');
require('../../../_chunks/dep-b4c4a54b.js');
require('../../../_chunks/dep-f8ff548f.js');
require('../../../_chunks/dep-30fb1b25.js');
require('dayjs');
require('../../../_chunks/dep-b6c192db.js');
require('../../../_chunks/dep-ba2090c8.js');
require('../../../_chunks/dep-b27d3215.js');
require('../../../_chunks/dep-ed572eb3.js');
require('../../../_chunks/dep-047617bf.js');
require('../../../_chunks/dep-0a510359.js');
require('../../../_chunks/dep-50a41d31.js');
require('../../../_chunks/dep-be3c3d53.js');
require('../../../_chunks/dep-8b98fa07.js');
require('../../../_chunks/dep-b0b4fff1.js');
require('../../../_chunks/dep-7a21da5b.js');
require('../../../_chunks/dep-49fa220e.js');
require('../../../_chunks/dep-02ebb419.js');
require('../../../_chunks/dep-feae46a3.js');
require('../../../_chunks/dep-abf21389.js');
require('../../../_chunks/dep-7f32423d.js');
require('../../../_chunks/dep-7c9e3d93.js');
require('../../../_chunks/dep-61a7e281.js');
require('../../../_chunks/dep-ecbaedee.js');
require('../../../_chunks/dep-9de7d250.js');
require('../../../_chunks/dep-6f8a66a3.js');
require('../../../hooks/useGlobalIcon.js');
require('../../../_chunks/dep-a69ce597.js');
require('../../../utils/render-tnode.js');
require('../../../_chunks/dep-db023c41.js');
require('../../../_chunks/dep-e495f218.js');
require('../../../_chunks/dep-bafc1f63.js');
require('../../../_chunks/dep-c07d6878.js');
require('../../../_chunks/dep-a957c564.js');
require('../../../_chunks/dep-acb090bf.js');
require('../../../_chunks/dep-76218bd8.js');
require('../../../_chunks/dep-9a321a91.js');
require('../../../input/hooks/useInput.js');
require('../../../form/consts/index.js');
require('../../../hooks/useKeepAnimation.js');
require('../../../hooks/useVModel.js');
require('../../../input/hooks/useLengthLimit.js');
require('../../../_chunks/dep-cef23b69.js');
require('../../../_chunks/dep-25acc189.js');
require('../../../_chunks/dep-93cf0a54.js');
require('../../../_chunks/dep-cea0dc9b.js');
require('../../../input/hooks/useInputEventHandler.js');
require('../../../input/hooks/useInputWidth.js');
require('../../../hooks/useResizeObserver.js');
require('../../../input/input-group.js');
require('../../../input/input-group-props.js');
require('../../../utils/withInstall.js');
require('../../../input-number/input-number.js');
require('../../../button/index.js');
require('../../../button/button.js');
require('../../../loading/index.js');
require('../../../_chunks/dep-0d31a2f0.js');
require('../../../loading/plugin.js');
require('../../../loading/loading.js');
require('../../../loading/icon/gradient.js');
require('../../../_chunks/dep-b1b8272b.js');
require('../../../utils/dom.js');
require('../../../hooks/useTeleport.js');
require('../../../loading/props.js');
require('../../../_chunks/dep-d4796921.js');
require('../../../_chunks/dep-62aae11c.js');
require('../../../_chunks/dep-7c08b9a8.js');
require('../../../_chunks/dep-56c837c8.js');
require('../../../_chunks/dep-55d8c3ed.js');
require('../../../_chunks/dep-fd1ddb6b.js');
require('../../../_chunks/dep-d83ac33f.js');
require('../../../button/props.js');
require('../../../hooks/useRipple.js');
require('../../../input-number/props.js');
require('../../../input-number/hooks/useInputNumber.js');
require('../../../hooks/useCommonClassName.js');
require('../../../_chunks/dep-628f2a1a.js');
require('../../../_chunks/dep-de8595be.js');
require('../../../_chunks/dep-31140ae7.js');
require('../../../_chunks/dep-533159e9.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _toConsumableArray__default = /*#__PURE__*/_interopDefaultLegacy(_toConsumableArray);
var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var FormatInputs = Vue.defineComponent({
  name: "FormatInputs",
  inheritAttrs: false,
  props: _objectSpread(_objectSpread({}, colorPicker_props["default"]), {}, {
    color: {
      type: Object
    },
    onInputChange: {
      type: Function,
      "default": function _default() {
        return function () {};
      }
    }
  }),
  setup: function setup(props2) {
    var inputConfigs = Vue.computed(function () {
      var configs = _toConsumableArray__default["default"](colorPicker_components_format_config.FORMAT_INPUT_CONFIG[props2.format]);
      if (props2.enableAlpha) {
        configs.push({
          type: "inputNumber",
          key: "a",
          min: 0,
          max: 100,
          format: function format(value) {
            return "".concat(value, "%");
          },
          flex: 1.15
        });
      }
      return configs;
    });
    var modelValue = Vue.reactive({});
    var lastModelValue = Vue.reactive({});
    var getFormatColorMap = function getFormatColorMap(type) {
      var color$1 = props2.color;
      if (type === "encode") {
        return {
          HSV: color$1.getHsva(),
          HSL: color$1.getHsla(),
          RGB: color$1.getRgba(),
          CMYK: color$1.getCmyk(),
          CSS: {
            css: color$1.css
          },
          HEX: {
            hex: color$1.hex
          }
        };
      }
      return {
        HSV: color.Color.object2color(modelValue, "HSV"),
        HSL: color.Color.object2color(modelValue, "HSL"),
        RGB: color.Color.object2color(modelValue, "RGB"),
        CMYK: color.Color.object2color(modelValue, "CMYK"),
        CSS: modelValue.css,
        HEX: modelValue.hex
      };
    };
    var updateModelValue = function updateModelValue() {
      var format = props2.format,
        color = props2.color;
      var values = getFormatColorMap("encode")[format];
      values.a = Math.round(color.alpha * 100);
      Object.keys(values).forEach(function (key) {
        modelValue[key] = values[key];
        lastModelValue[key] = values[key];
      });
    };
    updateModelValue();
    var throttleUpdate = throttle.throttle(updateModelValue, 100);
    Vue.watch(function () {
      var _props2$color = props2.color,
        saturation = _props2$color.saturation,
        hue = _props2$color.hue,
        value = _props2$color.value,
        alpha = _props2$color.alpha,
        css = _props2$color.css;
      return [saturation, hue, value, alpha, css, props2.format];
    }, throttleUpdate);
    var handleChange = function handleChange(key, v) {
      if (v === lastModelValue[key]) {
        return;
      }
      var value = getFormatColorMap("decode")[props2.format];
      props2.onInputChange(value, modelValue.a / 100, key, v);
    };
    return function () {
      var inputProps = _objectSpread({}, props2.inputProps || {});
      return Vue.createVNode("div", {
        "class": "input-group"
      }, [inputConfigs.value.map(function (config) {
        return Vue.createVNode("div", {
          "class": "input-group__item",
          "key": config.key,
          "style": {
            flex: config.flex || 1
          }
        }, [config.type === "input" ? Vue.createVNode(input_index.Input, Vue.mergeProps(inputProps, {
          "align": "center",
          "size": "small",
          "disabled": props2.disabled,
          "modelValue": modelValue[config.key],
          "onUpdate:modelValue": function onUpdateModelValue($event) {
            return modelValue[config.key] = $event;
          },
          "maxlength": props2.format === "HEX" ? 9 : void 0,
          "title": modelValue[config.key],
          "onBlur": function onBlur(v) {
            return handleChange(config.key, v);
          },
          "onEnter": function onEnter(v) {
            return handleChange(config.key, v);
          }
        }), null) : Vue.createVNode(inputNumber_index.InputNumber, Vue.mergeProps(inputProps, {
          "align": "center",
          "size": "small",
          "disabled": props2.disabled,
          "modelValue": modelValue[config.key],
          "onUpdate:modelValue": function onUpdateModelValue($event) {
            return modelValue[config.key] = $event;
          },
          "title": modelValue[config.key],
          "min": config.min,
          "max": config.max,
          "step": 1,
          "format": config.format,
          "theme": "normal",
          "onBlur": function onBlur(v) {
            return handleChange(config.key, v);
          },
          "onEnter": function onEnter(v) {
            return handleChange(config.key, v);
          }
        }), null)]);
      })]);
    };
  }
});

exports["default"] = FormatInputs;
//# sourceMappingURL=inputs.js.map
