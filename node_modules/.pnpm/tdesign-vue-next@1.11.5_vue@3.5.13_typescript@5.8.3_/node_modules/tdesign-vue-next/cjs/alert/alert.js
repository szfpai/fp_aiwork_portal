/**
 * tdesign v1.11.5
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var Vue = require('vue');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var utils_dom = require('../utils/dom.js');
var alert_props = require('./props.js');
var hooks_icon = require('../hooks/icon.js');
var hooks_useGlobalIcon = require('../hooks/useGlobalIcon.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var hooks_tnode = require('../_chunks/dep-a69ce597.js');
var configProvider_hooks_useConfig = require('../config-provider/hooks/useConfig.js');
var isString = require('../_chunks/dep-b8b9c2a3.js');
var isArray = require('../_chunks/dep-5ad8a2ab.js');
require('../_chunks/dep-30fb1b25.js');
require('../_chunks/dep-047617bf.js');
require('../_chunks/dep-bbe343d7.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-0a510359.js');
require('../utils/render-tnode.js');
require('../_chunks/dep-db023c41.js');
require('../_chunks/dep-e495f218.js');
require('../_chunks/dep-bafc1f63.js');
require('../_chunks/dep-0c2ad01b.js');
require('../_chunks/dep-c07d6878.js');
require('../_chunks/dep-a957c564.js');
require('../_chunks/dep-acb090bf.js');
require('../_chunks/dep-76218bd8.js');
require('../_chunks/dep-9a321a91.js');
require('../_chunks/dep-ecbaedee.js');
require('../_chunks/dep-8b98fa07.js');
require('../_chunks/dep-b0b4fff1.js');
require('../_chunks/dep-7a21da5b.js');
require('../_chunks/dep-ed572eb3.js');
require('../_chunks/dep-9de7d250.js');
require('../_chunks/dep-be3c3d53.js');
require('../_chunks/dep-b4c4a54b.js');
require('../_chunks/dep-f8ff548f.js');
require('dayjs');
require('../_chunks/dep-b6c192db.js');
require('../_chunks/dep-ba2090c8.js');
require('../_chunks/dep-b27d3215.js');
require('../_chunks/dep-50a41d31.js');
require('../_chunks/dep-49fa220e.js');
require('../_chunks/dep-02ebb419.js');
require('../_chunks/dep-feae46a3.js');
require('../_chunks/dep-abf21389.js');
require('../_chunks/dep-7f32423d.js');
require('../_chunks/dep-7c9e3d93.js');
require('../_chunks/dep-61a7e281.js');
require('../_chunks/dep-6f8a66a3.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

var _Alert = Vue.defineComponent({
  name: "TAlert",
  props: alert_props["default"],
  setup: function setup(props2) {
    var _useConfig = configProvider_hooks_useConfig.useConfig("alert"),
      globalConfig = _useConfig.globalConfig,
      classPrefix = _useConfig.classPrefix;
    var _useGlobalIcon = hooks_useGlobalIcon.useGlobalIcon({
        CheckCircleFilledIcon: tdesignIconsVueNext.CheckCircleFilledIcon,
        CloseIcon: tdesignIconsVueNext.CloseIcon,
        ErrorCircleFilledIcon: tdesignIconsVueNext.ErrorCircleFilledIcon,
        HelpCircleFilledIcon: tdesignIconsVueNext.HelpCircleFilledIcon,
        InfoCircleFilledIcon: tdesignIconsVueNext.InfoCircleFilledIcon
      }),
      CheckCircleFilledIcon = _useGlobalIcon.CheckCircleFilledIcon,
      CloseIcon = _useGlobalIcon.CloseIcon,
      ErrorCircleFilledIcon = _useGlobalIcon.ErrorCircleFilledIcon,
      HelpCircleFilledIcon = _useGlobalIcon.HelpCircleFilledIcon,
      InfoCircleFilledIcon = _useGlobalIcon.InfoCircleFilledIcon;
    var COMPONENT_NAME = hooks_useConfig.usePrefixClass("alert");
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var renderIconTNode = hooks_icon.useIcon();
    var alertRef = Vue.ref(null);
    var descriptionRef = Vue.ref(null);
    var descHeight = Vue.ref(0);
    var visible = Vue.ref(true);
    var collapsed = Vue.ref(true);
    var renderIcon = function renderIcon() {
      var Component = {
        info: InfoCircleFilledIcon,
        success: CheckCircleFilledIcon,
        warning: ErrorCircleFilledIcon,
        error: ErrorCircleFilledIcon,
        question: HelpCircleFilledIcon
      };
      var iconContent = renderIconTNode("icon", Component);
      return iconContent ? Vue.createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__icon")
      }, [iconContent]) : null;
    };
    var renderClose = function renderClose() {
      var close = props2.close;
      var closeContent = null;
      if (close === true || close === "") {
        closeContent = Vue.createVNode(CloseIcon, null, null);
      } else if (isString.isString(close)) {
        closeContent = close;
      } else {
        closeContent = renderIconTNode("close");
      }
      return closeContent ? Vue.createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__close"),
        "onClick": handleClose
      }, [closeContent]) : null;
    };
    var renderTitle = function renderTitle() {
      var titleContent = renderTNodeJSX("title");
      return titleContent ? Vue.createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__title")
      }, [" ", titleContent]) : null;
    };
    var renderMessage = function renderMessage() {
      var operationContent = renderTNodeJSX("operation");
      return Vue.createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__message")
      }, [renderDescription(), operationContent ? Vue.createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__operation")
      }, [operationContent]) : null]);
    };
    var renderDescription = function renderDescription() {
      var _descriptionRef$value;
      var messageContent;
      messageContent = renderTNodeJSX("default");
      if (!messageContent) {
        messageContent = renderTNodeJSX("message");
      }
      var contentLength = isArray.isArray(messageContent) ? messageContent.length : 1;
      var hasCollapse = props2.maxLine > 0 && props2.maxLine < contentLength;
      var height = (_descriptionRef$value = descriptionRef.value) === null || _descriptionRef$value === void 0 || (_descriptionRef$value = _descriptionRef$value.children[0]) === null || _descriptionRef$value === void 0 ? void 0 : _descriptionRef$value.offsetHeight;
      if (hasCollapse && collapsed.value) {
        messageContent = messageContent.slice(0, props2.maxLine);
        height && (descriptionRef.value.style.height = "".concat(descHeight.value, "px"));
      } else if (hasCollapse) {
        height && (descriptionRef.value.style.height = "".concat(height * (contentLength - props2.maxLine) + descHeight.value, "px"));
      }
      return Vue.createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__description"),
        "ref": descriptionRef
      }, [hasCollapse ? messageContent.map(function (content) {
        return Vue.createVNode("div", null, [content]);
      }) : messageContent, hasCollapse ? Vue.createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__collapse"),
        "onClick": function onClick() {
          collapsed.value = !collapsed.value;
        }
      }, [collapsed.value ? globalConfig.value.expandText : globalConfig.value.collapseText]) : null]);
    };
    var renderContent = function renderContent() {
      return Vue.createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__content")
      }, [renderTitle(), renderMessage()]);
    };
    var handleClose = function handleClose(e) {
      var _props2$onClose;
      (_props2$onClose = props2.onClose) === null || _props2$onClose === void 0 || _props2$onClose.call(props2, {
        e: e
      });
      utils_dom.addClass(alertRef.value, "".concat(COMPONENT_NAME.value, "--closing"));
    };
    var handleCloseEnd = function handleCloseEnd(e) {
      var isTransitionTarget = e.target === alertRef.value;
      if (e.propertyName === "opacity" && isTransitionTarget) {
        var _props2$onClosed;
        visible.value = false;
        (_props2$onClosed = props2.onClosed) === null || _props2$onClosed === void 0 || _props2$onClosed.call(props2, {
          e: e
        });
      }
    };
    Vue.onMounted(function () {
      utils_dom.on(alertRef.value, "transitionend", handleCloseEnd);
      descHeight.value = descriptionRef.value.offsetHeight;
    });
    Vue.onBeforeUnmount(function () {
      utils_dom.off(alertRef.value, "transitionend", handleCloseEnd);
    });
    return function () {
      return Vue.createVNode("div", {
        "ref": alertRef,
        "class": ["".concat(COMPONENT_NAME.value), "".concat(COMPONENT_NAME.value, "--").concat(props2.theme), _defineProperty__default["default"]({}, "".concat(classPrefix.value, "-is-hidden"), !visible.value)]
      }, [renderIcon(), renderContent(), renderClose()]);
    };
  }
});

exports["default"] = _Alert;
//# sourceMappingURL=alert.js.map
