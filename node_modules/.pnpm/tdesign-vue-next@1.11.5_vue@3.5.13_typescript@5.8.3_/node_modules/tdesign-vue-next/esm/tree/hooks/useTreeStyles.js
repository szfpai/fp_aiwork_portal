/**
 * tdesign v1.11.5
 * (c) 2025 tdesign
 * @license MIT
 */

import { computed } from 'vue';
import 'lodash-es';
import 'tdesign-icons-vue-next';
import '../../checkbox/index.js';
import '../../loading/index.js';
import { usePrefixClass } from '../../hooks/useConfig.js';
import '../../utils/dom.js';
import '@babel/runtime/helpers/toConsumableArray';
import '@babel/runtime/helpers/slicedToArray';
import '@babel/runtime/helpers/asyncToGenerator';
import '@babel/runtime/helpers/classCallCheck';
import '@babel/runtime/helpers/createClass';
import '@babel/runtime/helpers/defineProperty';
import '@babel/runtime/regenerator';
import '../../checkbox/checkbox.js';
import '../../checkbox/props.js';
import '../../hooks/useVModel.js';
import '../../hooks/useRipple.js';
import '../../hooks/useKeepAnimation.js';
import '../../config-provider/hooks/useConfig.js';
import '../../config-provider/utils/context.js';
import '../../_chunks/dep-c75b9b8e.js';
import '@babel/runtime/helpers/typeof';
import '../../_chunks/dep-caecb55d.js';
import 'dayjs';
import '../../_chunks/dep-d60f6309.js';
import '../../_chunks/dep-7c56a7f5.js';
import '../../utils/render-tnode.js';
import '../../checkbox/consts/index.js';
import '../../checkbox/hooks/useCheckboxLazyLoad.js';
import '../../_chunks/dep-8c2d2d85.js';
import '../../checkbox/hooks/useKeyboardEvent.js';
import '../../_chunks/dep-d2f3d117.js';
import '../../hooks/useDisabled.js';
import '../../hooks/useReadonly.js';
import '../../checkbox/group.js';
import '../../checkbox/checkbox-group-props.js';
import '../../hooks/slot.js';
import '../../utils/withInstall.js';
import 'tdesign-vue-next/esm/common/style/web/components/checkbox/_index.less';
import '../../loading/directive.js';
import '../../loading/plugin.js';
import '../../loading/loading.js';
import '../../loading/icon/gradient.js';
import '../../_chunks/dep-56c3d46e.js';
import '@babel/runtime/helpers/objectWithoutProperties';
import '../../hooks/useTeleport.js';
import '../../loading/props.js';
import 'tdesign-vue-next/esm/common/style/web/components/loading/_index.less';

function formatCSSUnit(unit) {
  if (!unit) return unit;
  return isNaN(Number(unit)) ? unit : "".concat(unit, "px");
}
function useTreeStyles(state) {
  var props = state.props;
  var componentName = usePrefixClass("tree").value;
  var classPrefix = usePrefixClass().value;
  var virtualConfig = state.virtualConfig,
    isScrolling = state.isScrolling,
    refProps = state.refProps;
  var height = refProps.height,
    maxHeight = refProps.maxHeight;
  var treeClasses = computed(function () {
    var list = [componentName];
    var disabled = props.disabled,
      hover = props.hover,
      transition = props.transition,
      checkable = props.checkable,
      draggable = props.draggable,
      expandOnClickNode = props.expandOnClickNode,
      scroll = props.scroll;
    if (disabled) {
      list.push("".concat(classPrefix, "-is-disabled"));
    }
    if (hover) {
      list.push("".concat(componentName, "--hoverable"));
    }
    if (checkable) {
      list.push("".concat(componentName, "--checkable"));
    }
    if (draggable) {
      list.push("".concat(componentName, "--draggable"));
    }
    if (transition) {
      list.push("".concat(componentName, "--transition"));
    }
    if (expandOnClickNode) {
      list.push("".concat(componentName, "--block-node"));
    }
    var isVirtual = virtualConfig === null || virtualConfig === void 0 ? void 0 : virtualConfig.isVirtualScroll.value;
    if (isVirtual) {
      list.push("".concat(componentName, "__vscroll"));
      if (isScrolling.value) {
        list.push("".concat(componentName, "--scrolling"));
      }
    } else if (scroll && scroll.type === "lazy") {
      list.push("".concat(componentName, "__lazyload"));
    }
    return list;
  });
  var treeContentStyles = computed(function () {
    return {
      height: formatCSSUnit(height.value),
      maxHeight: formatCSSUnit(maxHeight.value),
      overflowY: formatCSSUnit(height.value) || formatCSSUnit(maxHeight.value) ? "auto" : void 0
    };
  });
  var scrollStyles = computed(function () {
    var isVirtual = virtualConfig === null || virtualConfig === void 0 ? void 0 : virtualConfig.isVirtualScroll.value;
    var translateY = isVirtual ? virtualConfig === null || virtualConfig === void 0 ? void 0 : virtualConfig.translateY.value : 0;
    var transform = "translateY(".concat(translateY, "px)");
    var posStyle = {
      transform: transform,
      "-ms-transform": transform,
      "-moz-transform": transform,
      "-webkit-transform": transform
    };
    return posStyle;
  });
  var cursorStyles = computed(function () {
    var isVirtual = virtualConfig === null || virtualConfig === void 0 ? void 0 : virtualConfig.isVirtualScroll.value;
    var translateY = isVirtual ? virtualConfig === null || virtualConfig === void 0 ? void 0 : virtualConfig.translateY.value : 0;
    var translate = "translate(0, ".concat(translateY, "px)");
    return {
      transform: translate,
      "-ms-transform": translate,
      "-moz-transform": translate,
      "-webkit-transform": translate
    };
  });
  return {
    treeClasses: treeClasses,
    treeContentStyles: treeContentStyles,
    scrollStyles: scrollStyles,
    cursorStyles: cursorStyles
  };
}

export { useTreeStyles as default, formatCSSUnit };
//# sourceMappingURL=useTreeStyles.js.map
