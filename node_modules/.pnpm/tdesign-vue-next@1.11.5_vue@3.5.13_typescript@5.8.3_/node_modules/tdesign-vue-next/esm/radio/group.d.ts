declare const _default: import("vue").DefineComponent<{
    allowUncheck: BooleanConstructor;
    disabled: {
        type: BooleanConstructor;
        default: any;
    };
    name: {
        type: StringConstructor;
        default: string;
    };
    options: {
        type: import("vue").PropType<import("./type").TdRadioGroupProps["options"]>;
    };
    readonly: {
        type: BooleanConstructor;
        default: any;
    };
    size: {
        type: import("vue").PropType<import("./type").TdRadioGroupProps["size"]>;
        default: import("./type").TdRadioGroupProps["size"];
        validator(val: import("./type").TdRadioGroupProps["size"]): boolean;
    };
    theme: {
        type: import("vue").PropType<import("./type").TdRadioGroupProps["theme"]>;
        default: import("./type").TdRadioGroupProps["theme"];
        validator(val: import("./type").TdRadioGroupProps["theme"]): boolean;
    };
    value: {
        type: import("vue").PropType<import("./type").TdRadioGroupProps["value"]>;
        default: import("./type").TdRadioGroupProps["value"];
    };
    modelValue: {
        type: import("vue").PropType<import("./type").TdRadioGroupProps["value"]>;
        default: import("./type").TdRadioGroupProps["value"];
    };
    defaultValue: {
        type: import("vue").PropType<import("./type").TdRadioGroupProps["defaultValue"]>;
    };
    variant: {
        type: import("vue").PropType<import("./type").TdRadioGroupProps["variant"]>;
        default: import("./type").TdRadioGroupProps["variant"];
        validator(val: import("./type").TdRadioGroupProps["variant"]): boolean;
    };
    onChange: import("vue").PropType<import("./type").TdRadioGroupProps["onChange"]>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    allowUncheck: BooleanConstructor;
    disabled: {
        type: BooleanConstructor;
        default: any;
    };
    name: {
        type: StringConstructor;
        default: string;
    };
    options: {
        type: import("vue").PropType<import("./type").TdRadioGroupProps["options"]>;
    };
    readonly: {
        type: BooleanConstructor;
        default: any;
    };
    size: {
        type: import("vue").PropType<import("./type").TdRadioGroupProps["size"]>;
        default: import("./type").TdRadioGroupProps["size"];
        validator(val: import("./type").TdRadioGroupProps["size"]): boolean;
    };
    theme: {
        type: import("vue").PropType<import("./type").TdRadioGroupProps["theme"]>;
        default: import("./type").TdRadioGroupProps["theme"];
        validator(val: import("./type").TdRadioGroupProps["theme"]): boolean;
    };
    value: {
        type: import("vue").PropType<import("./type").TdRadioGroupProps["value"]>;
        default: import("./type").TdRadioGroupProps["value"];
    };
    modelValue: {
        type: import("vue").PropType<import("./type").TdRadioGroupProps["value"]>;
        default: import("./type").TdRadioGroupProps["value"];
    };
    defaultValue: {
        type: import("vue").PropType<import("./type").TdRadioGroupProps["defaultValue"]>;
    };
    variant: {
        type: import("vue").PropType<import("./type").TdRadioGroupProps["variant"]>;
        default: import("./type").TdRadioGroupProps["variant"];
        validator(val: import("./type").TdRadioGroupProps["variant"]): boolean;
    };
    onChange: import("vue").PropType<import("./type").TdRadioGroupProps["onChange"]>;
}>>, {
    name: string;
    value: import("./type").RadioValue;
    size: import("..").SizeEnum;
    disabled: boolean;
    readonly: boolean;
    modelValue: import("./type").RadioValue;
    allowUncheck: boolean;
    theme: "button" | "radio";
    variant: "outline" | "primary-filled" | "default-filled";
}, {}>;
export default _default;
