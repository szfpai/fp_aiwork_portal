/**
 * tdesign v1.11.5
 * (c) 2025 tdesign
 * @license MIT
 */

import { defineComponent, createVNode } from 'vue';
import props from './list-item-meta-props.mjs';
import { usePrefixClass } from '../hooks/useConfig.mjs';
import { a as useContent, u as useTNodeJSX } from '../_chunks/dep-46ec3e86.mjs';
import { isString } from 'lodash-es';
import '../config-provider/hooks/useConfig.mjs';
import '../config-provider/utils/context.mjs';
import '../_chunks/dep-a5ae2f3f.mjs';
import '../_chunks/dep-4ed7019e.mjs';
import '../_chunks/dep-82d2a14f.mjs';
import '../_chunks/dep-37fa6ccb.mjs';
import '../_chunks/dep-7fb24b17.mjs';
import '../utils/render-tnode.mjs';

var _ListItemMeta = defineComponent({
  name: "TListItemMeta",
  props: props,
  setup: function setup(props2, ctx) {
    var COMPONENT_NAME = usePrefixClass("list-item__meta");
    var renderContent = useContent();
    var renderTNodeJSX = useTNodeJSX();
    var renderAvatar = function renderAvatar() {
      if (props2.avatar || ctx.slots.avatar) {
        console.warn("`avatar` is going to be deprecated, please use `image` instead");
      }
      var thumbnail = renderContent("avatar", "image");
      if (!thumbnail) return;
      if (isString(thumbnail)) {
        return createVNode("div", {
          "class": "".concat(COMPONENT_NAME.value, "-avatar")
        }, [createVNode("img", {
          "src": thumbnail
        }, null)]);
      }
      return createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "-avatar")
      }, [thumbnail]);
    };
    return function () {
      var propsTitleContent = renderTNodeJSX("title");
      var propsDescriptionContent = renderTNodeJSX("description");
      var listItemMetaContent = [renderAvatar(), createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "-content")
      }, [propsTitleContent && createVNode("h3", {
        "class": "".concat(COMPONENT_NAME.value, "-title")
      }, [propsTitleContent]), propsDescriptionContent && createVNode("p", {
        "class": "".concat(COMPONENT_NAME.value, "-description")
      }, [propsDescriptionContent])])];
      return createVNode("div", {
        "class": COMPONENT_NAME.value
      }, [listItemMetaContent]);
    };
  }
});

export { _ListItemMeta as default };
//# sourceMappingURL=list-item-meta.mjs.map
