/**
 * tdesign v1.11.5
 * (c) 2025 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-da95471f.mjs';
import { defineComponent, computed, createVNode } from 'vue';
import { isObject } from 'lodash-es';
import { ChevronLeftIcon, RoundIcon, ChevronRightIcon, ChevronUpIcon, ChevronDownIcon } from 'tdesign-icons-vue-next';
import props from './pagination-mini-props.mjs';
import { usePrefixClass } from '../hooks/useConfig.mjs';
import { useGlobalIcon } from '../hooks/useGlobalIcon.mjs';
import { Button } from '../button/index.mjs';
import '../_chunks/dep-4ed7019e.mjs';
import '../config-provider/hooks/useConfig.mjs';
import '../config-provider/utils/context.mjs';
import '../_chunks/dep-a5ae2f3f.mjs';
import '../_chunks/dep-82d2a14f.mjs';
import '../_chunks/dep-37fa6ccb.mjs';
import '../_chunks/dep-7fb24b17.mjs';
import '../button/button.mjs';
import '../_chunks/dep-03e058e5.mjs';
import '../_chunks/dep-9f375e51.mjs';
import '../loading/index.mjs';
import '../loading/directive.mjs';
import '../loading/plugin.mjs';
import '../loading/loading.mjs';
import '../_chunks/dep-6d9c1bfc.mjs';
import '../loading/icon/gradient.mjs';
import '../_chunks/dep-6cfc5734.mjs';
import '../_chunks/dep-3d81ac0a.mjs';
import '../_chunks/dep-6a79c950.mjs';
import '../utils/dom.mjs';
import '../_chunks/dep-46ec3e86.mjs';
import '../utils/render-tnode.mjs';
import '../hooks/useTeleport.mjs';
import '../loading/props.mjs';
import '../utils/withInstall.mjs';
import './style/css.mjs';
import '../button/props.mjs';
import '../hooks/useRipple.mjs';
import '../hooks/useKeepAnimation.mjs';
import '../hooks/useDisabled.mjs';

var _PaginationMini = defineComponent({
  name: "TPaginationMini",
  props: props,
  setup: function setup(props2) {
    var COMPONENT_NAME = usePrefixClass("pagination-mini");
    var _useGlobalIcon = useGlobalIcon({
        ChevronLeftIcon: ChevronLeftIcon,
        RoundIcon: RoundIcon,
        ChevronRightIcon: ChevronRightIcon,
        ChevronUpIcon: ChevronUpIcon,
        ChevronDownIcon: ChevronDownIcon
      }),
      ChevronLeftIcon$1 = _useGlobalIcon.ChevronLeftIcon,
      RoundIcon$1 = _useGlobalIcon.RoundIcon,
      ChevronRightIcon$1 = _useGlobalIcon.ChevronRightIcon,
      ChevronUpIcon$1 = _useGlobalIcon.ChevronUpIcon,
      ChevronDownIcon$1 = _useGlobalIcon.ChevronDownIcon;
    var titleConfig = computed(function () {
      if (isObject(props2.tips)) return props2.tips;
      if (props2.tips === true) return {
        prev: "\u4E0A\u4E00\u9875",
        current: "\u5F53\u524D",
        next: "\u4E0B\u4E00\u9875"
      };
      return {};
    });
    var disabledConfig = computed(function () {
      if (isObject(props2.disabled)) return props2.disabled;
      if (props2.disabled === true) return {
        prev: true,
        current: true,
        next: true
      };
      return {
        prev: false,
        current: false,
        next: false
      };
    });
    return function () {
      var jumperClass = [COMPONENT_NAME.value, _defineProperty({}, "".concat(COMPONENT_NAME.value, "--outline"), props2.variant === "outline")];
      return createVNode("div", {
        "class": jumperClass
      }, [createVNode(Button, {
        "title": titleConfig.value.prev,
        "variant": props2.variant,
        "size": props2.size,
        "shape": "square",
        "onClick": function onClick(e) {
          var _props2$onChange;
          return (_props2$onChange = props2.onChange) === null || _props2$onChange === void 0 ? void 0 : _props2$onChange.call(props2, {
            e: e,
            trigger: "prev"
          });
        },
        "icon": props2.layout === "horizontal" ? function () {
          return createVNode(ChevronLeftIcon$1, null, null);
        } : function () {
          return createVNode(ChevronUpIcon$1, null, null);
        },
        "class": "".concat(COMPONENT_NAME.value, "__prev"),
        "disabled": disabledConfig.value.prev
      }, null), props2.showCurrent && createVNode(Button, {
        "title": titleConfig.value.current,
        "variant": props2.variant,
        "size": props2.size,
        "shape": "square",
        "onClick": function onClick(e) {
          var _props2$onChange2;
          return (_props2$onChange2 = props2.onChange) === null || _props2$onChange2 === void 0 ? void 0 : _props2$onChange2.call(props2, {
            e: e,
            trigger: "current"
          });
        },
        "icon": function icon() {
          return createVNode(RoundIcon$1, null, null);
        },
        "class": "".concat(COMPONENT_NAME.value, "__current"),
        "disabled": disabledConfig.value.current
      }, null), createVNode(Button, {
        "title": titleConfig.value.next,
        "variant": props2.variant,
        "size": props2.size,
        "shape": "square",
        "onClick": function onClick(e) {
          var _props2$onChange3;
          return (_props2$onChange3 = props2.onChange) === null || _props2$onChange3 === void 0 ? void 0 : _props2$onChange3.call(props2, {
            e: e,
            trigger: "next"
          });
        },
        "icon": props2.layout === "horizontal" ? function () {
          return createVNode(ChevronRightIcon$1, null, null);
        } : function () {
          return createVNode(ChevronDownIcon$1, null, null);
        },
        "class": "".concat(COMPONENT_NAME.value, "__next"),
        "disabled": disabledConfig.value.next
      }, null)]);
    };
  }
});

export { _PaginationMini as default };
//# sourceMappingURL=pagination-mini.mjs.map
