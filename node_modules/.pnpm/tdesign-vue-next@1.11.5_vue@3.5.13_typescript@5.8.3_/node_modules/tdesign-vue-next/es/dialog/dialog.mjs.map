{"version":3,"file":"dialog.mjs","sources":["../../../components/dialog/dialog.tsx"],"sourcesContent":["import {\n  computed,\n  defineComponent,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  ref,\n  Transition,\n  watch,\n  Teleport,\n  ComponentPublicInstance,\n} from 'vue';\nimport { DialogCloseContext } from './type';\nimport props from './props';\nimport { useConfig, usePrefixClass } from '../hooks/useConfig';\nimport { useSameTarget } from './hooks';\nimport useDestroyOnClose from '../hooks/useDestroyOnClose';\nimport { getScrollbarWidth } from '@tdesign/common-js/utils/getScrollbarWidth';\nimport useTeleport from '../hooks/useTeleport';\nimport usePopupManager from '../hooks/usePopupManager';\nimport { getCSSValue } from './utils';\nimport TDialogCard from './dialog-card';\n\nlet mousePosition: { x: number; y: number } | null;\nconst getClickPosition = (e: MouseEvent) => {\n  mousePosition = {\n    x: e.clientX,\n    y: e.clientY,\n  };\n  setTimeout(() => {\n    mousePosition = null;\n  }, 100);\n};\n\nif (typeof window !== 'undefined' && window.document && window.document.documentElement) {\n  document.documentElement.addEventListener('click', getClickPosition, true);\n}\n\nlet key = 1;\n\nexport default defineComponent({\n  name: 'TDialog',\n  inheritAttrs: false,\n  props,\n  emits: ['update:visible'],\n  setup(props, context) {\n    const COMPONENT_NAME = usePrefixClass('dialog');\n    const classPrefix = usePrefixClass();\n    const dialogCardRef = ref<ComponentPublicInstance<{ resetPosition: () => void }>>(null);\n    const { globalConfig } = useConfig('dialog');\n    const confirmBtnAction = (context: { e: MouseEvent }) => {\n      props.onConfirm?.(context);\n    };\n    const cancelBtnAction = (context: { e: MouseEvent }) => {\n      props.onCancel?.(context);\n      emitCloseEvent({ e: context.e, trigger: 'cancel' });\n    };\n    // teleport容器\n    const teleportElement = useTeleport(() => props.attach);\n    useDestroyOnClose();\n    const timer = ref();\n    const styleEl = ref();\n    // 是否模态形式的对话框\n    const isModal = computed(() => props.mode === 'modal');\n    // 是否非模态对话框\n    const isModeLess = computed(() => props.mode === 'modeless');\n    // 是否全屏对话框\n    const isFullScreen = computed(() => props.mode === 'full-screen');\n    const computedVisible = computed(() => props.visible);\n    const maskClass = computed(() => [\n      `${COMPONENT_NAME.value}__mask`,\n      !props.showOverlay && `${classPrefix.value}-is-hidden`,\n    ]);\n    const positionClass = computed(() => {\n      if (isFullScreen.value) return [`${COMPONENT_NAME.value}__position_fullscreen`];\n      if (isModal.value || isModeLess.value) {\n        return [\n          `${COMPONENT_NAME.value}__position`,\n          !!props.top && `${COMPONENT_NAME.value}--top`,\n          `${props.placement && !props.top ? `${COMPONENT_NAME.value}--${props.placement}` : ''}`,\n        ];\n      }\n      return [];\n    });\n    const wrapClass = computed(() =>\n      isFullScreen.value || isModal.value || isModeLess.value ? [`${COMPONENT_NAME.value}__wrap`] : null,\n    );\n    const positionStyle = computed(() => {\n      if (isFullScreen.value) return {}; // 全屏模式，top属性不生效\n\n      // 此处获取定位方式 top 优先级较高 存在时 默认使用top定位\n      const { top } = props;\n      let topStyle = {};\n      if (top !== undefined) {\n        const topValue = getCSSValue(top);\n        topStyle = { paddingTop: topValue };\n      }\n      return topStyle;\n    });\n\n    const { isLastDialog } = usePopupManager('dialog', {\n      visible: computedVisible,\n    });\n\n    watch(\n      () => props.visible,\n      (value) => {\n        if (value) {\n          if ((isModal.value && !props.showInAttachedElement) || isFullScreen.value) {\n            if (props.preventScrollThrough) {\n              document.body.appendChild(styleEl.value);\n            }\n\n            nextTick(() => {\n              if (mousePosition && dialogCardRef.value?.$el) {\n                const el = dialogCardRef.value.$el as HTMLElement;\n                el.style.transformOrigin = `${mousePosition.x - el.offsetLeft}px ${mousePosition.y - el.offsetTop}px`;\n              }\n            });\n          }\n          // 清除鼠标焦点 避免entry事件多次触发（按钮弹出弹窗 不移除焦点 立即按Entry按键 会造成弹窗关闭再弹出）\n          (document.activeElement as HTMLElement)?.blur();\n        } else {\n          clearStyleFunc();\n        }\n        addKeyboardEvent(value);\n      },\n    );\n\n    function destroySelf() {\n      styleEl.value.parentNode?.removeChild?.(styleEl.value);\n    }\n\n    function clearStyleFunc() {\n      clearTimeout(timer.value);\n      timer.value = setTimeout(() => {\n        destroySelf();\n      }, 150);\n    }\n\n    const addKeyboardEvent = (status: boolean) => {\n      if (status) {\n        document.addEventListener('keydown', keyboardEvent);\n        props.confirmOnEnter && document.addEventListener('keydown', keyboardEnterEvent);\n      } else {\n        document.removeEventListener('keydown', keyboardEvent);\n        props.confirmOnEnter && document.removeEventListener('keydown', keyboardEnterEvent);\n      }\n    };\n    // 回车触发确认事件\n    const keyboardEnterEvent = (e: KeyboardEvent) => {\n      const eventSrc = e.target as HTMLElement;\n      if (eventSrc.tagName.toLowerCase() === 'input') return; // 若是input触发 则不执行\n      const { code } = e;\n      if ((code === 'Enter' || code === 'NumpadEnter') && isLastDialog()) {\n        props.onConfirm?.({ e });\n      }\n    };\n    const keyboardEvent = (e: KeyboardEvent) => {\n      if (e.code === 'Escape' && isLastDialog()) {\n        props.onEscKeydown?.({ e });\n        // 根据closeOnEscKeydown判断按下ESC时是否触发close事件\n        if (props.closeOnEscKeydown ?? globalConfig.value.closeOnEscKeydown) {\n          emitCloseEvent({ e, trigger: 'esc' });\n        }\n      }\n    };\n    const overlayAction = (e: MouseEvent) => {\n      if (props.showOverlay && (props.closeOnOverlayClick ?? globalConfig.value.closeOnOverlayClick)) {\n        props.onOverlayClick?.({ e });\n        emitCloseEvent({ e, trigger: 'overlay' });\n      }\n    };\n    const { onClick, onMousedown, onMouseup } = useSameTarget(overlayAction);\n    const closeBtnAction = (context: { e: MouseEvent }) => {\n      props.onCloseBtnClick?.(context);\n      emitCloseEvent({\n        trigger: 'close-btn',\n        e: context.e,\n      });\n    };\n\n    // 打开弹窗动画开始时事件\n    const beforeEnter = () => {\n      props.onBeforeOpen?.();\n    };\n\n    // 打开弹窗动画结束时事件\n    const afterEnter = () => {\n      props.onOpened?.();\n    };\n\n    // 关闭弹窗动画开始时事件\n    const beforeLeave = () => {\n      props.onBeforeClose?.();\n    };\n\n    // 关闭弹窗动画结束时事件\n    const afterLeave = () => {\n      dialogCardRef.value?.resetPosition?.();\n      props.onClosed?.();\n    };\n\n    const emitCloseEvent = (ctx: DialogCloseContext) => {\n      props.onClose?.(ctx);\n      // 默认关闭弹窗\n      context.emit('update:visible', false);\n    };\n\n    // Vue在引入阶段对事件的处理还做了哪些初始化操作。Vue在实例上用一个_events属性存贮管理事件的派发和更新，\n    // 暴露出$on, $once, $off, $emit方法给外部管理事件和派发执行事件\n    // 所以通过判断_events某个事件下监听函数数组是否超过一个，可以判断出组件是否监听了当前事件\n    // const hasEventOn = (name: string) => {\n    //   // _events 因没有被暴露在vue实例接口中，只能把这个规则注释掉\n    //   // eslint-disable-next-line dot-notation\n    //   // @ts-ignore\n    //   const eventFuncs = this['_events']?.[name];\n    //   return !!eventFuncs?.length;\n    // };\n\n    const renderDialog = () => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const { theme, onConfirm, onCancel, onCloseBtnClick, ...otherProps } = props;\n      return (\n        /** 非模态形态下draggable为true才允许拖拽 */\n        <div class={wrapClass.value}>\n          <div\n            class={positionClass.value}\n            style={positionStyle.value}\n            onClick={onClick}\n            onMousedown={onMousedown}\n            onMouseup={onMouseup}\n          >\n            <TDialogCard\n              ref={dialogCardRef}\n              theme={theme}\n              {...otherProps}\n              v-slots={context.slots}\n              onConfirm={confirmBtnAction}\n              onCancel={cancelBtnAction}\n              onCloseBtnClick={closeBtnAction}\n            />\n          </div>\n        </div>\n      );\n    };\n\n    onMounted(() => {\n      const hasScrollBar = document.documentElement.scrollHeight > document.documentElement.clientHeight;\n      const scrollWidth = hasScrollBar ? getScrollbarWidth() : 0;\n      styleEl.value = document.createElement('style');\n      styleEl.value.dataset.id = `td_dialog_${+new Date()}_${(key += 1)}`;\n      styleEl.value.innerHTML = `\n        html body {\n          overflow-y: hidden;\n          width: calc(100% - ${scrollWidth}px);\n        }\n      `;\n    });\n\n    onBeforeUnmount(() => {\n      addKeyboardEvent(false);\n      destroySelf();\n    });\n\n    return () => {\n      const maskView = (isModal.value || isFullScreen.value) && <div key=\"mask\" class={maskClass.value}></div>;\n      const dialogView = renderDialog();\n      const view = [maskView, dialogView];\n      const ctxStyle = { zIndex: props.zIndex };\n      // dialog__ctx--fixed 绝对定位\n      // dialog__ctx--absolute 挂载在attach元素上 相对定位\n      // __ctx--modeless modeless 点击穿透\n      const ctxClass = [\n        `${COMPONENT_NAME.value}__ctx`,\n        {\n          [`${COMPONENT_NAME.value}__ctx--fixed`]: isModal.value || isFullScreen.value,\n          [`${COMPONENT_NAME.value}__ctx--absolute`]: isModal.value && props.showInAttachedElement,\n          [`${COMPONENT_NAME.value}__ctx--modeless`]: isModeLess.value,\n        },\n      ];\n      return (\n        <Teleport disabled={!props.attach || !teleportElement.value} to={teleportElement.value}>\n          <Transition\n            duration={300}\n            name={`${COMPONENT_NAME.value}-zoom__vue`}\n            onBeforeEnter={beforeEnter}\n            onAfterEnter={afterEnter}\n            onBeforeLeave={beforeLeave}\n            onAfterLeave={afterLeave}\n          >\n            {(!props.destroyOnClose || props.visible) && (\n              <div v-show={props.visible} class={ctxClass} style={ctxStyle} {...context.attrs}>\n                {view}\n              </div>\n            )}\n          </Transition>\n        </Teleport>\n      );\n    };\n  },\n});\n"],"names":["mousePosition","getClickPosition","e","x","clientX","y","clientY","setTimeout","window","document","documentElement","addEventListener","key","defineComponent","name","inheritAttrs","props","emits","setup","context","COMPONENT_NAME","usePrefixClass","classPrefix","dialogCardRef","ref","_useConfig","useConfig","globalConfig","confirmBtnAction","_props2$onConfirm","onConfirm","cancelBtnAction","_props2$onCancel","onCancel","emitCloseEvent","trigger","teleportElement","useTeleport","attach","useDestroyOnClose","timer","styleEl","isModal","computed","mode","isModeLess","isFullScreen","computedVisible","visible","maskClass","concat","value","showOverlay","positionClass","top","placement","wrapClass","positionStyle","topStyle","topValue","getCSSValue","paddingTop","_usePopupManager","usePopupManager","isLastDialog","watch","_document$activeEleme","showInAttachedElement","preventScrollThrough","body","appendChild","nextTick","_dialogCardRef$value","$el","el","style","transformOrigin","offsetLeft","offsetTop","activeElement","blur","clearStyleFunc","addKeyboardEvent","destroySelf","_styleEl$value$parent","_styleEl$value$parent2","parentNode","removeChild","call","clearTimeout","status","keyboardEvent","confirmOnEnter","keyboardEnterEvent","removeEventListener","eventSrc","target","tagName","toLowerCase","code","_props2$onConfirm2","_props2$onEscKeydown","_props2$closeOnEscKey","onEscKeydown","closeOnEscKeydown","overlayAction","_props2$closeOnOverla","closeOnOverlayClick","_props2$onOverlayClic","onOverlayClick","_useSameTarget","useSameTarget","onClick","onMousedown","onMouseup","closeBtnAction","_props2$onCloseBtnCli","onCloseBtnClick","beforeEnter","_props2$onBeforeOpen","onBeforeOpen","afterEnter","_props2$onOpened","onOpened","beforeLeave","_props2$onBeforeClose","onBeforeClose","afterLeave","_dialogCardRef$value2","_dialogCardRef$value3","_props2$onClosed","resetPosition","onClosed","ctx","_props2$onClose","onClose","emit","renderDialog","theme","otherProps","_createVNode","TDialogCard","_mergeProps","slots","onMounted","hasScrollBar","scrollHeight","clientHeight","scrollWidth","getScrollbarWidth","createElement","dataset","id","Date","innerHTML","onBeforeUnmount","maskView","dialogView","view","ctxStyle","zIndex","ctxClass","_defineProperty","Teleport","destroyOnClose","_withDirectives","attrs"],"mappings":"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"}