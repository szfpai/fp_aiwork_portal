/**
 * tdesign-vue-chat v0.3.0
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _common_js_progress_const = require('./const.js');
var isString = require('../../../_chunks/dep-06b3a112.js');
var toString = require('../../../_chunks/dep-4fc10188.js');
require('../../../_chunks/dep-ad95cbf6.js');
require('@babel/runtime/helpers/typeof');
require('../../../_chunks/dep-2e1b35d3.js');
require('../../../_chunks/dep-ae3c7717.js');
require('../../../_chunks/dep-8f2ae0c4.js');

/**
 * Converts `string`, as a whole, to upper case just like
 * [String#toUpperCase](https://mdn.io/toUpperCase).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the upper cased string.
 * @example
 *
 * _.toUpper('--foo-bar--');
 * // => '--FOO-BAR--'
 *
 * _.toUpper('fooBar');
 * // => 'FOOBAR'
 *
 * _.toUpper('__foo_bar__');
 * // => '__FOO_BAR__'
 */
function toUpper(value) {
  return toString.toString(value).toUpperCase();
}

var getDiameter = function getDiameter(size) {
  if (!size) return _common_js_progress_const.MOBILE_CIRCLE_SIZE_PX.DEFAULT;
  if (isString.isString(size)) {
    var KEY = toUpper(size);
    if (KEY in _common_js_progress_const.MOBILE_CIRCLE_SIZE_PX) {
      return _common_js_progress_const.MOBILE_CIRCLE_SIZE_PX[KEY];
    }
    return _common_js_progress_const.MOBILE_CIRCLE_SIZE_PX.DEFAULT;
  }
  return size;
};
var getCircleStokeWidth = function getCircleStokeWidth(strokeWidth, size) {
  if (!strokeWidth) {
    if (size === "micro") {
      return 2;
    }
  }
  if (typeof strokeWidth !== "number" || Number.isNaN(strokeWidth)) {
    return 6;
  }
  return strokeWidth;
};

exports.getCircleStokeWidth = getCircleStokeWidth;
exports.getDiameter = getDiameter;
//# sourceMappingURL=utils.js.map
