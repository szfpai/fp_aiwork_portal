{"version":3,"file":"utils.js","sources":["../../../../node_modules/lodash-es/_trimmedEndIndex.js","../../../../node_modules/lodash-es/_baseTrim.js","../../../../node_modules/lodash-es/toNumber.js","../../../../node_modules/lodash-es/toFinite.js","../../../../node_modules/lodash-es/toInteger.js","../../../../node_modules/lodash-es/_isIterateeCall.js","../../../../node_modules/lodash-es/chunk.js","../../../../node_modules/dayjs/plugin/isBetween.js","../../../../node_modules/dayjs/plugin/weekOfYear.js","../../../../node_modules/dayjs/plugin/weekYear.js","../../../../node_modules/dayjs/plugin/localeData.js","../../../../node_modules/dayjs/plugin/quarterOfYear.js","../../../../src/_common/js/date-picker/utils.ts"],"sourcesContent":["/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n","import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n","import eq from './eq.js';\nimport isArrayLike from './isArrayLike.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nexport default isIterateeCall;\n","import baseSlice from './_baseSlice.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * Creates an array of elements split into groups the length of `size`.\n * If `array` can't be split evenly, the final chunk will be the remaining\n * elements.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to process.\n * @param {number} [size=1] The length of each chunk\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the new array of chunks.\n * @example\n *\n * _.chunk(['a', 'b', 'c', 'd'], 2);\n * // => [['a', 'b'], ['c', 'd']]\n *\n * _.chunk(['a', 'b', 'c', 'd'], 3);\n * // => [['a', 'b', 'c'], ['d']]\n */\nfunction chunk(array, size, guard) {\n  if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n    size = 1;\n  } else {\n    size = nativeMax(toInteger(size), 0);\n  }\n  var length = array == null ? 0 : array.length;\n  if (!length || size < 1) {\n    return [];\n  }\n  var index = 0,\n      resIndex = 0,\n      result = Array(nativeCeil(length / size));\n\n  while (index < length) {\n    result[resIndex++] = baseSlice(array, index, (index += size));\n  }\n  return result;\n}\n\nexport default chunk;\n","!function(e,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_isBetween=i()}(this,(function(){\"use strict\";return function(e,i,t){i.prototype.isBetween=function(e,i,s,f){var n=t(e),o=t(i),r=\"(\"===(f=f||\"()\")[0],u=\")\"===f[1];return(r?this.isAfter(n,s):!this.isBefore(n,s))&&(u?this.isBefore(o,s):!this.isAfter(o,s))||(r?this.isBefore(n,s):!this.isAfter(n,s))&&(u?this.isAfter(o,s):!this.isBefore(o,s))}}}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_weekOfYear=t()}(this,(function(){\"use strict\";var e=\"week\",t=\"year\";return function(i,n,r){var f=n.prototype;f.week=function(i){if(void 0===i&&(i=null),null!==i)return this.add(7*(i-this.week()),\"day\");var n=this.$locale().yearStart||1;if(11===this.month()&&this.date()>25){var f=r(this).startOf(t).add(1,t).date(n),s=r(this).endOf(e);if(f.isBefore(s))return 1}var a=r(this).startOf(t).date(n).startOf(e).subtract(1,\"millisecond\"),o=this.diff(a,e,!0);return o<0?r(this).startOf(\"week\").week():Math.ceil(o)},f.weeks=function(e){return void 0===e&&(e=null),this.week(e)}}}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_weekYear=t()}(this,(function(){\"use strict\";return function(e,t){t.prototype.weekYear=function(){var e=this.month(),t=this.week(),n=this.year();return 1===t&&11===e?n+1:0===e&&t>=52?n-1:n}}}));","!function(n,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(n=\"undefined\"!=typeof globalThis?globalThis:n||self).dayjs_plugin_localeData=e()}(this,(function(){\"use strict\";return function(n,e,t){var r=e.prototype,o=function(n){return n&&(n.indexOf?n:n.s)},u=function(n,e,t,r,u){var i=n.name?n:n.$locale(),a=o(i[e]),s=o(i[t]),f=a||s.map((function(n){return n.slice(0,r)}));if(!u)return f;var d=i.weekStart;return f.map((function(n,e){return f[(e+(d||0))%7]}))},i=function(){return t.Ls[t.locale()]},a=function(n,e){return n.formats[e]||function(n){return n.replace(/(\\[[^\\]]+])|(MMMM|MM|DD|dddd)/g,(function(n,e,t){return e||t.slice(1)}))}(n.formats[e.toUpperCase()])},s=function(){var n=this;return{months:function(e){return e?e.format(\"MMMM\"):u(n,\"months\")},monthsShort:function(e){return e?e.format(\"MMM\"):u(n,\"monthsShort\",\"months\",3)},firstDayOfWeek:function(){return n.$locale().weekStart||0},weekdays:function(e){return e?e.format(\"dddd\"):u(n,\"weekdays\")},weekdaysMin:function(e){return e?e.format(\"dd\"):u(n,\"weekdaysMin\",\"weekdays\",2)},weekdaysShort:function(e){return e?e.format(\"ddd\"):u(n,\"weekdaysShort\",\"weekdays\",3)},longDateFormat:function(e){return a(n.$locale(),e)},meridiem:this.$locale().meridiem,ordinal:this.$locale().ordinal}};r.localeData=function(){return s.bind(this)()},t.localeData=function(){var n=i();return{firstDayOfWeek:function(){return n.weekStart||0},weekdays:function(){return t.weekdays()},weekdaysShort:function(){return t.weekdaysShort()},weekdaysMin:function(){return t.weekdaysMin()},months:function(){return t.months()},monthsShort:function(){return t.monthsShort()},longDateFormat:function(e){return a(n,e)},meridiem:n.meridiem,ordinal:n.ordinal}},t.months=function(){return u(i(),\"months\")},t.monthsShort=function(){return u(i(),\"monthsShort\",\"months\",3)},t.weekdays=function(n){return u(i(),\"weekdays\",null,null,n)},t.weekdaysShort=function(n){return u(i(),\"weekdaysShort\",\"weekdays\",3,n)},t.weekdaysMin=function(n){return u(i(),\"weekdaysMin\",\"weekdays\",2,n)}}}));","!function(t,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n():\"function\"==typeof define&&define.amd?define(n):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_quarterOfYear=n()}(this,(function(){\"use strict\";var t=\"month\",n=\"quarter\";return function(e,i){var r=i.prototype;r.quarter=function(t){return this.$utils().u(t)?Math.ceil((this.month()+1)/3):this.month(this.month()%3+3*(t-1))};var s=r.add;r.add=function(e,i){return e=Number(e),this.$utils().p(i)===n?this.add(3*e,t):s.bind(this)(e,i)};var u=r.startOf;r.startOf=function(e,i){var r=this.$utils(),s=!!r.u(i)||i;if(r.p(e)===n){var o=this.quarter()-1;return s?this.month(3*o).startOf(t).startOf(\"day\"):this.month(3*o+2).endOf(t).endOf(\"day\")}return u.bind(this)(e,i)}}}));","import { isFunction, chunk } from 'lodash-es';\nimport dayjs from 'dayjs';\nimport dayJsIsBetween from 'dayjs/plugin/isBetween';\nimport weekOfYear from 'dayjs/plugin/weekOfYear';\nimport weekYear from 'dayjs/plugin/weekYear';\nimport localeData from 'dayjs/plugin/localeData';\nimport quarterOfYear from 'dayjs/plugin/quarterOfYear';\nimport advancedFormat from 'dayjs/plugin/advancedFormat';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\nimport { parseToDayjs } from './format';\n\ndayjs.extend(weekOfYear);\ndayjs.extend(weekYear);\ndayjs.extend(localeData);\ndayjs.extend(quarterOfYear);\ndayjs.extend(advancedFormat);\ndayjs.extend(customParseFormat);\ndayjs.extend(dayJsIsBetween);\n\n/**\n * 首字母大写\n * @param {String} str 目标字符串\n * @returns {String}\n */\nexport function firstUpperCase(str: string): string {\n  if (!str) return str;\n  return str[0].toUpperCase().concat(str.substring(1, str.length));\n}\n\ninterface DateObj {\n  year: number;\n  month: number;\n}\n\n/**\n * 返回指定年、月的第一天日期\n * @param {Object} { year, month }\n * @returns {Date}\n */\nfunction getFirstDayOfMonth({ year, month }: DateObj): Date {\n  return new Date(year, month, 1);\n}\n\n/**\n * 返回指定年、月的天数\n * @param {Object} { year, month }\n * @returns {Number}\n */\nfunction getDaysInMonth({ year, month }: DateObj): number {\n  return new Date(year, month + 1, 0).getDate();\n}\n\n/**\n * 返回指定年、月的最后一天日期\n * @param {Object} { year, month }\n * @returns {Date}\n */\nfunction getLastDayOfMonth({ year, month }: DateObj): Date {\n  return new Date(year, month, getDaysInMonth({ year, month }));\n}\n\nfunction isSameYear(date1: Date, date2: Date): boolean {\n  return date1.getFullYear() === date2.getFullYear();\n}\n\nfunction isSameQuarter(date1: Date, date2: Date): boolean {\n  return isSameYear(date1, date2) && dayjs(date1).quarter() === dayjs(date2).quarter();\n}\n\nfunction isSameMonth(date1: Date, date2: Date): boolean {\n  return isSameYear(date1, date2) && date1.getMonth() === date2.getMonth();\n}\n\nfunction isSameWeek(date1: Date, date2: Date, dayjsLocale = 'zh-cn'): boolean {\n  return isSameMonth(date1, date2) && dayjs(date1).locale(dayjsLocale).week() === dayjs(date2).locale(dayjsLocale).week();\n}\n\nfunction isSameDate(date1: Date, date2: Date): boolean {\n  return isSameMonth(date1, date2) && date1.getDate() === date2.getDate();\n}\n\n/**\n * 比较两个日期对象的时间戳\n * @param {Date} date1 日期1\n * @param {Date} date2 日期2\n * @returns {Number} 返回 date1.getTime() - date2.getTime() 的差值\n */\nfunction compareAsc(date1: { getTime: () => any }, date2: Date): number {\n  const d1 = date1.getTime();\n  const d2 = date2.getTime();\n\n  if (d1 < d2) return -1;\n  if (d1 > d2) return 1;\n  return 0;\n}\n\n/**\n * 比较两个 Date 是否是同一天 或则 同一月 或则 同一年\n * @param {Date} date1 比较的日期\n * @param {Date} date2 比较的日期\n * @param {String} type 比较类型，默认比较到『日』 date|month|year\n * @returns {Boolean}\n */\nexport function isSame(date1: Date, date2: Date, type = 'date', dayjsLocale = 'zh-cn'): boolean {\n  const func = {\n    isSameYear,\n    isSameQuarter,\n    isSameMonth,\n    isSameWeek,\n    isSameDate,\n  } as Record<string, (date1: Date, date2: Date, dayjsLocale?: string) => boolean>;\n  return func[`isSame${firstUpperCase(type)}`](date1, date2, dayjsLocale);\n}\n\nexport function outOfRanges(d: Date, min: any, max: any) {\n  return (min && compareAsc(d, min) === -1) || (max && compareAsc(d, max) === 1);\n}\n\n/**\n * @returns {Date} 当天零点的日期对象\n */\nexport function getToday(): Date {\n  const now = new Date();\n  return new Date(now.getFullYear(), now.getMonth(), now.getDate(), 0, 0, 0);\n}\n\n/**\n * 返回日期对象的年、月、日、小时、分钟、秒、12小时制标识\n * @param {Date} date\n * @returns {Object}\n */\nexport function getDateObj(date: Date) {\n  let tempDate = date;\n  if (!(date instanceof Date)) {\n    tempDate = getToday();\n  }\n  return {\n    year: tempDate.getFullYear(),\n    month: tempDate.getMonth(),\n    date: tempDate.getDate(),\n    hours: tempDate.getHours(),\n    minutes: tempDate.getMinutes(),\n    seconds: tempDate.getSeconds(),\n    milliseconds: tempDate.getMilliseconds(),\n    meridiem: tempDate.getHours() > 11 ? 'PM' : 'AM',\n  };\n}\n\n/**\n * 设置日期对象的时间部分\n * @param {Date} date 日期\n * @param {Number} hours 小时\n * @param {Number} minutes 分钟\n * @param {Number} seconds 秒\n * @param {Number} milliseconds 毫秒\n * @returns {Date} 一个新的date\n */\nexport function setDateTime(\n  date: Date,\n  hours: number,\n  minutes: number,\n  seconds: number,\n  milliseconds?: number\n): Date {\n  return dayjs(date)\n    .hour(hours)\n    .minute(minutes)\n    .second(seconds)\n    .millisecond(milliseconds)\n    .toDate();\n}\n\n/**\n * 减少月份\n * @param {Date} date 起始日期\n * @param {Number} num 月份数\n * @returns {Date}\n */\nexport function subtractMonth(date: Date, num: number): Date {\n  return dayjs(date).subtract(num, 'month').toDate();\n}\n\n/**\n * 增加月份\n * @param {Date} date 起始日期\n * @param {Number} num 月份数\n * @returns {Date}\n */\nexport function addMonth(date: Date, num: number): Date {\n  return dayjs(date).add(num, 'month').toDate();\n}\n\nexport type DateValue = string | Date | number;\nexport interface DisableDateObj { from?: string; to?: string; before?: string; after?: string }\nexport type DisableDate = Array<DateValue> | DisableDateObj | ((date: DateValue) => boolean);\n\nexport interface OptionsType {\n  firstDayOfWeek: number;\n  disableDate: DisableDate;\n  minDate: Date;\n  maxDate: Date;\n  showWeekOfYear?: Boolean;\n  dayjsLocale?: string;\n  monthLocal?: string[];\n  quarterLocal?: string[];\n  cancelRangeSelectLimit?: boolean;\n}\n\nexport function getWeeks(\n  { year, month }: { year: number; month: number },\n  {\n    firstDayOfWeek,\n    showWeekOfYear = false,\n    disableDate = () => false,\n    minDate,\n    maxDate,\n    dayjsLocale = 'zh-cn',\n    cancelRangeSelectLimit = false,\n  }: OptionsType,\n) {\n  const prependDay = getFirstDayOfMonth({ year, month });\n  const appendDay = getLastDayOfMonth({ year, month });\n  const maxDays = getDaysInMonth({ year, month });\n  const daysArr = [];\n  let i = 1;\n  const today = getToday();\n  for (i; i <= maxDays; i++) {\n    const currentDay = new Date(year, month, i);\n    daysArr.push({\n      text: i,\n      active: false,\n      value: currentDay,\n      disabled: (isFunction(disableDate) && disableDate(currentDay))\n        || (!cancelRangeSelectLimit && outOfRanges(currentDay, minDate, maxDate)),\n      now: isSame(today, currentDay),\n      firstDayOfMonth: i === 1,\n      lastDayOfMonth: i === maxDays,\n      type: 'current-month',\n      dayjsObj: dayjs(currentDay).locale(dayjsLocale),\n    });\n  }\n\n  if (prependDay.getDay() !== firstDayOfWeek) {\n    prependDay.setDate(0); // 上一月\n    while (true) {\n      daysArr.unshift({\n        text: prependDay.getDate().toString(),\n        active: false,\n        value: new Date(prependDay),\n        disabled: (isFunction(disableDate) && disableDate(prependDay)) || (!cancelRangeSelectLimit && outOfRanges(prependDay, minDate, maxDate)),\n        additional: true, // 非当前月\n        type: 'prev-month',\n        dayjsObj: dayjs(prependDay).locale(dayjsLocale),\n      });\n      prependDay.setDate(prependDay.getDate() - 1);\n      if (prependDay.getDay() === Math.abs(firstDayOfWeek + 6) % 7) break;\n    }\n  }\n\n  const LEN = 42; // 显示6周\n  while (daysArr.length < LEN) {\n    appendDay.setDate(appendDay.getDate() + 1);\n    daysArr.push({\n      text: appendDay.getDate(),\n      active: false,\n      value: new Date(appendDay),\n      disabled: (isFunction(disableDate) && disableDate(appendDay)) || (!cancelRangeSelectLimit && outOfRanges(appendDay, minDate, maxDate)),\n      additional: true, // 非当前月\n      type: 'next-month',\n      dayjsObj: dayjs(appendDay).locale(dayjsLocale),\n    });\n  }\n\n  const dataList = chunk(daysArr, 7);\n  // 显示周数\n  if (showWeekOfYear) {\n    dataList.forEach((d) => {\n      d.unshift({\n        ...d[0],\n        active: false,\n        value: d[0].value,\n        text: dayjs(d[0].value).locale(dayjsLocale).week(),\n        dayjsObj: dayjs(d[0].value).locale(dayjsLocale),\n      });\n    });\n  }\n\n  return dataList;\n}\n\nexport function getQuarters(\n  year: number,\n  {\n    disableDate = () => false,\n    minDate,\n    maxDate,\n    quarterLocal,\n    dayjsLocale = 'zh-cn',\n    cancelRangeSelectLimit = false,\n  }: OptionsType,\n) {\n  const quarterArr = [];\n  const today = getToday();\n\n  for (let i = 1; i <= 4; i++) {\n    const date = dayjs(new Date(year, 0)).quarter(i).toDate();\n\n    quarterArr.push({\n      value: date,\n      now: isSame(date, today, 'quarter'),\n      disabled: (isFunction(disableDate) && disableDate(date)) || (!cancelRangeSelectLimit && outOfRanges(date, minDate, maxDate)),\n      active: false,\n      text: quarterLocal[i - 1],\n      dayjsObj: dayjs(date).locale(dayjsLocale),\n    });\n  }\n\n  return chunk(quarterArr, 4);\n}\n\nexport function getYears(\n  year: number,\n  {\n    disableDate = () => false,\n    minDate,\n    maxDate,\n    dayjsLocale = 'zh-cn',\n    cancelRangeSelectLimit = false,\n  }: OptionsType,\n) {\n  const startYear = parseInt((year / 10).toString(), 10) * 10;\n  const endYear = startYear + 9;\n\n  const yearArr = [];\n\n  const today = getToday();\n\n  for (let i = startYear; i <= endYear; i++) {\n    const date = new Date(i, 0);\n\n    yearArr.push({\n      value: date,\n      now: isSame(date, today, 'year'),\n      disabled: (isFunction(disableDate) && disableDate(date)) || (!cancelRangeSelectLimit && outOfRanges(date, minDate, maxDate)),\n      active: false,\n      text: `${date.getFullYear()}`,\n      dayjsObj: dayjs(date).locale(dayjsLocale),\n    });\n  }\n\n  return chunk(yearArr, 3);\n}\n\nexport function getMonths(year: number, params: OptionsType) {\n  const {\n    disableDate = () => false, minDate, maxDate, monthLocal, dayjsLocale = 'zh-cn', cancelRangeSelectLimit = false,\n  } = params;\n  const MonthArr = [];\n  const today = getToday();\n\n  for (let i = 0; i <= 11; i++) {\n    const date = new Date(year, i);\n\n    MonthArr.push({\n      value: date,\n      now: isSame(date, today, 'month'),\n      disabled: (isFunction(disableDate) && disableDate(date)) || (!cancelRangeSelectLimit && outOfRanges(date, minDate, maxDate)),\n      active: false,\n      text: monthLocal[date.getMonth()], // `${date.getMonth() + 1} ${monthText || '月'}`,\n      dayjsObj: dayjs(date).locale(dayjsLocale),\n    });\n  }\n\n  return chunk(MonthArr, 3);\n}\n\nexport interface DateTime {\n  additional: boolean;\n  active: boolean;\n  highlight: boolean;\n  hoverHighlight: boolean;\n  startOfRange: boolean;\n  endOfRange: boolean;\n  hoverStartOfRange: boolean;\n  hoverEndOfRange: boolean;\n  value: Date;\n}\n\ninterface FlagActiveOptions {\n  start: Date;\n  end: Date;\n  hoverStart: Date;\n  hoverEnd: Date;\n  type: any;\n  isRange: boolean;\n  value: DateValue | DateValue[];\n  multiple: boolean;\n}\n\nexport function flagActive(data: any[], { ...args }: FlagActiveOptions) {\n  const {\n    start,\n    end,\n    hoverStart,\n    hoverEnd,\n    type = 'date',\n    isRange = false,\n    value,\n    multiple = false,\n  } = args;\n\n  // 周选择器不更改 cell 样式\n  if (type === 'week') return data;\n\n  if (!isRange) {\n    return data.map((row: any[]) => row.map((item: DateTime) => {\n      const _item = item;\n\n      if (multiple) {\n        _item.active = (value as DateValue[])?.some?.((val) => isSame(dayjs(val).toDate(), _item.value, type) && !_item.additional);\n      } else {\n        _item.active = start && isSame(item.value, start, type) && !_item.additional;\n      }\n\n      return _item;\n    }));\n  }\n\n  return data.map((row: any[]) => row.map((item: DateTime) => {\n    const _item = item;\n    const date = item.value;\n\n    const isStart = start && isSame(start, date, type);\n    const isHoverStart = hoverStart && isSame(hoverStart, date, type);\n    const isEnd = end && isSame(end, date, type);\n    const isHoverEnd = hoverEnd && isSame(hoverEnd, date, type);\n    _item.active = (isStart || isEnd) && !_item.additional;\n\n    if (start && end) {\n      _item.highlight = dayjs(date).isBetween(start, end, type, '[]') && !_item.additional;\n      _item.startOfRange = isStart;\n      _item.endOfRange = isEnd;\n    }\n\n    if (hoverStart && hoverEnd) {\n      _item.hoverHighlight = dayjs(date).isBetween(hoverStart, hoverEnd, type, '[]') && !_item.additional;\n      _item.hoverStartOfRange = isHoverStart;\n      _item.hoverEndOfRange = isHoverEnd;\n    }\n    return _item;\n  }));\n}\n\n/**\n * 返回时间对象的小时、分钟、秒、12小时制标识\n * @param {String} timeFormat 'pm 20:11:11:333'\n * @returns {Object}\n */\nexport function extractTimeObj(timeFormat: string = '') {\n  const matchedMeridiem = timeFormat.match(/[ap]m/i) || [''];\n  const timeReg = /\\d{1,2}(:\\d{1,2})?(:\\d{1,2})?(:\\d{1,3})?/;\n  const matchedTimeStr = timeFormat.match(timeReg) || ['0:0:0:0'];\n  const [hours = 0, minutes = 0, seconds = 0, milliseconds = 0] = matchedTimeStr[0].split(':');\n\n  return {\n    hours: +hours,\n    minutes: +minutes,\n    seconds: +seconds,\n    milliseconds: +milliseconds,\n    meridiem: matchedMeridiem[0],\n  };\n}\n\n/**\n * 日期是否可用\n * @param {Object} { value, disableDate, mode, format }\n * @returns {Boolean}\n */\nexport function isEnabledDate({\n  value,\n  disableDate,\n  mode,\n  format,\n}: {\n  value: Date;\n  mode: 'year' | 'month' | 'date' | 'quarter' | 'week';\n  format: string;\n  disableDate: any;\n}): boolean {\n  if (!disableDate) return true;\n\n  const availableMode = mode === 'quarter' ? 'date' : mode;\n\n  let isEnabled = true;\n  // 值类型为 Function 则表示返回值为 true 的日期会被禁用\n  if (isFunction(disableDate)) {\n    return !disableDate(value);\n  }\n\n  // 禁用日期，示例：['A', 'B'] 表示日期 A 和日期 B 会被禁用。\n  if (Array.isArray(disableDate)) {\n    const formattedDisabledDate = disableDate.map((item: string) => parseToDayjs(item, format));\n    // eslint-disable-next-line\n    const isIncludes = formattedDisabledDate.some(item => item.isSame(dayjs(value)));\n    return !isIncludes;\n  }\n\n  // { from: 'A', to: 'B' } 表示在 A 到 B 之间的日期会被禁用（包括A和B）。\n  // eslint-disable-next-line\n  const { from, to, before, after } = disableDate;\n\n  if (from && to) {\n    const compareMin = dayjs(from).startOf('day');\n    const compareMax = dayjs(to).endOf('day');\n    return !dayjs(value).isBetween(compareMin, compareMax, availableMode, '[]');\n  }\n\n  // 最小时间与最大时间的边界，防止正负时区出现禁用时间不一致的情况\n  const min = before ? new Date(dayjs(before).startOf('day').format()) : null;\n  const max = after ? new Date(dayjs(after).endOf('day').format()) : null;\n\n  // { before: 'A', after: 'B' } 表示在 A 之前和在 B 之后的日期都会被禁用。\n  if (max && min) {\n    const compareMin = dayjs(new Date(min));\n    const compareMax = dayjs(new Date(max));\n\n    isEnabled = dayjs(value).isBetween(compareMin, compareMax, availableMode, '[]');\n  } else if (min) {\n    const compareMin = dayjs(new Date(min));\n    isEnabled = !dayjs(value).isBefore(compareMin, availableMode);\n  } else if (max) {\n    const compareMax = dayjs(new Date(max));\n    isEnabled = !dayjs(value).isAfter(compareMax, availableMode);\n  }\n  return isEnabled;\n}\n\n/**\n * formatDate 方法需要date作为入参，部分场景需要将timestamp或格式化后的时间string转换为date进行使用\n */\nexport function covertToDate(value: string, valueType: string) {\n  return valueType === 'time-stamp'\n    ? new Date(value)\n    : dayjs(value, valueType).toDate();\n}\n"],"names":["reWhitespace","trimmedEndIndex","string","index","length","test","charAt","reTrimStart","baseTrim","slice","replace","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toNumber","value","isSymbol","isObject","other","valueOf","isBinary","INFINITY","MAX_INTEGER","toFinite","sign","toInteger","result","remainder","isIterateeCall","object","type","_typeof","isArrayLike","isIndex","eq","nativeCeil","Math","ceil","nativeMax","max","chunk","array","size","guard","undefined","resIndex","Array","baseSlice","e","i","module","exports","this","t","prototype","isBetween","s","f","n","o","r","u","isAfter","isBefore","week","add","$locale","yearStart","month","date","startOf","endOf","a","subtract","diff","weeks","weekYear","year","indexOf","name","map","d","weekStart","Ls","locale","formats","toUpperCase","months","format","monthsShort","firstDayOfWeek","weekdays","weekdaysMin","weekdaysShort","longDateFormat","meridiem","ordinal","localeData","bind","quarter","$utils","Number","p","dayjs","extend","weekOfYear","quarterOfYear","advancedFormat","customParseFormat","dayJsIsBetween","firstUpperCase","str","concat","substring","getFirstDayOfMonth","_ref","Date","getDaysInMonth","_ref2","getDate","getLastDayOfMonth","_ref3","isSameYear","date1","date2","getFullYear","isSameQuarter","isSameMonth","getMonth","isSameWeek","dayjsLocale","arguments","isSameDate","compareAsc","d1","getTime","d2","isSame","func","outOfRanges","min","getToday","now","getDateObj","tempDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","milliseconds","getMilliseconds","setDateTime","hour","minute","second","millisecond","toDate","subtractMonth","num","addMonth","getWeeks","_ref4","_ref5","_ref5$showWeekOfYear","showWeekOfYear","_ref5$disableDate","disableDate","minDate","maxDate","_ref5$dayjsLocale","_ref5$cancelRangeSele","cancelRangeSelectLimit","prependDay","appendDay","maxDays","daysArr","today","currentDay","push","text","active","disabled","isFunction","firstDayOfMonth","lastDayOfMonth","dayjsObj","getDay","setDate","unshift","toString","additional","abs","LEN","dataList","forEach","_objectSpread","getQuarters","_ref6","_ref6$disableDate","quarterLocal","_ref6$dayjsLocale","_ref6$cancelRangeSele","quarterArr","getYears","_ref7","_ref7$disableDate","_ref7$dayjsLocale","_ref7$cancelRangeSele","startYear","endYear","yearArr","getMonths","params","_params$disableDate","monthLocal","_params$dayjsLocale","_params$cancelRangeSe","MonthArr","flagActive","data","_ref8","args","_extends","_objectDestructuringEmpty","start","end","hoverStart","hoverEnd","_args$type","_args$isRange","isRange","_args$multiple","multiple","row","item","_item","_value$some","some","call","val","isStart","isHoverStart","isEnd","isHoverEnd","highlight","startOfRange","endOfRange","hoverHighlight","hoverStartOfRange","hoverEndOfRange","extractTimeObj","timeFormat","matchedMeridiem","match","timeReg","matchedTimeStr","_matchedTimeStr$0$spl","split","_matchedTimeStr$0$spl2","_slicedToArray","_matchedTimeStr$0$spl3","_matchedTimeStr$0$spl4","_matchedTimeStr$0$spl5","_matchedTimeStr$0$spl6","isEnabledDate","_ref9","mode","availableMode","isEnabled","isArray","formattedDisabledDate","parseToDayjs","isIncludes","from","to","before","after","compareMin","compareMax","covertToDate","valueType"],"mappings":"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"}