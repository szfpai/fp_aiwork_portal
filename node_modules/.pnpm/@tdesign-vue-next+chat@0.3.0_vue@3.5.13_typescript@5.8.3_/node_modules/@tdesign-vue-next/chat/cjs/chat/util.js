/**
 * tdesign-vue-chat v0.3.0
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _classCallCheck = require('@babel/runtime/helpers/classCallCheck');
var _createClass = require('@babel/runtime/helpers/createClass');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var tdesignVueNext = require('tdesign-vue-next');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _classCallCheck__default = /*#__PURE__*/_interopDefaultLegacy(_classCallCheck);
var _createClass__default = /*#__PURE__*/_interopDefaultLegacy(_createClass);
var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function getUrl(model) {
  var url;
  switch (model) {
    case "hunyuan":
    case "hunyuan-13B":
    case "hunyuan-lite":
    case "hunyuan-vision":
      url = "http://hunyuanapi.woa.com/openapi/v1/chat/completions";
      break;
    case "chatgpt":
      url = "url2";
      break;
    default:
      url = "";
  }
  return url;
}
function getMofaUrl() {
  var url = "";
  if (process.env.NODE_ENV === "development") {
    url = "/completions";
  } else {
    url = "https://mofa.woa.com/api/v1/chat/completions";
  }
  return url;
}
var formatDateByRule = function formatDateByRule(date, ruleStr) {
  var o = {
    "y+": date.getFullYear(),
    "M+": date.getMonth() + 1,
    "d+": date.getDate(),
    "h+": date.getHours(),
    "m+": date.getMinutes(),
    "s+": date.getSeconds()
  };
  var rule = ruleStr;
  if (/(y+)/.test(rule)) {
    rule = rule.replace(RegExp.$1, "".concat(date.getFullYear()).substr(4 - RegExp.$1.length));
  }
  for (var k in o) {
    if (new RegExp("(".concat(k, ")")).test(rule)) {
      rule = rule.replace(RegExp.$1, RegExp.$1.length === 1 ? o[k] : "00".concat(o[k]).substr("".concat(o[k]).length));
    }
  }
  return rule;
};
var MessagePluginSingleton = /*#__PURE__*/function () {
  function MessagePluginSingleton() {
    _classCallCheck__default["default"](this, MessagePluginSingleton);
    _defineProperty__default["default"](this, "messagePlugin", void 0);
    this.messagePlugin = null;
  }
  return _createClass__default["default"](MessagePluginSingleton, [{
    key: "showSuccess",
    value: function showSuccess(copyTextSuccess) {
      if (this.messagePlugin) {
        tdesignVueNext.MessagePlugin.closeAll();
      }
      this.messagePlugin = tdesignVueNext.MessagePlugin.success(copyTextSuccess, 1e3);
    }
  }, {
    key: "showError",
    value: function showError(copyTextFail) {
      if (this.messagePlugin) {
        tdesignVueNext.MessagePlugin.closeAll();
      }
      this.messagePlugin = tdesignVueNext.MessagePlugin.error(copyTextFail, 1e3);
    }
  }], [{
    key: "getInstance",
    value: function getInstance() {
      if (!MessagePluginSingleton.instance) {
        MessagePluginSingleton.instance = new MessagePluginSingleton();
      }
      return MessagePluginSingleton.instance;
    }
  }]);
}();
_defineProperty__default["default"](MessagePluginSingleton, "instance", void 0);
var SSEResponse = /*#__PURE__*/function () {
  function SSEResponse(data) {
    var _this = this;
    var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 300;
    var error = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    _classCallCheck__default["default"](this, SSEResponse);
    _defineProperty__default["default"](this, "controller", void 0);
    _defineProperty__default["default"](this, "encoder", new TextEncoder());
    _defineProperty__default["default"](this, "stream", void 0);
    _defineProperty__default["default"](this, "error", void 0);
    this.data = data;
    this.delay = delay;
    this.error = error;
    this.stream = new ReadableStream({
      start: function start(controller) {
        _this.controller = controller;
        if (!_this.error) {
          _this.pushData();
        }
      },
      cancel: function cancel(reason) {}
    });
  }
  return _createClass__default["default"](SSEResponse, [{
    key: "pushData",
    value: function pushData() {
      if (this.data.length === 0) {
        this.controller.close();
        return;
      }
      try {
        var chunk = this.data.slice(0, 1);
        this.data = this.data.slice(1);
        this.controller.enqueue(this.encoder.encode(chunk));
        if (this.data.length > 0) {
          this.pushData();
        } else {
          this.controller.close();
        }
      } catch (_unused) {}
    }
  }, {
    key: "getResponse",
    value: function getResponse() {
      var _this2 = this;
      return new Promise(function (resolve) {
        resolve(new Response(_this2.stream));
      });
    }
  }]);
}();

exports.MessagePluginSingleton = MessagePluginSingleton;
exports.SSEResponse = SSEResponse;
exports.formatDateByRule = formatDateByRule;
exports.getMofaUrl = getMofaUrl;
exports.getUrl = getUrl;
//# sourceMappingURL=util.js.map
