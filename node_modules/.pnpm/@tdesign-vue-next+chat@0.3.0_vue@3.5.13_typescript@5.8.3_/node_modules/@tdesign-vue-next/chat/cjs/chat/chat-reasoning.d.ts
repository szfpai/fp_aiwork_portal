declare const _default: import("vue").DefineComponent<{
    collapsePanelProps: {
        type: import("vue").PropType<import("tdesign-vue-next").TdCollapsePanelProps>;
        default: () => import("tdesign-vue-next").TdCollapsePanelProps;
    };
    expandIcon: {
        type: import("vue").PropType<(h: typeof import("vue").h) => import("..").SlotReturnValue>;
    };
    expandIconPlacement: {
        type: import("vue").PropType<"left" | "right">;
        default: "left" | "right";
        validator(val: "left" | "right"): boolean;
    };
    header: {
        type: import("vue").PropType<(h: typeof import("vue").h) => import("..").SlotReturnValue>;
    };
    headerRightContent: {
        type: import("vue").PropType<(h: typeof import("vue").h) => import("..").SlotReturnValue>;
    };
    onExpandChange: {
        type: import("vue").PropType<(value: boolean) => void>;
        default: () => void;
    };
    collapsed: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    modelValue: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    defaultCollapsed: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "update:collapsed"[], "update:collapsed", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    collapsePanelProps: {
        type: import("vue").PropType<import("tdesign-vue-next").TdCollapsePanelProps>;
        default: () => import("tdesign-vue-next").TdCollapsePanelProps;
    };
    expandIcon: {
        type: import("vue").PropType<(h: typeof import("vue").h) => import("..").SlotReturnValue>;
    };
    expandIconPlacement: {
        type: import("vue").PropType<"left" | "right">;
        default: "left" | "right";
        validator(val: "left" | "right"): boolean;
    };
    header: {
        type: import("vue").PropType<(h: typeof import("vue").h) => import("..").SlotReturnValue>;
    };
    headerRightContent: {
        type: import("vue").PropType<(h: typeof import("vue").h) => import("..").SlotReturnValue>;
    };
    onExpandChange: {
        type: import("vue").PropType<(value: boolean) => void>;
        default: () => void;
    };
    collapsed: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    modelValue: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    defaultCollapsed: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
}>> & {
    "onUpdate:collapsed"?: (...args: any[]) => any;
}, {
    modelValue: boolean;
    collapsed: boolean;
    onExpandChange: (value: boolean) => void;
    expandIconPlacement: "left" | "right";
    collapsePanelProps: import("tdesign-vue-next").TdCollapsePanelProps;
    defaultCollapsed: boolean;
}, {}>;
export default _default;
