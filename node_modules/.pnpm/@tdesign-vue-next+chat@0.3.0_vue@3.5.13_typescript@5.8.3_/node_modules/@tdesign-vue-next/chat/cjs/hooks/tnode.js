/**
 * tdesign-vue-chat v0.3.0
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
var isFunction = require('../_chunks/dep-564eb3a6.js');
var camelCase = require('../_chunks/dep-adad3ae9.js');
var kebabCase = require('../_chunks/dep-4e7b00f6.js');
var utils_renderTnode = require('../utils/render-tnode.js');
require('../_chunks/dep-29409216.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-07868b50.js');
require('../_chunks/dep-8e4e04d4.js');
require('../_chunks/dep-9d60843d.js');
require('../_chunks/dep-6fa0a6ce.js');
require('../_chunks/dep-9d5d5e32.js');
require('../_chunks/dep-450670e7.js');
require('../_chunks/dep-6c8863dc.js');

function handleSlots(instance, name, params) {
  var _instance$slots$camel, _instance$slots, _instance$slots$kebab, _instance$slots2;
  var node = (_instance$slots$camel = (_instance$slots = instance.slots)[camelCase.camelCase_1(name)]) === null || _instance$slots$camel === void 0 ? void 0 : _instance$slots$camel.call(_instance$slots, params);
  if (node && node.filter(function (t) {
    return t.type.toString() !== "Symbol(v-cmt)";
  }).length) return node;
  node = (_instance$slots$kebab = (_instance$slots2 = instance.slots)[kebabCase.kebabCase_1(name)]) === null || _instance$slots$kebab === void 0 ? void 0 : _instance$slots$kebab.call(_instance$slots2, params);
  if (node && node.filter(function (t) {
    return t.type.toString() !== "Symbol(v-cmt)";
  }).length) return node;
  return null;
}
function isEmptyNode(node) {
  if ([void 0, null, ""].includes(node)) return true;
  var innerNodes = node instanceof Array ? node : [node];
  var r = innerNodes.filter(function (node2) {
    var _node2$type;
    return (node2 === null || node2 === void 0 || (_node2$type = node2.type) === null || _node2$type === void 0 ? void 0 : _node2$type.toString()) !== "Symbol(Comment)";
  });
  return !r.length;
}
var useTNodeJSX = function useTNodeJSX() {
  var instance = vue.getCurrentInstance();
  return function (name, options) {
    var params = utils_renderTnode.getParams(options);
    var defaultNode = utils_renderTnode.getDefaultNode(options);
    var slotFirst = utils_renderTnode.getSlotFirst(options);
    var propsNode;
    if (Object.keys(instance.props).includes(name)) {
      propsNode = instance.props[name];
    }
    if (propsNode === false) return;
    if (propsNode === true) {
      return handleSlots(instance, name, params) || defaultNode;
    }
    if (isFunction.isFunction_1(propsNode)) return propsNode(vue.h, params);
    var isPropsEmpty = [void 0, params, ""].includes(propsNode);
    if ((isPropsEmpty || slotFirst) && (instance.slots[camelCase.camelCase_1(name)] || instance.slots[kebabCase.kebabCase_1(name)])) {
      return handleSlots(instance, name, params);
    }
    return propsNode;
  };
};
var useTNodeDefault = function useTNodeDefault() {
  var renderTNodeJSX = useTNodeJSX();
  return function (name, options) {
    var defaultNode = utils_renderTnode.getDefaultNode(options);
    return renderTNodeJSX(name, options) || defaultNode;
  };
};
var useContent = function useContent() {
  var renderTNodeJSX = useTNodeJSX();
  return function (name1, name2, options) {
    var params = utils_renderTnode.getParams(options);
    var defaultNode = utils_renderTnode.getDefaultNode(options);
    var toParams = params ? {
      params: params
    } : void 0;
    var node1 = renderTNodeJSX(name1, toParams);
    var node2 = renderTNodeJSX(name2, toParams);
    var res = isEmptyNode(node1) ? node2 : node1;
    return isEmptyNode(res) ? defaultNode : res;
  };
};

exports.useContent = useContent;
exports.useTNodeDefault = useTNodeDefault;
exports.useTNodeJSX = useTNodeJSX;
//# sourceMappingURL=tnode.js.map
