import { ChatGlobalConfigProvider } from './context';
import type { ConfigProviderProps } from './config-provider';
import { GlobalConfigProvider } from 'tdesign-vue-next';
export declare function useConfig<T extends keyof ChatGlobalConfigProvider>(componentName?: T, componentLocale?: ChatGlobalConfigProvider[T]): {
    t: <T_1>(pattern: T_1, ...args: any[]) => any;
    global: import("vue").ComputedRef<any>;
    globalConfig: import("vue").ComputedRef<any>;
    classPrefix: import("vue").ComputedRef<string>;
};
export declare const provideConfig: (props: ConfigProviderProps) => import("vue").ComputedRef<GlobalConfigProvider & {
    chat: {
        placeholder: string;
        stopBtnText: string;
        refreshTipText: string;
        copyTipText: string;
        likeTipText: string;
        dislikeTipText: string;
        copyCodeBtnText: string;
        copyCodeSuccessText: string;
        clearHistoryBtnText: string;
        copyTextSuccess: string;
        copyTextFail: string;
        confirmClearHistory: string;
    };
}>;
