/**
 * tdesign-vue-chat v0.3.0
 * (c) 2025 tdesign
 * @license MIT
 */

var props = {
  actions: {
    type: Function
  },
  name: {
    type: [String, Function]
  },
  avatar: {
    type: [String, Object, Function]
  },
  content: {
    type: [String],
    "default": ""
  },
  datetime: {
    type: [String, Function]
  },
  role: {
    type: [String, Function],
    "default": "",
    validator: function validator(val) {
      if (!val) return true;
      return ["assistant", "user", "error", "model-change", "system"].includes(val);
    }
  },
  isGood: {
    type: Boolean,
    "default": false
  },
  isBad: {
    type: Boolean,
    "default": false
  },
  layout: {
    type: [String],
    "default": "both",
    validator: function validator(val) {
      if (!val) return true;
      return ["single", "both"].includes(val);
    }
  },
  isStreamLoad: {
    type: Boolean,
    "default": false
  },
  clearHistory: {
    type: [Boolean],
    "default": true
  },
  reverse: {
    type: Boolean,
    "default": true
  },
  textLoading: {
    type: [Boolean, Function],
    "default": false
  },
  data: {
    type: Array
  },
  variant: {
    type: String,
    "default": "text",
    validator: function validator(val) {
      if (!val) return true;
      return ["text", "base", "outline"].includes(val);
    }
  },
  animation: {
    type: String,
    "default": "skeleton",
    validator: function validator(val) {
      if (!val) return true;
      return ["skeleton", "moving", "gradient"].includes(val);
    }
  },
  onClear: Function,
  operationBtn: {
    type: Array,
    "default": ["replay", "copy", "good", "bad"]
  },
  onOperation: Function,
  disabled: Boolean,
  onSend: Function,
  onStop: Function,
  onChange: Function,
  onScroll: Function,
  onFocus: Function,
  onBlur: Function,
  autosize: {
    type: [Boolean, Object],
    "default": {
      minRows: 1,
      maxRows: 5
    }
  },
  reasoning: {
    type: [Boolean, Object, String],
    "default": false
  },
  textareaProps: {
    type: Object
  }
};

export { props as default };
//# sourceMappingURL=props.js.map
