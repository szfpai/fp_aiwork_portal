import { TdChatItemProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    actions: {
        type: PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    animation: {
        type: PropType<"gradient" | "skeleton" | "moving">;
        default: "gradient" | "skeleton" | "moving";
        validator(val: TdChatItemProps['animation']): boolean;
    };
    avatar: {
        type: PropType<String | ((h: typeof import("vue").h) => import("..").SlotReturnValue) | import("tdesign-vue-next").TdAvatarProps>;
    };
    content: {
        type: PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    datetime: {
        type: PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    name: {
        type: PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    reasoning: {
        type: PropType<boolean | import("./type").TdChatReasoning>;
        default: boolean | import("./type").TdChatReasoning;
    };
    role: {
        type: PropType<"error" | "user" | "assistant" | "model-change" | "system">;
        validator(val: TdChatItemProps['role']): boolean;
    };
    textLoading: BooleanConstructor;
    variant: {
        type: PropType<"outline" | "base" | "text">;
        default: "outline" | "base" | "text";
        validator(val: TdChatItemProps['variant']): boolean;
    };
};
export default _default;
