/**
 * tdesign-vue-chat v0.3.0
 * (c) 2025 tdesign
 * @license MIT
 */

import 'vue';
import { useConfig } from '../config-provider/useConfig.js';
import '../_chunks/dep-71e79d05.js';
import '../_chunks/dep-bcb12ef4.js';
import '@babel/runtime/helpers/typeof';
import '../_chunks/dep-00225ab5.js';
import '../_chunks/dep-9877a0b1.js';
import '../_chunks/dep-790f0c90.js';
import '../_chunks/dep-f4def779.js';
import '../_chunks/dep-9ad1aba4.js';
import '../_common/js/global-config/default-config.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_chunks/dep-e130a03a.js';
import '../_chunks/dep-7c13804f.js';
import '../_chunks/dep-7ca3deee.js';
import '../_chunks/dep-44c1237e.js';

function useCommonClassName() {
  var _useConfig = useConfig(),
    classPrefix = _useConfig.classPrefix;
  var sizeClassNames = {
    small: "".concat(classPrefix.value, "-size-s"),
    medium: "".concat(classPrefix.value, "-size-m"),
    large: "".concat(classPrefix.value, "-size-l"),
    "default": "",
    xs: "".concat(classPrefix.value, "-size-xs"),
    xl: "".concat(classPrefix.value, "-size-xl"),
    block: "".concat(classPrefix.value, "-size-full-width")
  };
  var statusClassNames = {
    loading: "".concat(classPrefix.value, "-is-loading"),
    loadMore: "".concat(classPrefix.value, "-is-load-more"),
    disabled: "".concat(classPrefix.value, "-is-disabled"),
    focused: "".concat(classPrefix.value, "-is-focused"),
    success: "".concat(classPrefix.value, "-is-success"),
    error: "".concat(classPrefix.value, "-is-error"),
    warning: "".concat(classPrefix.value, "-is-warning"),
    selected: "".concat(classPrefix.value, "-is-selected"),
    active: "".concat(classPrefix.value, "-is-active"),
    checked: "".concat(classPrefix.value, "-is-checked"),
    current: "".concat(classPrefix.value, "-is-current"),
    hidden: "".concat(classPrefix.value, "-is-hidden"),
    visible: "".concat(classPrefix.value, "-is-visible"),
    expanded: "".concat(classPrefix.value, "-is-expanded"),
    indeterminate: "".concat(classPrefix.value, "-is-indeterminate")
  };
  return {
    classPrefix: classPrefix,
    sizeClassNames: sizeClassNames,
    statusClassNames: statusClassNames,
    classNames: {
      size: sizeClassNames,
      status: statusClassNames
    }
  };
}

export { useCommonClassName as default };
//# sourceMappingURL=useCommonClassName.js.map
