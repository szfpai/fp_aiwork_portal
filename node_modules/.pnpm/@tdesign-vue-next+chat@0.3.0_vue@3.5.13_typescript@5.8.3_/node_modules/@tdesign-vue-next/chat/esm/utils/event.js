/**
 * tdesign-vue-chat v0.3.0
 * (c) 2025 tdesign
 * @license MIT
 */

import { i as isFunction_1 } from '../_chunks/dep-df48890d.js';
import { i as isString_1 } from '../_chunks/dep-1cf9d488.js';
import { getPropsApiByEvent } from './helper.js';
import '../_chunks/dep-7157a284.js';
import '../_chunks/dep-cc9aa380.js';
import '@babel/runtime/helpers/typeof';
import '../_chunks/dep-cb9884de.js';
import '../_chunks/dep-2fe70bc7.js';
import '@babel/runtime/helpers/objectWithoutProperties';
import '@babel/runtime/helpers/slicedToArray';
import '@babel/runtime/helpers/defineProperty';
import '../_chunks/dep-36be8e73.js';
import '../_chunks/dep-36edafcb.js';

function emitEvent(vm, eventName) {
  var emitEventMethodName;
  if (isString_1(eventName)) {
    emitEventMethodName = getPropsApiByEvent(eventName);
  }
  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }
  if (isFunction_1(vm.$props[emitEventMethodName])) {
    var _vm$$props;
    (_vm$$props = vm.$props)[emitEventMethodName].apply(_vm$$props, args);
  } else {
    vm.$emit.apply(vm, [eventName].concat(args));
  }
}

export { emitEvent };
//# sourceMappingURL=event.js.map
