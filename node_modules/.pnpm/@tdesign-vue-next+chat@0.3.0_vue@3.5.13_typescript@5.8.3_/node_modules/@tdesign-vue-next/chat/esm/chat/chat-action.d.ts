declare const _default: import("vue").DefineComponent<{
    isGood: {
        type: import("vue").PropType<Boolean>;
        default: boolean;
    };
    isBad: {
        type: import("vue").PropType<Boolean>;
        default: boolean;
    };
    content: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
        default: string;
    };
    disabled: import("vue").PropType<boolean>;
    operationBtn: {
        type: import("vue").PropType<import("./props").operationBtnType[]>;
        default: string[];
    };
    onOperation: import("vue").PropType<(value: string, context: {
        e: MouseEvent;
        index?: number;
        item?: import("./type").TdChatItemProps;
    }) => void>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "operation"[], "operation", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    isGood: {
        type: import("vue").PropType<Boolean>;
        default: boolean;
    };
    isBad: {
        type: import("vue").PropType<Boolean>;
        default: boolean;
    };
    content: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
        default: string;
    };
    disabled: import("vue").PropType<boolean>;
    operationBtn: {
        type: import("vue").PropType<import("./props").operationBtnType[]>;
        default: string[];
    };
    onOperation: import("vue").PropType<(value: string, context: {
        e: MouseEvent;
        index?: number;
        item?: import("./type").TdChatItemProps;
    }) => void>;
}>> & {
    onOperation?: (...args: any[]) => any;
}, {
    content: string | ((h: typeof import("vue").h) => import("..").SlotReturnValue);
    isGood: Boolean;
    isBad: Boolean;
    operationBtn: import("./props").operationBtnType[];
}, {}>;
export default _default;
