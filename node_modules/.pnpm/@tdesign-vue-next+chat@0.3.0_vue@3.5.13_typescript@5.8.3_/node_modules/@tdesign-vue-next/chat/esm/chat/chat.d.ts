import { TdChatItemProps } from './type';
declare const _default: import("vue").DefineComponent<{
    data: {
        type: import("vue").PropType<TdChatItemProps[]>;
    };
    layout: {
        type: import("vue").PropType<import("./type").Layout>;
        default: string;
        validator(val: string): boolean;
    };
    clearHistory: {
        type: import("vue").PropType<boolean | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
        default: boolean | ((h: typeof import("vue").h) => import("..").SlotReturnValue);
    };
    reverse: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    isStreamLoad: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    textLoading: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    animation: {
        type: import("vue").PropType<"gradient" | "skeleton" | "moving">;
        default: string;
        validator(val: string): boolean;
    };
    onClear: import("vue").PropType<(context: {
        e: MouseEvent;
    }) => void>;
    onScroll: import("vue").PropType<(e: Event) => void>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("scroll" | "clear")[], "clear" | "scroll", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    data: {
        type: import("vue").PropType<TdChatItemProps[]>;
    };
    layout: {
        type: import("vue").PropType<import("./type").Layout>;
        default: string;
        validator(val: string): boolean;
    };
    clearHistory: {
        type: import("vue").PropType<boolean | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
        default: boolean | ((h: typeof import("vue").h) => import("..").SlotReturnValue);
    };
    reverse: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    isStreamLoad: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    textLoading: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    animation: {
        type: import("vue").PropType<"gradient" | "skeleton" | "moving">;
        default: string;
        validator(val: string): boolean;
    };
    onClear: import("vue").PropType<(context: {
        e: MouseEvent;
    }) => void>;
    onScroll: import("vue").PropType<(e: Event) => void>;
}>> & {
    onScroll?: (...args: any[]) => any;
    onClear?: (...args: any[]) => any;
}, {
    reverse: boolean;
    animation: "gradient" | "skeleton" | "moving";
    layout: import("./type").Layout;
    isStreamLoad: boolean;
    clearHistory: boolean | ((h: typeof import("vue").h) => import("..").SlotReturnValue);
    textLoading: boolean;
}, {}>;
export default _default;
