// src/index.ts
var regexCharsRegex = /[-[\]{}()*+?.,\\^$\\/|#]/g;
var escapeRegexChars = (comment) => {
  return comment && regexCharsRegex.test(comment) ? comment.replace(regexCharsRegex, "\\$&") : comment;
};
var DEFAULT_OPTIONS = {
  enabled: true,
  domainList: [],
  start: "devBlock:start",
  end: "devBlock:end"
};
var stripPlugin = (options) => {
  const normalizedOptions = {
    ...DEFAULT_OPTIONS,
    ...options
  };
  return {
    name: "vite-plugin-strip",
    enforce: "pre",
    transform(code, id) {
      if (!normalizedOptions.enabled || !/\.([jt]sx?)$/.test(id)) {
        return code;
      }
      if (/\/src\/main\.(js|ts)/.test(id)) {
        const domainList = normalizedOptions.domainList;
        if (Array.isArray(domainList) && domainList.length > 0) {
          const disableStr = JSON.stringify(domainList);
          code = `${code}
 if (${disableStr}.indexOf(location.host) !== -1) { console.log = function () {} }`;
        }
      }
      const startComment = escapeRegexChars(normalizedOptions.start);
      const endComment = escapeRegexChars(normalizedOptions.end);
      const startWhitespaceMatcher = "";
      const endWhitespaceMatcher = "";
      const regexPattern = new RegExp(
        startWhitespaceMatcher + "\\/\\* ?" + startComment + " ?\\*\\/[\\s\\S]*?\\/\\* ?" + endComment + " ?\\*\\/" + endWhitespaceMatcher,
        "g"
      );
      return code.replace(regexPattern, "");
    }
  };
};
var src_default = stripPlugin;
export {
  src_default as default
};
